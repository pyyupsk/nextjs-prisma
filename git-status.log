On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
	new file:   .eslintrc.json
	new file:   .gitignore
	new file:   .prettierrc.json
	new file:   LICENSE
	new file:   README.md
	new file:   components.json
	new file:   next.config.mjs
	new file:   package.json
	new file:   pnpm-lock.yaml
	new file:   postcss.config.mjs
	new file:   prisma/migrations/20240726142102_init/migration.sql
	new file:   prisma/migrations/migration_lock.toml
	new file:   prisma/schema.prisma
	new file:   public/next.svg
	new file:   public/vercel.svg
	new file:   src/action/tasks.ts
	new file:   src/app/favicon.ico
	new file:   src/app/layout.tsx
	new file:   src/app/page.tsx
	new file:   src/components/task-action/delete.tsx
	new file:   src/components/task-action/edit.tsx
	new file:   src/components/task-action/index.tsx
	new file:   src/components/task-create.tsx
	new file:   src/components/task-item.tsx
	new file:   src/components/task-list.tsx
	new file:   src/components/ui/badge.tsx
	new file:   src/components/ui/button.tsx
	new file:   src/components/ui/checkbox.tsx
	new file:   src/components/ui/dialog.tsx
	new file:   src/components/ui/dropdown-menu.tsx
	new file:   src/components/ui/form.tsx
	new file:   src/components/ui/input.tsx
	new file:   src/components/ui/label.tsx
	new file:   src/components/ui/select.tsx
	new file:   src/components/ui/toast.tsx
	new file:   src/components/ui/toaster.tsx
	new file:   src/components/ui/use-toast.ts
	new file:   src/db/index.ts
	new file:   src/lib/utils.ts
	new file:   src/styles/globals.css
	new file:   tailwind.config.ts
	new file:   tsconfig.json

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	git-status.log

diff --git a/.eslintrc.json b/.eslintrc.json
new file mode 100644
index 0000000..879e512
--- /dev/null
+++ b/.eslintrc.json
@@ -0,0 +1,9 @@
+{
+    "plugins": ["prettier"],
+    "extends": ["next/core-web-vitals", "eslint:recommended", "plugin:prettier/recommended"],
+    "rules": {
+        "no-unused-vars": "warn",
+        "prettier/prettier": "error"
+    },
+    "ignorePatterns": ["**/node_modules/**", "src/components/ui/**/*.{js,ts,jsx,tsx}"]
+}
diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..a84107a
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1,37 @@
+# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
+
+# dependencies
+/node_modules
+/.pnp
+.pnp.js
+.yarn/install-state.gz
+
+# testing
+/coverage
+
+# next.js
+/.next/
+/out/
+
+# production
+/build
+
+# misc
+.DS_Store
+*.pem
+
+# debug
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
+
+# local env files
+.env
+.env*.local
+
+# vercel
+.vercel
+
+# typescript
+*.tsbuildinfo
+next-env.d.ts
diff --git a/.prettierrc.json b/.prettierrc.json
new file mode 100644
index 0000000..38bf0bb
--- /dev/null
+++ b/.prettierrc.json
@@ -0,0 +1,9 @@
+{
+    "$schema": "https://json.schemastore.org/prettierrc",
+    "plugins": ["prettier-plugin-tailwindcss", "prettier-plugin-pkg", "@ianvs/prettier-plugin-sort-imports"],
+    "singleQuote": true,
+    "semi": true,
+    "trailingComma": "all",
+    "tabWidth": 4,
+    "printWidth": 120
+}
diff --git a/LICENSE b/LICENSE
new file mode 100644
index 0000000..26359df
--- /dev/null
+++ b/LICENSE
@@ -0,0 +1,22 @@
+(The MIT License)
+
+Copyright (c) 2024 pyyupsk <pyyupsk@proton.me>
+
+Permission is hereby granted, free of charge, to any person obtaining
+a copy of this software and associated documentation files (the
+'Software'), to deal in the Software without restriction, including
+without limitation the rights to use, copy, modify, merge, publish,
+distribute, sublicense, and/or sell copies of the Software, and to
+permit persons to whom the Software is furnished to do so, subject to
+the following conditions:
+
+The above copyright notice and this permission notice shall be
+included in all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
+EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
+MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
+IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
+CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
+TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
+SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
\ No newline at end of file
diff --git a/README.md b/README.md
new file mode 100644
index 0000000..1efe056
--- /dev/null
+++ b/README.md
@@ -0,0 +1,95 @@
+# Next.js and Prisma ORM
+
+This is a simple task manager application built using Next.js and Prisma ORM. The app allows users to create, update, and delete task items, providing a straightforward interface for task management.
+
+## Table of Contents
+
+- [Next.js and Prisma ORM](#nextjs-and-prisma-orm)
+  - [Table of Contents](#table-of-contents)
+  - [Features](#features)
+  - [Tech Stack](#tech-stack)
+  - [Installation](#installation)
+  - [License](#license)
+  - [Contact](#contact)
+  - [Acknowledgements](#acknowledgements)
+
+## Features
+
+-   Add new task
+-   Mark task as completed
+-   Edit existing task
+-   Delete task
+
+## Tech Stack
+
+-   **Framework:** [Next.js](https://nextjs.org/)
+-   **ORM:** [Prisma](https://www.prisma.io/)
+-   **Database:** [Cockroach DB](https://www.cockroachlabs.com/) (default) or any other supported database
+
+## Installation
+
+1. **Clone the repository**
+
+    ```bash
+    git clone https://github.com/pyyupsk/nextjs-prisma.git
+    cd nextjs-prisma
+    ```
+
+2. **Install dependencies**
+
+    ```bash
+    npm install
+    ```
+
+3. **Set up the database**
+
+    Create a `.env` file in the root directory and add your database URL. For example, you can use the following:
+
+    ```env
+    DATABASE_URL=YOUR_DATABASE_URL
+    ```
+
+4. **Migrate the database**
+
+    ```bash
+    npx prisma migrate dev --name init
+    ```
+
+5. **Generate the Prisma Client**
+
+    ```bash
+    npx prisma generate
+    ```
+
+6. **Start the development server**
+
+    ```bash
+    npm run dev
+    ```
+
+    The app will be available at [http://localhost:3000](http://localhost:3000).
+
+## License
+
+This project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.
+
+---
+
+Happy coding! If you have any questions or feedback, feel free to open an issue or reach out.
+
+---
+
+## Contact
+
+-   GitHub: [pyyupsk](https://github.com/pyyupsk)
+-   Email: pyyupsk@proton.me
+
+---
+
+## Acknowledgements
+
+-   [Next.js Documentation](https://nextjs.org/docs)
+-   [Prisma Documentation](https://www.prisma.io/docs)
+-   [Cockroach DB Documentation](https://www.cockroachlabs.com/docs/)
+
+---
diff --git a/components.json b/components.json
new file mode 100644
index 0000000..92cde44
--- /dev/null
+++ b/components.json
@@ -0,0 +1,17 @@
+{
+    "$schema": "https://ui.shadcn.com/schema.json",
+    "style": "default",
+    "rsc": true,
+    "tsx": true,
+    "tailwind": {
+        "config": "tailwind.config.ts",
+        "css": "src/styles/globals.css",
+        "baseColor": "slate",
+        "cssVariables": true,
+        "prefix": ""
+    },
+    "aliases": {
+        "components": "@/components",
+        "utils": "@/lib/utils"
+    }
+}
diff --git a/next.config.mjs b/next.config.mjs
new file mode 100644
index 0000000..4678774
--- /dev/null
+++ b/next.config.mjs
@@ -0,0 +1,4 @@
+/** @type {import('next').NextConfig} */
+const nextConfig = {};
+
+export default nextConfig;
diff --git a/package.json b/package.json
new file mode 100644
index 0000000..a7f42b5
--- /dev/null
+++ b/package.json
@@ -0,0 +1,53 @@
+{
+    "name": "nextjs-prisma",
+    "version": "0.1.0",
+    "private": true,
+    "scripts": {
+        "build": "next build",
+        "dev": "next dev",
+        "format": "prettier --check .",
+        "format:fix": "prettier --write . --list-different",
+        "generate": "prisma generate",
+        "lint": "next lint",
+        "start": "next start"
+    },
+    "dependencies": {
+        "@hookform/resolvers": "^3.9.0",
+        "@prisma/client": "5.17.0",
+        "@radix-ui/react-checkbox": "^1.1.1",
+        "@radix-ui/react-dialog": "^1.1.1",
+        "@radix-ui/react-dropdown-menu": "^2.1.1",
+        "@radix-ui/react-label": "^2.1.0",
+        "@radix-ui/react-select": "^2.1.1",
+        "@radix-ui/react-slot": "^1.1.0",
+        "@radix-ui/react-toast": "^1.2.1",
+        "class-variance-authority": "^0.7.0",
+        "clsx": "^2.1.1",
+        "lucide-react": "^0.416.0",
+        "next": "14.2.5",
+        "react": "^18",
+        "react-dom": "^18",
+        "react-hook-form": "^7.52.1",
+        "tailwind-merge": "^2.4.0",
+        "tailwindcss-animate": "^1.0.7",
+        "zod": "^3.23.8",
+        "zustand": "^4.5.4"
+    },
+    "devDependencies": {
+        "@ianvs/prettier-plugin-sort-imports": "^4.3.1",
+        "@types/node": "^20",
+        "@types/react": "^18",
+        "@types/react-dom": "^18",
+        "eslint": "^8",
+        "eslint-config-next": "14.2.5",
+        "eslint-config-prettier": "^9.1.0",
+        "eslint-plugin-prettier": "^5.2.1",
+        "postcss": "^8",
+        "prettier": "^3.3.3",
+        "prettier-plugin-pkg": "^0.18.1",
+        "prettier-plugin-tailwindcss": "^0.6.5",
+        "prisma": "^5.17.0",
+        "tailwindcss": "^3.4.1",
+        "typescript": "^5.4.5"
+    }
+}
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
new file mode 100644
index 0000000..c0cd712
--- /dev/null
+++ b/pnpm-lock.yaml
@@ -0,0 +1,6275 @@
+lockfileVersion: '9.0'
+
+settings:
+    autoInstallPeers: true
+    excludeLinksFromLockfile: false
+
+importers:
+    .:
+        dependencies:
+            '@hookform/resolvers':
+                specifier: ^3.9.0
+                version: 3.9.0(react-hook-form@7.52.1(react@18.3.1))
+            '@prisma/client':
+                specifier: 5.17.0
+                version: 5.17.0(prisma@5.17.0)
+            '@radix-ui/react-checkbox':
+                specifier: ^1.1.1
+                version: 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-dialog':
+                specifier: ^1.1.1
+                version: 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-dropdown-menu':
+                specifier: ^2.1.1
+                version: 2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-label':
+                specifier: ^2.1.0
+                version: 2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-select':
+                specifier: ^2.1.1
+                version: 2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-slot':
+                specifier: ^1.1.0
+                version: 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-toast':
+                specifier: ^1.2.1
+                version: 1.2.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            class-variance-authority:
+                specifier: ^0.7.0
+                version: 0.7.0
+            clsx:
+                specifier: ^2.1.1
+                version: 2.1.1
+            lucide-react:
+                specifier: ^0.416.0
+                version: 0.416.0(react@18.3.1)
+            next:
+                specifier: 14.2.5
+                version: 14.2.5(@babel/core@7.24.9)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            react:
+                specifier: ^18
+                version: 18.3.1
+            react-dom:
+                specifier: ^18
+                version: 18.3.1(react@18.3.1)
+            react-hook-form:
+                specifier: ^7.52.1
+                version: 7.52.1(react@18.3.1)
+            tailwind-merge:
+                specifier: ^2.4.0
+                version: 2.4.0
+            tailwindcss-animate:
+                specifier: ^1.0.7
+                version: 1.0.7(tailwindcss@3.4.7)
+            zod:
+                specifier: ^3.23.8
+                version: 3.23.8
+            zustand:
+                specifier: ^4.5.4
+                version: 4.5.4(@types/react@18.3.3)(react@18.3.1)
+        devDependencies:
+            '@ianvs/prettier-plugin-sort-imports':
+                specifier: ^4.3.1
+                version: 4.3.1(prettier@3.3.3)
+            '@types/node':
+                specifier: ^20
+                version: 20.14.12
+            '@types/react':
+                specifier: ^18
+                version: 18.3.3
+            '@types/react-dom':
+                specifier: ^18
+                version: 18.3.0
+            eslint:
+                specifier: ^8
+                version: 8.57.0
+            eslint-config-next:
+                specifier: 14.2.5
+                version: 14.2.5(eslint@8.57.0)(typescript@5.4.5)
+            eslint-config-prettier:
+                specifier: ^9.1.0
+                version: 9.1.0(eslint@8.57.0)
+            eslint-plugin-prettier:
+                specifier: ^5.2.1
+                version: 5.2.1(eslint-config-prettier@9.1.0(eslint@8.57.0))(eslint@8.57.0)(prettier@3.3.3)
+            postcss:
+                specifier: ^8
+                version: 8.4.40
+            prettier:
+                specifier: ^3.3.3
+                version: 3.3.3
+            prettier-plugin-pkg:
+                specifier: ^0.18.1
+                version: 0.18.1(prettier@3.3.3)
+            prettier-plugin-tailwindcss:
+                specifier: ^0.6.5
+                version: 0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.1(prettier@3.3.3))(prettier@3.3.3)
+            prisma:
+                specifier: ^5.17.0
+                version: 5.17.0
+            tailwindcss:
+                specifier: ^3.4.1
+                version: 3.4.7
+            typescript:
+                specifier: ^5.4.5
+                version: 5.4.5
+
+packages:
+    '@alloc/quick-lru@5.2.0':
+        resolution:
+            {
+                integrity: sha512-UrcABB+4bUrFABwbluTIBErXwvbsU/V7TZWfmbgJfbkwiBuziS9gxdODUyuiecfdGQ85jglMW6juS3+z5TsKLw==,
+            }
+        engines: { node: '>=10' }
+
+    '@ampproject/remapping@2.3.0':
+        resolution:
+            {
+                integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==,
+            }
+        engines: { node: '>=6.0.0' }
+
+    '@babel/code-frame@7.24.7':
+        resolution:
+            {
+                integrity: sha512-BcYH1CVJBO9tvyIZ2jVeXgSIMvGZ2FDRvDdOIVQyuklNKSsx+eppDEBq/g47Ayw+RqNFE+URvOShmf+f/qwAlA==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/compat-data@7.24.9':
+        resolution:
+            {
+                integrity: sha512-e701mcfApCJqMMueQI0Fb68Amflj83+dvAvHawoBpAz+GDjCIyGHzNwnefjsWJ3xiYAqqiQFoWbspGYBdb2/ng==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/core@7.24.9':
+        resolution:
+            {
+                integrity: sha512-5e3FI4Q3M3Pbr21+5xJwCv6ZT6KmGkI0vw3Tozy5ODAQFTIWe37iT8Cr7Ice2Ntb+M3iSKCEWMB1MBgKrW3whg==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/generator@7.24.10':
+        resolution:
+            {
+                integrity: sha512-o9HBZL1G2129luEUlG1hB4N/nlYNWHnpwlND9eOMclRqqu1YDy2sSYVCFUZwl8I1Gxh+QSRrP2vD7EpUmFVXxg==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/helper-compilation-targets@7.24.8':
+        resolution:
+            {
+                integrity: sha512-oU+UoqCHdp+nWVDkpldqIQL/i/bvAv53tRqLG/s+cOXxe66zOYLU7ar/Xs3LdmBihrUMEUhwu6dMZwbNOYDwvw==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/helper-environment-visitor@7.24.7':
+        resolution:
+            {
+                integrity: sha512-DoiN84+4Gnd0ncbBOM9AZENV4a5ZiL39HYMyZJGZ/AZEykHYdJw0wW3kdcsh9/Kn+BRXHLkkklZ51ecPKmI1CQ==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/helper-function-name@7.24.7':
+        resolution:
+            {
+                integrity: sha512-FyoJTsj/PEUWu1/TYRiXTIHc8lbw+TDYkZuoE43opPS5TrI7MyONBE1oNvfguEXAD9yhQRrVBnXdXzSLQl9XnA==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/helper-hoist-variables@7.24.7':
+        resolution:
+            {
+                integrity: sha512-MJJwhkoGy5c4ehfoRyrJ/owKeMl19U54h27YYftT0o2teQ3FJ3nQUf/I3LlJsX4l3qlw7WRXUmiyajvHXoTubQ==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/helper-module-imports@7.24.7':
+        resolution:
+            {
+                integrity: sha512-8AyH3C+74cgCVVXow/myrynrAGv+nTVg5vKu2nZph9x7RcRwzmh0VFallJuFTZ9mx6u4eSdXZfcOzSqTUm0HCA==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/helper-module-transforms@7.24.9':
+        resolution:
+            {
+                integrity: sha512-oYbh+rtFKj/HwBQkFlUzvcybzklmVdVV3UU+mN7n2t/q3yGHbuVdNxyFvSBO1tfvjyArpHNcWMAzsSPdyI46hw==,
+            }
+        engines: { node: '>=6.9.0' }
+        peerDependencies:
+            '@babel/core': ^7.0.0
+
+    '@babel/helper-simple-access@7.24.7':
+        resolution:
+            {
+                integrity: sha512-zBAIvbCMh5Ts+b86r/CjU+4XGYIs+R1j951gxI3KmmxBMhCg4oQMsv6ZXQ64XOm/cvzfU1FmoCyt6+owc5QMYg==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/helper-split-export-declaration@7.24.7':
+        resolution:
+            {
+                integrity: sha512-oy5V7pD+UvfkEATUKvIjvIAH/xCzfsFVw7ygW2SI6NClZzquT+mwdTfgfdbUiceh6iQO0CHtCPsyze/MZ2YbAA==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/helper-string-parser@7.24.8':
+        resolution:
+            {
+                integrity: sha512-pO9KhhRcuUyGnJWwyEgnRJTSIZHiT+vMD0kPeD+so0l7mxkMT19g3pjY9GTnHySck/hDzq+dtW/4VgnMkippsQ==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/helper-validator-identifier@7.24.7':
+        resolution:
+            {
+                integrity: sha512-rR+PBcQ1SMQDDyF6X0wxtG8QyLCgUB0eRAGguqRLfkCA87l7yAP7ehq8SNj96OOGTO8OBV70KhuFYcIkHXOg0w==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/helper-validator-option@7.24.8':
+        resolution:
+            {
+                integrity: sha512-xb8t9tD1MHLungh/AIoWYN+gVHaB9kwlu8gffXGSt3FFEIT7RjS+xWbc2vUD1UTZdIpKj/ab3rdqJ7ufngyi2Q==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/helpers@7.24.8':
+        resolution:
+            {
+                integrity: sha512-gV2265Nkcz7weJJfvDoAEVzC1e2OTDpkGbEsebse8koXUJUXPsCMi7sRo/+SPMuMZ9MtUPnGwITTnQnU5YjyaQ==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/highlight@7.24.7':
+        resolution:
+            {
+                integrity: sha512-EStJpq4OuY8xYfhGVXngigBJRWxftKX9ksiGDnmlY3o7B/V7KIAc9X4oiK87uPJSc/vs5L869bem5fhZa8caZw==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/parser@7.24.8':
+        resolution:
+            {
+                integrity: sha512-WzfbgXOkGzZiXXCqk43kKwZjzwx4oulxZi3nq2TYL9mOjQv6kYwul9mz6ID36njuL7Xkp6nJEfok848Zj10j/w==,
+            }
+        engines: { node: '>=6.0.0' }
+        hasBin: true
+
+    '@babel/template@7.24.7':
+        resolution:
+            {
+                integrity: sha512-jYqfPrU9JTF0PmPy1tLYHW4Mp4KlgxJD9l2nP9fD6yT/ICi554DmrWBAEYpIelzjHf1msDP3PxJIRt/nFNfBig==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/traverse@7.24.8':
+        resolution:
+            {
+                integrity: sha512-t0P1xxAPzEDcEPmjprAQq19NWum4K0EQPjMwZQZbHt+GiZqvjCHjj755Weq1YRPVzBI+3zSfvScfpnuIecVFJQ==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@babel/types@7.24.9':
+        resolution:
+            {
+                integrity: sha512-xm8XrMKz0IlUdocVbYJe0Z9xEgidU7msskG8BbhnTPK/HZ2z/7FP7ykqPgrUH+C+r414mNfNWam1f2vqOjqjYQ==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    '@eslint-community/eslint-utils@4.4.0':
+        resolution:
+            {
+                integrity: sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==,
+            }
+        engines: { node: ^12.22.0 || ^14.17.0 || >=16.0.0 }
+        peerDependencies:
+            eslint: ^6.0.0 || ^7.0.0 || >=8.0.0
+
+    '@eslint-community/regexpp@4.11.0':
+        resolution:
+            {
+                integrity: sha512-G/M/tIiMrTAxEWRfLfQJMmGNX28IxBg4PBz8XqQhqUHLFI6TL2htpIB1iQCj144V5ee/JaKyT9/WZ0MGZWfA7A==,
+            }
+        engines: { node: ^12.0.0 || ^14.0.0 || >=16.0.0 }
+
+    '@eslint/eslintrc@2.1.4':
+        resolution:
+            {
+                integrity: sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==,
+            }
+        engines: { node: ^12.22.0 || ^14.17.0 || >=16.0.0 }
+
+    '@eslint/js@8.57.0':
+        resolution:
+            {
+                integrity: sha512-Ys+3g2TaW7gADOJzPt83SJtCDhMjndcDMFVQ/Tj9iA1BfJzFKD9mAUXT3OenpuPHbI6P/myECxRJrofUsDx/5g==,
+            }
+        engines: { node: ^12.22.0 || ^14.17.0 || >=16.0.0 }
+
+    '@floating-ui/core@1.6.5':
+        resolution:
+            {
+                integrity: sha512-8GrTWmoFhm5BsMZOTHeGD2/0FLKLQQHvO/ZmQga4tKempYRLz8aqJGqXVuQgisnMObq2YZ2SgkwctN1LOOxcqA==,
+            }
+
+    '@floating-ui/dom@1.6.8':
+        resolution:
+            {
+                integrity: sha512-kx62rP19VZ767Q653wsP1XZCGIirkE09E0QUGNYTM/ttbbQHqcGPdSfWFxUyyNLc/W6aoJRBajOSXhP6GXjC0Q==,
+            }
+
+    '@floating-ui/react-dom@2.1.1':
+        resolution:
+            {
+                integrity: sha512-4h84MJt3CHrtG18mGsXuLCHMrug49d7DFkU0RMIyshRveBeyV2hmV/pDaF2Uxtu8kgq5r46llp5E5FQiR0K2Yg==,
+            }
+        peerDependencies:
+            react: '>=16.8.0'
+            react-dom: '>=16.8.0'
+
+    '@floating-ui/utils@0.2.5':
+        resolution:
+            {
+                integrity: sha512-sTcG+QZ6fdEUObICavU+aB3Mp8HY4n14wYHdxK4fXjPmv3PXZZeY5RaguJmGyeH/CJQhX3fqKUtS4qc1LoHwhQ==,
+            }
+
+    '@hookform/resolvers@3.9.0':
+        resolution:
+            {
+                integrity: sha512-bU0Gr4EepJ/EQsH/IwEzYLsT/PEj5C0ynLQ4m+GSHS+xKH4TfSelhluTgOaoc4kA5s7eCsQbM4wvZLzELmWzUg==,
+            }
+        peerDependencies:
+            react-hook-form: ^7.0.0
+
+    '@humanwhocodes/config-array@0.11.14':
+        resolution:
+            {
+                integrity: sha512-3T8LkOmg45BV5FICb15QQMsyUSWrQ8AygVfC7ZG32zOalnqrilm018ZVCw0eapXux8FtA33q8PSRSstjee3jSg==,
+            }
+        engines: { node: '>=10.10.0' }
+        deprecated: Use @eslint/config-array instead
+
+    '@humanwhocodes/module-importer@1.0.1':
+        resolution:
+            {
+                integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==,
+            }
+        engines: { node: '>=12.22' }
+
+    '@humanwhocodes/object-schema@2.0.3':
+        resolution:
+            {
+                integrity: sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==,
+            }
+        deprecated: Use @eslint/object-schema instead
+
+    '@ianvs/prettier-plugin-sort-imports@4.3.1':
+        resolution:
+            {
+                integrity: sha512-ZHwbyjkANZOjaBm3ZosADD2OUYGFzQGxfy67HmGZU94mHqe7g1LCMA7YYKB1Cq+UTPCBqlAYapY0KXAjKEw8Sg==,
+            }
+        peerDependencies:
+            '@vue/compiler-sfc': 2.7.x || 3.x
+            prettier: 2 || 3
+        peerDependenciesMeta:
+            '@vue/compiler-sfc':
+                optional: true
+
+    '@isaacs/cliui@8.0.2':
+        resolution:
+            {
+                integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==,
+            }
+        engines: { node: '>=12' }
+
+    '@jridgewell/gen-mapping@0.3.5':
+        resolution:
+            {
+                integrity: sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==,
+            }
+        engines: { node: '>=6.0.0' }
+
+    '@jridgewell/resolve-uri@3.1.2':
+        resolution:
+            {
+                integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==,
+            }
+        engines: { node: '>=6.0.0' }
+
+    '@jridgewell/set-array@1.2.1':
+        resolution:
+            {
+                integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==,
+            }
+        engines: { node: '>=6.0.0' }
+
+    '@jridgewell/sourcemap-codec@1.5.0':
+        resolution:
+            {
+                integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==,
+            }
+
+    '@jridgewell/trace-mapping@0.3.25':
+        resolution:
+            {
+                integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==,
+            }
+
+    '@next/env@14.2.5':
+        resolution:
+            {
+                integrity: sha512-/zZGkrTOsraVfYjGP8uM0p6r0BDT6xWpkjdVbcz66PJVSpwXX3yNiRycxAuDfBKGWBrZBXRuK/YVlkNgxHGwmA==,
+            }
+
+    '@next/eslint-plugin-next@14.2.5':
+        resolution:
+            {
+                integrity: sha512-LY3btOpPh+OTIpviNojDpUdIbHW9j0JBYBjsIp8IxtDFfYFyORvw3yNq6N231FVqQA7n7lwaf7xHbVJlA1ED7g==,
+            }
+
+    '@next/swc-darwin-arm64@14.2.5':
+        resolution:
+            {
+                integrity: sha512-/9zVxJ+K9lrzSGli1///ujyRfon/ZneeZ+v4ptpiPoOU+GKZnm8Wj8ELWU1Pm7GHltYRBklmXMTUqM/DqQ99FQ==,
+            }
+        engines: { node: '>= 10' }
+        cpu: [arm64]
+        os: [darwin]
+
+    '@next/swc-darwin-x64@14.2.5':
+        resolution:
+            {
+                integrity: sha512-vXHOPCwfDe9qLDuq7U1OYM2wUY+KQ4Ex6ozwsKxp26BlJ6XXbHleOUldenM67JRyBfVjv371oneEvYd3H2gNSA==,
+            }
+        engines: { node: '>= 10' }
+        cpu: [x64]
+        os: [darwin]
+
+    '@next/swc-linux-arm64-gnu@14.2.5':
+        resolution:
+            {
+                integrity: sha512-vlhB8wI+lj8q1ExFW8lbWutA4M2ZazQNvMWuEDqZcuJJc78iUnLdPPunBPX8rC4IgT6lIx/adB+Cwrl99MzNaA==,
+            }
+        engines: { node: '>= 10' }
+        cpu: [arm64]
+        os: [linux]
+
+    '@next/swc-linux-arm64-musl@14.2.5':
+        resolution:
+            {
+                integrity: sha512-NpDB9NUR2t0hXzJJwQSGu1IAOYybsfeB+LxpGsXrRIb7QOrYmidJz3shzY8cM6+rO4Aojuef0N/PEaX18pi9OA==,
+            }
+        engines: { node: '>= 10' }
+        cpu: [arm64]
+        os: [linux]
+
+    '@next/swc-linux-x64-gnu@14.2.5':
+        resolution:
+            {
+                integrity: sha512-8XFikMSxWleYNryWIjiCX+gU201YS+erTUidKdyOVYi5qUQo/gRxv/3N1oZFCgqpesN6FPeqGM72Zve+nReVXQ==,
+            }
+        engines: { node: '>= 10' }
+        cpu: [x64]
+        os: [linux]
+
+    '@next/swc-linux-x64-musl@14.2.5':
+        resolution:
+            {
+                integrity: sha512-6QLwi7RaYiQDcRDSU/os40r5o06b5ue7Jsk5JgdRBGGp8l37RZEh9JsLSM8QF0YDsgcosSeHjglgqi25+m04IQ==,
+            }
+        engines: { node: '>= 10' }
+        cpu: [x64]
+        os: [linux]
+
+    '@next/swc-win32-arm64-msvc@14.2.5':
+        resolution:
+            {
+                integrity: sha512-1GpG2VhbspO+aYoMOQPQiqc/tG3LzmsdBH0LhnDS3JrtDx2QmzXe0B6mSZZiN3Bq7IOMXxv1nlsjzoS1+9mzZw==,
+            }
+        engines: { node: '>= 10' }
+        cpu: [arm64]
+        os: [win32]
+
+    '@next/swc-win32-ia32-msvc@14.2.5':
+        resolution:
+            {
+                integrity: sha512-Igh9ZlxwvCDsu6438FXlQTHlRno4gFpJzqPjSIBZooD22tKeI4fE/YMRoHVJHmrQ2P5YL1DoZ0qaOKkbeFWeMg==,
+            }
+        engines: { node: '>= 10' }
+        cpu: [ia32]
+        os: [win32]
+
+    '@next/swc-win32-x64-msvc@14.2.5':
+        resolution:
+            {
+                integrity: sha512-tEQ7oinq1/CjSG9uSTerca3v4AZ+dFa+4Yu6ihaG8Ud8ddqLQgFGcnwYls13H5X5CPDPZJdYxyeMui6muOLd4g==,
+            }
+        engines: { node: '>= 10' }
+        cpu: [x64]
+        os: [win32]
+
+    '@nodelib/fs.scandir@2.1.5':
+        resolution:
+            {
+                integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==,
+            }
+        engines: { node: '>= 8' }
+
+    '@nodelib/fs.stat@2.0.5':
+        resolution:
+            {
+                integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==,
+            }
+        engines: { node: '>= 8' }
+
+    '@nodelib/fs.walk@1.2.8':
+        resolution:
+            {
+                integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==,
+            }
+        engines: { node: '>= 8' }
+
+    '@pkgjs/parseargs@0.11.0':
+        resolution:
+            {
+                integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==,
+            }
+        engines: { node: '>=14' }
+
+    '@pkgr/core@0.1.1':
+        resolution:
+            {
+                integrity: sha512-cq8o4cWH0ibXh9VGi5P20Tu9XF/0fFXl9EUinr9QfTM7a7p0oTA4iJRCQWppXR1Pg8dSM0UCItCkPwsk9qWWYA==,
+            }
+        engines: { node: ^12.20.0 || ^14.18.0 || >=16.0.0 }
+
+    '@prisma/client@5.17.0':
+        resolution:
+            {
+                integrity: sha512-N2tnyKayT0Zf7mHjwEyE8iG7FwTmXDHFZ1GnNhQp0pJUObsuel4ZZ1XwfuAYkq5mRIiC/Kot0kt0tGCfLJ70Jw==,
+            }
+        engines: { node: '>=16.13' }
+        peerDependencies:
+            prisma: '*'
+        peerDependenciesMeta:
+            prisma:
+                optional: true
+
+    '@prisma/debug@5.17.0':
+        resolution:
+            {
+                integrity: sha512-l7+AteR3P8FXiYyo496zkuoiJ5r9jLQEdUuxIxNCN1ud8rdbH3GTxm+f+dCyaSv9l9WY+29L9czaVRXz9mULfg==,
+            }
+
+    '@prisma/engines-version@5.17.0-31.393aa359c9ad4a4bb28630fb5613f9c281cde053':
+        resolution:
+            {
+                integrity: sha512-tUuxZZysZDcrk5oaNOdrBnnkoTtmNQPkzINFDjz7eG6vcs9AVDmA/F6K5Plsb2aQc/l5M2EnFqn3htng9FA4hg==,
+            }
+
+    '@prisma/engines@5.17.0':
+        resolution:
+            {
+                integrity: sha512-+r+Nf+JP210Jur+/X8SIPLtz+uW9YA4QO5IXA+KcSOBe/shT47bCcRMTYCbOESw3FFYFTwe7vU6KTWHKPiwvtg==,
+            }
+
+    '@prisma/fetch-engine@5.17.0':
+        resolution:
+            {
+                integrity: sha512-ESxiOaHuC488ilLPnrv/tM2KrPhQB5TRris/IeIV4ZvUuKeaicCl4Xj/JCQeG9IlxqOgf1cCg5h5vAzlewN91Q==,
+            }
+
+    '@prisma/get-platform@5.17.0':
+        resolution:
+            {
+                integrity: sha512-UlDgbRozCP1rfJ5Tlkf3Cnftb6srGrEQ4Nm3og+1Se2gWmCZ0hmPIi+tQikGDUVLlvOWx3Gyi9LzgRP+HTXV9w==,
+            }
+
+    '@radix-ui/number@1.1.0':
+        resolution:
+            {
+                integrity: sha512-V3gRzhVNU1ldS5XhAPTom1fOIo4ccrjjJgmE+LI2h/WaFpHmx0MQApT+KZHnx8abG6Avtfcz4WoEciMnpFT3HQ==,
+            }
+
+    '@radix-ui/primitive@1.1.0':
+        resolution:
+            {
+                integrity: sha512-4Z8dn6Upk0qk4P74xBhZ6Hd/w0mPEzOOLxy4xiPXOXqjF7jZS0VAKk7/x/H6FyY2zCkYJqePf1G5KmkmNJ4RBA==,
+            }
+
+    '@radix-ui/react-arrow@1.1.0':
+        resolution:
+            {
+                integrity: sha512-FmlW1rCg7hBpEBwFbjHwCW6AmWLQM6g/v0Sn8XbP9NvmSZ2San1FpQeyPtufzOMSIx7Y4dzjlHoifhp+7NkZhw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-checkbox@1.1.1':
+        resolution:
+            {
+                integrity: sha512-0i/EKJ222Afa1FE0C6pNJxDq1itzcl3HChE9DwskA4th4KRse8ojx8a1nVcOjwJdbpDLcz7uol77yYnQNMHdKw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-collection@1.1.0':
+        resolution:
+            {
+                integrity: sha512-GZsZslMJEyo1VKm5L1ZJY8tGDxZNPAoUeQUIbKeJfoi7Q4kmig5AsgLMYYuyYbfjd8fBmFORAIwYAkXMnXZgZw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-compose-refs@1.1.0':
+        resolution:
+            {
+                integrity: sha512-b4inOtiaOnYf9KWyO3jAeeCG6FeyfY6ldiEPanbUjWd+xIk5wZeHa8yVwmrJ2vderhu/BQvzCrJI0lHd+wIiqw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-context@1.1.0':
+        resolution:
+            {
+                integrity: sha512-OKrckBy+sMEgYM/sMmqmErVn0kZqrHPJze+Ql3DzYsDDp0hl0L62nx/2122/Bvps1qz645jlcu2tD9lrRSdf8A==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-dialog@1.1.1':
+        resolution:
+            {
+                integrity: sha512-zysS+iU4YP3STKNS6USvFVqI4qqx8EpiwmT5TuCApVEBca+eRCbONi4EgzfNSuVnOXvC5UPHHMjs8RXO6DH9Bg==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-direction@1.1.0':
+        resolution:
+            {
+                integrity: sha512-BUuBvgThEiAXh2DWu93XsT+a3aWrGqolGlqqw5VU1kG7p/ZH2cuDlM1sRLNnY3QcBS69UIz2mcKhMxDsdewhjg==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-dismissable-layer@1.1.0':
+        resolution:
+            {
+                integrity: sha512-/UovfmmXGptwGcBQawLzvn2jOfM0t4z3/uKffoBlj724+n3FvBbZ7M0aaBOmkp6pqFYpO4yx8tSVJjx3Fl2jig==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-dropdown-menu@2.1.1':
+        resolution:
+            {
+                integrity: sha512-y8E+x9fBq9qvteD2Zwa4397pUVhYsh9iq44b5RD5qu1GMJWBCBuVg1hMyItbc6+zH00TxGRqd9Iot4wzf3OoBQ==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-focus-guards@1.1.0':
+        resolution:
+            {
+                integrity: sha512-w6XZNUPVv6xCpZUqb/yN9DL6auvpGX3C/ee6Hdi16v2UUy25HV2Q5bcflsiDyT/g5RwbPQ/GIT1vLkeRb+ITBw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-focus-scope@1.1.0':
+        resolution:
+            {
+                integrity: sha512-200UD8zylvEyL8Bx+z76RJnASR2gRMuxlgFCPAe/Q/679a/r0eK3MBVYMb7vZODZcffZBdob1EGnky78xmVvcA==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-id@1.1.0':
+        resolution:
+            {
+                integrity: sha512-EJUrI8yYh7WOjNOqpoJaf1jlFIH2LvtgAl+YcFqNCa+4hj64ZXmPkAKOFs/ukjz3byN6bdb/AVUqHkI8/uWWMA==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-label@2.1.0':
+        resolution:
+            {
+                integrity: sha512-peLblDlFw/ngk3UWq0VnYaOLy6agTZZ+MUO/WhVfm14vJGML+xH4FAl2XQGLqdefjNb7ApRg6Yn7U42ZhmYXdw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-menu@2.1.1':
+        resolution:
+            {
+                integrity: sha512-oa3mXRRVjHi6DZu/ghuzdylyjaMXLymx83irM7hTxutQbD+7IhPKdMdRHD26Rm+kHRrWcrUkkRPv5pd47a2xFQ==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-popper@1.2.0':
+        resolution:
+            {
+                integrity: sha512-ZnRMshKF43aBxVWPWvbj21+7TQCvhuULWJ4gNIKYpRlQt5xGRhLx66tMp8pya2UkGHTSlhpXwmjqltDYHhw7Vg==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-portal@1.1.1':
+        resolution:
+            {
+                integrity: sha512-A3UtLk85UtqhzFqtoC8Q0KvR2GbXF3mtPgACSazajqq6A41mEQgo53iPzY4i6BwDxlIFqWIhiQ2G729n+2aw/g==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-presence@1.1.0':
+        resolution:
+            {
+                integrity: sha512-Gq6wuRN/asf9H/E/VzdKoUtT8GC9PQc9z40/vEr0VCJ4u5XvvhWIrSsCB6vD2/cH7ugTdSfYq9fLJCcM00acrQ==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-primitive@2.0.0':
+        resolution:
+            {
+                integrity: sha512-ZSpFm0/uHa8zTvKBDjLFWLo8dkr4MBsiDLz0g3gMUwqgLHz9rTaRRGYDgvZPtBJgYCBKXkS9fzmoySgr8CO6Cw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-roving-focus@1.1.0':
+        resolution:
+            {
+                integrity: sha512-EA6AMGeq9AEeQDeSH0aZgG198qkfHSbvWTf1HvoDmOB5bBG/qTxjYMWUKMnYiV6J/iP/J8MEFSuB2zRU2n7ODA==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-select@2.1.1':
+        resolution:
+            {
+                integrity: sha512-8iRDfyLtzxlprOo9IicnzvpsO1wNCkuwzzCM+Z5Rb5tNOpCdMvcc2AkzX0Fz+Tz9v6NJ5B/7EEgyZveo4FBRfQ==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-slot@1.1.0':
+        resolution:
+            {
+                integrity: sha512-FUCf5XMfmW4dtYl69pdS4DbxKy8nj4M7SafBgPllysxmdachynNflAdp/gCsnYWNDnge6tI9onzMp5ARYc1KNw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-toast@1.2.1':
+        resolution:
+            {
+                integrity: sha512-5trl7piMXcZiCq7MW6r8YYmu0bK5qDpTWz+FdEPdKyft2UixkspheYbjbrLXVN5NGKHFbOP7lm8eD0biiSqZqg==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/react-use-callback-ref@1.1.0':
+        resolution:
+            {
+                integrity: sha512-CasTfvsy+frcFkbXtSJ2Zu9JHpN8TYKxkgJGWbjiZhFivxaeW7rMeZt7QELGVLaYVfFMsKHjb7Ak0nMEe+2Vfw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-use-controllable-state@1.1.0':
+        resolution:
+            {
+                integrity: sha512-MtfMVJiSr2NjzS0Aa90NPTnvTSg6C/JLCV7ma0W6+OMV78vd8OyRpID+Ng9LxzsPbLeuBnWBA1Nq30AtBIDChw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-use-escape-keydown@1.1.0':
+        resolution:
+            {
+                integrity: sha512-L7vwWlR1kTTQ3oh7g1O0CBF3YCyyTj8NmhLR+phShpyA50HCfBFKVJTpshm9PzLiKmehsrQzTYTpX9HvmC9rhw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-use-layout-effect@1.1.0':
+        resolution:
+            {
+                integrity: sha512-+FPE0rOdziWSrH9athwI1R0HDVbWlEhd+FR+aSDk4uWGmSJ9Z54sdZVDQPZAinJhJXwfT+qnj969mCsT2gfm5w==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-use-previous@1.1.0':
+        resolution:
+            {
+                integrity: sha512-Z/e78qg2YFnnXcW88A4JmTtm4ADckLno6F7OXotmkQfeuCVaKuYzqAATPhVzl3delXE7CxIV8shofPn3jPc5Og==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-use-rect@1.1.0':
+        resolution:
+            {
+                integrity: sha512-0Fmkebhr6PiseyZlYAOtLS+nb7jLmpqTrJyv61Pe68MKYW6OWdRE2kI70TaYY27u7H0lajqM3hSMMLFq18Z7nQ==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-use-size@1.1.0':
+        resolution:
+            {
+                integrity: sha512-XW3/vWuIXHa+2Uwcc2ABSfcCledmXhhQPlGbfcRXbiUQI5Icjcg19BGCZVKKInYbvUCut/ufbbLLPFC5cbb1hw==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    '@radix-ui/react-visually-hidden@1.1.0':
+        resolution:
+            {
+                integrity: sha512-N8MDZqtgCgG5S3aV60INAB475osJousYpZ4cTJ2cFbMpdHS5Y6loLTH8LPtkj2QN0x93J30HT/M3qJXM0+lyeQ==,
+            }
+        peerDependencies:
+            '@types/react': '*'
+            '@types/react-dom': '*'
+            react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+            react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            '@types/react-dom':
+                optional: true
+
+    '@radix-ui/rect@1.1.0':
+        resolution:
+            {
+                integrity: sha512-A9+lCBZoaMJlVKcRBz2YByCG+Cp2t6nAnMnNba+XiWxnj6r4JUFqfsgwocMBZU9LPtdxC6wB56ySYpc7LQIoJg==,
+            }
+
+    '@rushstack/eslint-patch@1.10.3':
+        resolution:
+            {
+                integrity: sha512-qC/xYId4NMebE6w/V33Fh9gWxLgURiNYgVNObbJl2LZv0GUUItCcCqC5axQSwRaAgaxl2mELq1rMzlswaQ0Zxg==,
+            }
+
+    '@swc/counter@0.1.3':
+        resolution:
+            {
+                integrity: sha512-e2BR4lsJkkRlKZ/qCHPw9ZaSxc0MVUd7gtbtaB7aMvHeJVYe8sOB8DBZkP2DtISHGSku9sCK6T6cnY0CtXrOCQ==,
+            }
+
+    '@swc/helpers@0.5.5':
+        resolution:
+            {
+                integrity: sha512-KGYxvIOXcceOAbEk4bi/dVLEK9z8sZ0uBB3Il5b1rhfClSpcX0yfRO0KmTkqR2cnQDymwLB+25ZyMzICg/cm/A==,
+            }
+
+    '@types/json5@0.0.29':
+        resolution:
+            {
+                integrity: sha512-dRLjCWHYg4oaA77cxO64oO+7JwCwnIzkZPdrrC71jQmQtlhM556pwKo5bUzqvZndkVbeFLIIi+9TC40JNF5hNQ==,
+            }
+
+    '@types/node@20.14.12':
+        resolution:
+            {
+                integrity: sha512-r7wNXakLeSsGT0H1AU863vS2wa5wBOK4bWMjZz2wj+8nBx+m5PeIn0k8AloSLpRuiwdRQZwarZqHE4FNArPuJQ==,
+            }
+
+    '@types/prop-types@15.7.12':
+        resolution:
+            {
+                integrity: sha512-5zvhXYtRNRluoE/jAp4GVsSduVUzNWKkOZrCDBWYtE7biZywwdC2AcEzg+cSMLFRfVgeAFqpfNabiPjxFddV1Q==,
+            }
+
+    '@types/react-dom@18.3.0':
+        resolution:
+            {
+                integrity: sha512-EhwApuTmMBmXuFOikhQLIBUn6uFg81SwLMOAUgodJF14SOBOCMdU04gDoYi0WOJJHD144TL32z4yDqCW3dnkQg==,
+            }
+
+    '@types/react@18.3.3':
+        resolution:
+            {
+                integrity: sha512-hti/R0pS0q1/xx+TsI73XIqk26eBsISZ2R0wUijXIngRK9R/e7Xw/cXVxQK7R5JjW+SV4zGcn5hXjudkN/pLIw==,
+            }
+
+    '@typescript-eslint/parser@7.2.0':
+        resolution:
+            {
+                integrity: sha512-5FKsVcHTk6TafQKQbuIVkXq58Fnbkd2wDL4LB7AURN7RUOu1utVP+G8+6u3ZhEroW3DF6hyo3ZEXxgKgp4KeCg==,
+            }
+        engines: { node: ^16.0.0 || >=18.0.0 }
+        peerDependencies:
+            eslint: ^8.56.0
+            typescript: '*'
+        peerDependenciesMeta:
+            typescript:
+                optional: true
+
+    '@typescript-eslint/scope-manager@7.2.0':
+        resolution:
+            {
+                integrity: sha512-Qh976RbQM/fYtjx9hs4XkayYujB/aPwglw2choHmf3zBjB4qOywWSdt9+KLRdHubGcoSwBnXUH2sR3hkyaERRg==,
+            }
+        engines: { node: ^16.0.0 || >=18.0.0 }
+
+    '@typescript-eslint/types@7.2.0':
+        resolution:
+            {
+                integrity: sha512-XFtUHPI/abFhm4cbCDc5Ykc8npOKBSJePY3a3s+lwumt7XWJuzP5cZcfZ610MIPHjQjNsOLlYK8ASPaNG8UiyA==,
+            }
+        engines: { node: ^16.0.0 || >=18.0.0 }
+
+    '@typescript-eslint/typescript-estree@7.2.0':
+        resolution:
+            {
+                integrity: sha512-cyxS5WQQCoBwSakpMrvMXuMDEbhOo9bNHHrNcEWis6XHx6KF518tkF1wBvKIn/tpq5ZpUYK7Bdklu8qY0MsFIA==,
+            }
+        engines: { node: ^16.0.0 || >=18.0.0 }
+        peerDependencies:
+            typescript: '*'
+        peerDependenciesMeta:
+            typescript:
+                optional: true
+
+    '@typescript-eslint/visitor-keys@7.2.0':
+        resolution:
+            {
+                integrity: sha512-c6EIQRHhcpl6+tO8EMR+kjkkV+ugUNXOmeASA1rlzkd8EPIriavpWoiEz1HR/VLhbVIdhqnV6E7JZm00cBDx2A==,
+            }
+        engines: { node: ^16.0.0 || >=18.0.0 }
+
+    '@ungap/structured-clone@1.2.0':
+        resolution:
+            {
+                integrity: sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==,
+            }
+
+    acorn-jsx@5.3.2:
+        resolution:
+            {
+                integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==,
+            }
+        peerDependencies:
+            acorn: ^6.0.0 || ^7.0.0 || ^8.0.0
+
+    acorn@8.12.1:
+        resolution:
+            {
+                integrity: sha512-tcpGyI9zbizT9JbV6oYE477V6mTlXvvi0T0G3SNIYE2apm/G5huBa1+K89VGeovbg+jycCrfhl3ADxErOuO6Jg==,
+            }
+        engines: { node: '>=0.4.0' }
+        hasBin: true
+
+    ajv@6.12.6:
+        resolution:
+            {
+                integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==,
+            }
+
+    ansi-regex@5.0.1:
+        resolution:
+            {
+                integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==,
+            }
+        engines: { node: '>=8' }
+
+    ansi-regex@6.0.1:
+        resolution:
+            {
+                integrity: sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==,
+            }
+        engines: { node: '>=12' }
+
+    ansi-styles@3.2.1:
+        resolution:
+            {
+                integrity: sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==,
+            }
+        engines: { node: '>=4' }
+
+    ansi-styles@4.3.0:
+        resolution:
+            {
+                integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==,
+            }
+        engines: { node: '>=8' }
+
+    ansi-styles@6.2.1:
+        resolution:
+            {
+                integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==,
+            }
+        engines: { node: '>=12' }
+
+    any-promise@1.3.0:
+        resolution:
+            {
+                integrity: sha512-7UvmKalWRt1wgjL1RrGxoSJW/0QZFIegpeGvZG9kjp8vrRu55XTHbwnqq2GpXm9uLbcuhxm3IqX9OB4MZR1b2A==,
+            }
+
+    anymatch@3.1.3:
+        resolution:
+            {
+                integrity: sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==,
+            }
+        engines: { node: '>= 8' }
+
+    arg@5.0.2:
+        resolution:
+            {
+                integrity: sha512-PYjyFOLKQ9y57JvQ6QLo8dAgNqswh8M1RMJYdQduT6xbWSgK36P/Z/v+p888pM69jMMfS8Xd8F6I1kQ/I9HUGg==,
+            }
+
+    argparse@2.0.1:
+        resolution:
+            {
+                integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==,
+            }
+
+    aria-hidden@1.2.4:
+        resolution:
+            {
+                integrity: sha512-y+CcFFwelSXpLZk/7fMB2mUbGtX9lKycf1MWJ7CaTIERyitVlyQx6C+sxcROU2BAJ24OiZyK+8wj2i8AlBoS3A==,
+            }
+        engines: { node: '>=10' }
+
+    aria-query@5.1.3:
+        resolution:
+            {
+                integrity: sha512-R5iJ5lkuHybztUfuOAznmboyjWq8O6sqNqtK7CLOqdydi54VNbORp49mb14KbWgG1QD3JFO9hJdZ+y4KutfdOQ==,
+            }
+
+    array-buffer-byte-length@1.0.1:
+        resolution:
+            {
+                integrity: sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    array-includes@3.1.8:
+        resolution:
+            {
+                integrity: sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    array-union@2.1.0:
+        resolution:
+            {
+                integrity: sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==,
+            }
+        engines: { node: '>=8' }
+
+    array.prototype.findlast@1.2.5:
+        resolution:
+            {
+                integrity: sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    array.prototype.findlastindex@1.2.5:
+        resolution:
+            {
+                integrity: sha512-zfETvRFA8o7EiNn++N5f/kaCw221hrpGsDmcpndVupkPzEc1Wuf3VgC0qby1BbHs7f5DVYjgtEU2LLh5bqeGfQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    array.prototype.flat@1.3.2:
+        resolution:
+            {
+                integrity: sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    array.prototype.flatmap@1.3.2:
+        resolution:
+            {
+                integrity: sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    array.prototype.tosorted@1.1.4:
+        resolution:
+            {
+                integrity: sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    arraybuffer.prototype.slice@1.0.3:
+        resolution:
+            {
+                integrity: sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==,
+            }
+        engines: { node: '>= 0.4' }
+
+    ast-types-flow@0.0.8:
+        resolution:
+            {
+                integrity: sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==,
+            }
+
+    available-typed-arrays@1.0.7:
+        resolution:
+            {
+                integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    axe-core@4.9.1:
+        resolution:
+            {
+                integrity: sha512-QbUdXJVTpvUTHU7871ppZkdOLBeGUKBQWHkHrvN2V9IQWGMt61zf3B45BtzjxEJzYuj0JBjBZP/hmYS/R9pmAw==,
+            }
+        engines: { node: '>=4' }
+
+    axobject-query@3.1.1:
+        resolution:
+            {
+                integrity: sha512-goKlv8DZrK9hUh975fnHzhNIO4jUnFCfv/dszV5VwUGDFjI6vQ2VwoyjYjYNEbBE8AH87TduWP5uyDR1D+Iteg==,
+            }
+
+    balanced-match@1.0.2:
+        resolution:
+            {
+                integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==,
+            }
+
+    binary-extensions@2.3.0:
+        resolution:
+            {
+                integrity: sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==,
+            }
+        engines: { node: '>=8' }
+
+    brace-expansion@1.1.11:
+        resolution:
+            {
+                integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==,
+            }
+
+    brace-expansion@2.0.1:
+        resolution:
+            {
+                integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==,
+            }
+
+    braces@3.0.3:
+        resolution:
+            {
+                integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==,
+            }
+        engines: { node: '>=8' }
+
+    browserslist@4.23.2:
+        resolution:
+            {
+                integrity: sha512-qkqSyistMYdxAcw+CzbZwlBy8AGmS/eEWs+sEV5TnLRGDOL+C5M2EnH6tlZyg0YoAxGJAFKh61En9BR941GnHA==,
+            }
+        engines: { node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7 }
+        hasBin: true
+
+    busboy@1.6.0:
+        resolution:
+            {
+                integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==,
+            }
+        engines: { node: '>=10.16.0' }
+
+    call-bind@1.0.7:
+        resolution:
+            {
+                integrity: sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==,
+            }
+        engines: { node: '>= 0.4' }
+
+    callsites@3.1.0:
+        resolution:
+            {
+                integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==,
+            }
+        engines: { node: '>=6' }
+
+    camelcase-css@2.0.1:
+        resolution:
+            {
+                integrity: sha512-QOSvevhslijgYwRx6Rv7zKdMF8lbRmx+uQGx2+vDc+KI/eBnsy9kit5aj23AgGu3pa4t9AgwbnXWqS+iOY+2aA==,
+            }
+        engines: { node: '>= 6' }
+
+    caniuse-lite@1.0.30001643:
+        resolution:
+            {
+                integrity: sha512-ERgWGNleEilSrHM6iUz/zJNSQTP8Mr21wDWpdgvRwcTXGAq6jMtOUPP4dqFPTdKqZ2wKTdtB+uucZ3MRpAUSmg==,
+            }
+
+    chalk@2.4.2:
+        resolution:
+            {
+                integrity: sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==,
+            }
+        engines: { node: '>=4' }
+
+    chalk@4.1.2:
+        resolution:
+            {
+                integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==,
+            }
+        engines: { node: '>=10' }
+
+    chokidar@3.6.0:
+        resolution:
+            {
+                integrity: sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==,
+            }
+        engines: { node: '>= 8.10.0' }
+
+    class-variance-authority@0.7.0:
+        resolution:
+            {
+                integrity: sha512-jFI8IQw4hczaL4ALINxqLEXQbWcNjoSkloa4IaufXCJr6QawJyw7tuRysRsrE8w2p/4gGaxKIt/hX3qz/IbD1A==,
+            }
+
+    client-only@0.0.1:
+        resolution:
+            {
+                integrity: sha512-IV3Ou0jSMzZrd3pZ48nLkT9DA7Ag1pnPzaiQhpW7c3RbcqqzvzzVu+L8gfqMp/8IM2MQtSiqaCxrrcfu8I8rMA==,
+            }
+
+    clsx@2.0.0:
+        resolution:
+            {
+                integrity: sha512-rQ1+kcj+ttHG0MKVGBUXwayCCF1oh39BF5COIpRzuCEv8Mwjv0XucrI2ExNTOn9IlLifGClWQcU9BrZORvtw6Q==,
+            }
+        engines: { node: '>=6' }
+
+    clsx@2.1.1:
+        resolution:
+            {
+                integrity: sha512-eYm0QWBtUrBWZWG0d386OGAw16Z995PiOVo2B7bjWSbHedGl5e0ZWaq65kOGgUSNesEIDkB9ISbTg/JK9dhCZA==,
+            }
+        engines: { node: '>=6' }
+
+    color-convert@1.9.3:
+        resolution:
+            {
+                integrity: sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==,
+            }
+
+    color-convert@2.0.1:
+        resolution:
+            {
+                integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==,
+            }
+        engines: { node: '>=7.0.0' }
+
+    color-name@1.1.3:
+        resolution:
+            {
+                integrity: sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==,
+            }
+
+    color-name@1.1.4:
+        resolution:
+            {
+                integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==,
+            }
+
+    commander@4.1.1:
+        resolution:
+            {
+                integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==,
+            }
+        engines: { node: '>= 6' }
+
+    concat-map@0.0.1:
+        resolution:
+            {
+                integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==,
+            }
+
+    convert-source-map@2.0.0:
+        resolution:
+            {
+                integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==,
+            }
+
+    cross-spawn@7.0.3:
+        resolution:
+            {
+                integrity: sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==,
+            }
+        engines: { node: '>= 8' }
+
+    cssesc@3.0.0:
+        resolution:
+            {
+                integrity: sha512-/Tb/JcjK111nNScGob5MNtsntNM1aCNUDipB/TkwZFhyDrrE47SOx/18wF2bbjgc3ZzCSKW1T5nt5EbFoAz/Vg==,
+            }
+        engines: { node: '>=4' }
+        hasBin: true
+
+    csstype@3.1.3:
+        resolution:
+            {
+                integrity: sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==,
+            }
+
+    damerau-levenshtein@1.0.8:
+        resolution:
+            {
+                integrity: sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==,
+            }
+
+    data-view-buffer@1.0.1:
+        resolution:
+            {
+                integrity: sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    data-view-byte-length@1.0.1:
+        resolution:
+            {
+                integrity: sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    data-view-byte-offset@1.0.0:
+        resolution:
+            {
+                integrity: sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    debug@3.2.7:
+        resolution:
+            {
+                integrity: sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==,
+            }
+        peerDependencies:
+            supports-color: '*'
+        peerDependenciesMeta:
+            supports-color:
+                optional: true
+
+    debug@4.3.5:
+        resolution:
+            {
+                integrity: sha512-pt0bNEmneDIvdL1Xsd9oDQ/wrQRkXDT4AUWlNZNPKvW5x/jyO9VFXkJUP07vQ2upmw5PlaITaPKc31jK13V+jg==,
+            }
+        engines: { node: '>=6.0' }
+        peerDependencies:
+            supports-color: '*'
+        peerDependenciesMeta:
+            supports-color:
+                optional: true
+
+    deep-equal@2.2.3:
+        resolution:
+            {
+                integrity: sha512-ZIwpnevOurS8bpT4192sqAowWM76JDKSHYzMLty3BZGSswgq6pBaH3DhCSW5xVAZICZyKdOBPjwww5wfgT/6PA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    deep-is@0.1.4:
+        resolution:
+            {
+                integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==,
+            }
+
+    define-data-property@1.1.4:
+        resolution:
+            {
+                integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==,
+            }
+        engines: { node: '>= 0.4' }
+
+    define-properties@1.2.1:
+        resolution:
+            {
+                integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    detect-node-es@1.1.0:
+        resolution:
+            {
+                integrity: sha512-ypdmJU/TbBby2Dxibuv7ZLW3Bs1QEmM7nHjEANfohJLvE0XVujisn1qPJcZxg+qDucsr+bP6fLD1rPS3AhJ7EQ==,
+            }
+
+    didyoumean@1.2.2:
+        resolution:
+            {
+                integrity: sha512-gxtyfqMg7GKyhQmb056K7M3xszy/myH8w+B4RT+QXBQsvAOdc3XymqDDPHx1BgPgsdAA5SIifona89YtRATDzw==,
+            }
+
+    dir-glob@3.0.1:
+        resolution:
+            {
+                integrity: sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==,
+            }
+        engines: { node: '>=8' }
+
+    dlv@1.1.3:
+        resolution:
+            {
+                integrity: sha512-+HlytyjlPKnIG8XuRG8WvmBP8xs8P71y+SKKS6ZXWoEgLuePxtDoUEiH7WkdePWrQ5JBpE6aoVqfZfJUQkjXwA==,
+            }
+
+    doctrine@2.1.0:
+        resolution:
+            {
+                integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==,
+            }
+        engines: { node: '>=0.10.0' }
+
+    doctrine@3.0.0:
+        resolution:
+            {
+                integrity: sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==,
+            }
+        engines: { node: '>=6.0.0' }
+
+    eastasianwidth@0.2.0:
+        resolution:
+            {
+                integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==,
+            }
+
+    electron-to-chromium@1.5.2:
+        resolution:
+            {
+                integrity: sha512-kc4r3U3V3WLaaZqThjYz/Y6z8tJe+7K0bbjUVo3i+LWIypVdMx5nXCkwRe6SWbY6ILqLdc1rKcKmr3HoH7wjSQ==,
+            }
+
+    emoji-regex@8.0.0:
+        resolution:
+            {
+                integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==,
+            }
+
+    emoji-regex@9.2.2:
+        resolution:
+            {
+                integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==,
+            }
+
+    enhanced-resolve@5.17.1:
+        resolution:
+            {
+                integrity: sha512-LMHl3dXhTcfv8gM4kEzIUeTQ+7fpdA0l2tUf34BddXPkz2A5xJ5L/Pchd5BL6rdccM9QGvu0sWZzK1Z1t4wwyg==,
+            }
+        engines: { node: '>=10.13.0' }
+
+    es-abstract@1.23.3:
+        resolution:
+            {
+                integrity: sha512-e+HfNH61Bj1X9/jLc5v1owaLYuHdeHHSQlkhCBiTK8rBvKaULl/beGMxwrMXjpYrv4pz22BlY570vVePA2ho4A==,
+            }
+        engines: { node: '>= 0.4' }
+
+    es-define-property@1.0.0:
+        resolution:
+            {
+                integrity: sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    es-errors@1.3.0:
+        resolution:
+            {
+                integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    es-get-iterator@1.1.3:
+        resolution:
+            {
+                integrity: sha512-sPZmqHBe6JIiTfN5q2pEi//TwxmAFHwj/XEuYjTuse78i8KxaqMTTzxPoFKuzRpDpTJ+0NAbpfenkmH2rePtuw==,
+            }
+
+    es-iterator-helpers@1.0.19:
+        resolution:
+            {
+                integrity: sha512-zoMwbCcH5hwUkKJkT8kDIBZSz9I6mVG//+lDCinLCGov4+r7NIy0ld8o03M0cJxl2spVf6ESYVS6/gpIfq1FFw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    es-object-atoms@1.0.0:
+        resolution:
+            {
+                integrity: sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    es-set-tostringtag@2.0.3:
+        resolution:
+            {
+                integrity: sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    es-shim-unscopables@1.0.2:
+        resolution:
+            {
+                integrity: sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==,
+            }
+
+    es-to-primitive@1.2.1:
+        resolution:
+            {
+                integrity: sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    escalade@3.1.2:
+        resolution:
+            {
+                integrity: sha512-ErCHMCae19vR8vQGe50xIsVomy19rg6gFu3+r3jkEO46suLMWBksvVyoGgQV+jOfl84ZSOSlmv6Gxa89PmTGmA==,
+            }
+        engines: { node: '>=6' }
+
+    escape-string-regexp@1.0.5:
+        resolution:
+            {
+                integrity: sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==,
+            }
+        engines: { node: '>=0.8.0' }
+
+    escape-string-regexp@4.0.0:
+        resolution:
+            {
+                integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==,
+            }
+        engines: { node: '>=10' }
+
+    eslint-config-next@14.2.5:
+        resolution:
+            {
+                integrity: sha512-zogs9zlOiZ7ka+wgUnmcM0KBEDjo4Jis7kxN1jvC0N4wynQ2MIx/KBkg4mVF63J5EK4W0QMCn7xO3vNisjaAoA==,
+            }
+        peerDependencies:
+            eslint: ^7.23.0 || ^8.0.0
+            typescript: '>=3.3.1'
+        peerDependenciesMeta:
+            typescript:
+                optional: true
+
+    eslint-config-prettier@9.1.0:
+        resolution:
+            {
+                integrity: sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==,
+            }
+        hasBin: true
+        peerDependencies:
+            eslint: '>=7.0.0'
+
+    eslint-import-resolver-node@0.3.9:
+        resolution:
+            {
+                integrity: sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==,
+            }
+
+    eslint-import-resolver-typescript@3.6.1:
+        resolution:
+            {
+                integrity: sha512-xgdptdoi5W3niYeuQxKmzVDTATvLYqhpwmykwsh7f6HIOStGWEIL9iqZgQDF9u9OEzrRwR8no5q2VT+bjAujTg==,
+            }
+        engines: { node: ^14.18.0 || >=16.0.0 }
+        peerDependencies:
+            eslint: '*'
+            eslint-plugin-import: '*'
+
+    eslint-module-utils@2.8.1:
+        resolution:
+            {
+                integrity: sha512-rXDXR3h7cs7dy9RNpUlQf80nX31XWJEyGq1tRMo+6GsO5VmTe4UTwtmonAD4ZkAsrfMVDA2wlGJ3790Ys+D49Q==,
+            }
+        engines: { node: '>=4' }
+        peerDependencies:
+            '@typescript-eslint/parser': '*'
+            eslint: '*'
+            eslint-import-resolver-node: '*'
+            eslint-import-resolver-typescript: '*'
+            eslint-import-resolver-webpack: '*'
+        peerDependenciesMeta:
+            '@typescript-eslint/parser':
+                optional: true
+            eslint:
+                optional: true
+            eslint-import-resolver-node:
+                optional: true
+            eslint-import-resolver-typescript:
+                optional: true
+            eslint-import-resolver-webpack:
+                optional: true
+
+    eslint-plugin-import@2.29.1:
+        resolution:
+            {
+                integrity: sha512-BbPC0cuExzhiMo4Ff1BTVwHpjjv28C5R+btTOGaCRC7UEz801up0JadwkeSk5Ued6TG34uaczuVuH6qyy5YUxw==,
+            }
+        engines: { node: '>=4' }
+        peerDependencies:
+            '@typescript-eslint/parser': '*'
+            eslint: ^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0 || ^8
+        peerDependenciesMeta:
+            '@typescript-eslint/parser':
+                optional: true
+
+    eslint-plugin-jsx-a11y@6.9.0:
+        resolution:
+            {
+                integrity: sha512-nOFOCaJG2pYqORjK19lqPqxMO/JpvdCZdPtNdxY3kvom3jTvkAbOvQvD8wuD0G8BYR0IGAGYDlzqWJOh/ybn2g==,
+            }
+        engines: { node: '>=4.0' }
+        peerDependencies:
+            eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8
+
+    eslint-plugin-prettier@5.2.1:
+        resolution:
+            {
+                integrity: sha512-gH3iR3g4JfF+yYPaJYkN7jEl9QbweL/YfkoRlNnuIEHEz1vHVlCmWOS+eGGiRuzHQXdJFCOTxRgvju9b8VUmrw==,
+            }
+        engines: { node: ^14.18.0 || >=16.0.0 }
+        peerDependencies:
+            '@types/eslint': '>=8.0.0'
+            eslint: '>=8.0.0'
+            eslint-config-prettier: '*'
+            prettier: '>=3.0.0'
+        peerDependenciesMeta:
+            '@types/eslint':
+                optional: true
+            eslint-config-prettier:
+                optional: true
+
+    eslint-plugin-react-hooks@4.6.2:
+        resolution:
+            {
+                integrity: sha512-QzliNJq4GinDBcD8gPB5v0wh6g8q3SUi6EFF0x8N/BL9PoVs0atuGc47ozMRyOWAKdwaZ5OnbOEa3WR+dSGKuQ==,
+            }
+        engines: { node: '>=10' }
+        peerDependencies:
+            eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0
+
+    eslint-plugin-react@7.35.0:
+        resolution:
+            {
+                integrity: sha512-v501SSMOWv8gerHkk+IIQBkcGRGrO2nfybfj5pLxuJNFTPxxA3PSryhXTK+9pNbtkggheDdsC0E9Q8CuPk6JKA==,
+            }
+        engines: { node: '>=4' }
+        peerDependencies:
+            eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7
+
+    eslint-scope@7.2.2:
+        resolution:
+            {
+                integrity: sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==,
+            }
+        engines: { node: ^12.22.0 || ^14.17.0 || >=16.0.0 }
+
+    eslint-visitor-keys@3.4.3:
+        resolution:
+            {
+                integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==,
+            }
+        engines: { node: ^12.22.0 || ^14.17.0 || >=16.0.0 }
+
+    eslint@8.57.0:
+        resolution:
+            {
+                integrity: sha512-dZ6+mexnaTIbSBZWgou51U6OmzIhYM2VcNdtiTtI7qPNZm35Akpr0f6vtw3w1Kmn5PYo+tZVfh13WrhpS6oLqQ==,
+            }
+        engines: { node: ^12.22.0 || ^14.17.0 || >=16.0.0 }
+        hasBin: true
+
+    espree@9.6.1:
+        resolution:
+            {
+                integrity: sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==,
+            }
+        engines: { node: ^12.22.0 || ^14.17.0 || >=16.0.0 }
+
+    esquery@1.6.0:
+        resolution:
+            {
+                integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==,
+            }
+        engines: { node: '>=0.10' }
+
+    esrecurse@4.3.0:
+        resolution:
+            {
+                integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==,
+            }
+        engines: { node: '>=4.0' }
+
+    estraverse@5.3.0:
+        resolution:
+            {
+                integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==,
+            }
+        engines: { node: '>=4.0' }
+
+    esutils@2.0.3:
+        resolution:
+            {
+                integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==,
+            }
+        engines: { node: '>=0.10.0' }
+
+    fast-deep-equal@3.1.3:
+        resolution:
+            {
+                integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==,
+            }
+
+    fast-diff@1.3.0:
+        resolution:
+            {
+                integrity: sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==,
+            }
+
+    fast-glob@3.3.2:
+        resolution:
+            {
+                integrity: sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==,
+            }
+        engines: { node: '>=8.6.0' }
+
+    fast-json-stable-stringify@2.1.0:
+        resolution:
+            {
+                integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==,
+            }
+
+    fast-levenshtein@2.0.6:
+        resolution:
+            {
+                integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==,
+            }
+
+    fastq@1.17.1:
+        resolution:
+            {
+                integrity: sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==,
+            }
+
+    file-entry-cache@6.0.1:
+        resolution:
+            {
+                integrity: sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==,
+            }
+        engines: { node: ^10.12.0 || >=12.0.0 }
+
+    fill-range@7.1.1:
+        resolution:
+            {
+                integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==,
+            }
+        engines: { node: '>=8' }
+
+    find-up@5.0.0:
+        resolution:
+            {
+                integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==,
+            }
+        engines: { node: '>=10' }
+
+    flat-cache@3.2.0:
+        resolution:
+            {
+                integrity: sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==,
+            }
+        engines: { node: ^10.12.0 || >=12.0.0 }
+
+    flatted@3.3.1:
+        resolution:
+            {
+                integrity: sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==,
+            }
+
+    for-each@0.3.3:
+        resolution:
+            {
+                integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==,
+            }
+
+    foreground-child@3.2.1:
+        resolution:
+            {
+                integrity: sha512-PXUUyLqrR2XCWICfv6ukppP96sdFwWbNEnfEMt7jNsISjMsvaLNinAHNDYyvkyU+SZG2BTSbT5NjG+vZslfGTA==,
+            }
+        engines: { node: '>=14' }
+
+    fs.realpath@1.0.0:
+        resolution:
+            {
+                integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==,
+            }
+
+    fsevents@2.3.3:
+        resolution:
+            {
+                integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==,
+            }
+        engines: { node: ^8.16.0 || ^10.6.0 || >=11.0.0 }
+        os: [darwin]
+
+    function-bind@1.1.2:
+        resolution:
+            {
+                integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==,
+            }
+
+    function.prototype.name@1.1.6:
+        resolution:
+            {
+                integrity: sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    functions-have-names@1.2.3:
+        resolution:
+            {
+                integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==,
+            }
+
+    gensync@1.0.0-beta.2:
+        resolution:
+            {
+                integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==,
+            }
+        engines: { node: '>=6.9.0' }
+
+    get-intrinsic@1.2.4:
+        resolution:
+            {
+                integrity: sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    get-nonce@1.0.1:
+        resolution:
+            {
+                integrity: sha512-FJhYRoDaiatfEkUK8HKlicmu/3SGFD51q3itKDGoSTysQJBnfOcxU5GxnhE1E6soB76MbT0MBtnKJuXyAx+96Q==,
+            }
+        engines: { node: '>=6' }
+
+    get-symbol-description@1.0.2:
+        resolution:
+            {
+                integrity: sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    get-tsconfig@4.7.6:
+        resolution:
+            {
+                integrity: sha512-ZAqrLlu18NbDdRaHq+AKXzAmqIUPswPWKUchfytdAjiRFnCe5ojG2bstg6mRiZabkKfCoL/e98pbBELIV/YCeA==,
+            }
+
+    glob-parent@5.1.2:
+        resolution:
+            {
+                integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==,
+            }
+        engines: { node: '>= 6' }
+
+    glob-parent@6.0.2:
+        resolution:
+            {
+                integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==,
+            }
+        engines: { node: '>=10.13.0' }
+
+    glob@10.3.10:
+        resolution:
+            {
+                integrity: sha512-fa46+tv1Ak0UPK1TOy/pZrIybNNt4HCv7SDzwyfiOZkvZLEbjsZkJBPtDHVshZjbecAoAGSC20MjLDG/qr679g==,
+            }
+        engines: { node: '>=16 || 14 >=14.17' }
+        hasBin: true
+
+    glob@10.4.5:
+        resolution:
+            {
+                integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==,
+            }
+        hasBin: true
+
+    glob@7.2.3:
+        resolution:
+            {
+                integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==,
+            }
+        deprecated: Glob versions prior to v9 are no longer supported
+
+    globals@11.12.0:
+        resolution:
+            {
+                integrity: sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==,
+            }
+        engines: { node: '>=4' }
+
+    globals@13.24.0:
+        resolution:
+            {
+                integrity: sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==,
+            }
+        engines: { node: '>=8' }
+
+    globalthis@1.0.4:
+        resolution:
+            {
+                integrity: sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    globby@11.1.0:
+        resolution:
+            {
+                integrity: sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==,
+            }
+        engines: { node: '>=10' }
+
+    gopd@1.0.1:
+        resolution:
+            {
+                integrity: sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==,
+            }
+
+    graceful-fs@4.2.11:
+        resolution:
+            {
+                integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==,
+            }
+
+    graphemer@1.4.0:
+        resolution:
+            {
+                integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==,
+            }
+
+    has-bigints@1.0.2:
+        resolution:
+            {
+                integrity: sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==,
+            }
+
+    has-flag@3.0.0:
+        resolution:
+            {
+                integrity: sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==,
+            }
+        engines: { node: '>=4' }
+
+    has-flag@4.0.0:
+        resolution:
+            {
+                integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==,
+            }
+        engines: { node: '>=8' }
+
+    has-property-descriptors@1.0.2:
+        resolution:
+            {
+                integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==,
+            }
+
+    has-proto@1.0.3:
+        resolution:
+            {
+                integrity: sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==,
+            }
+        engines: { node: '>= 0.4' }
+
+    has-symbols@1.0.3:
+        resolution:
+            {
+                integrity: sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==,
+            }
+        engines: { node: '>= 0.4' }
+
+    has-tostringtag@1.0.2:
+        resolution:
+            {
+                integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    hasown@2.0.2:
+        resolution:
+            {
+                integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    ignore@5.3.1:
+        resolution:
+            {
+                integrity: sha512-5Fytz/IraMjqpwfd34ke28PTVMjZjJG2MPn5t7OE4eUCUNf8BAa7b5WUS9/Qvr6mwOQS7Mk6vdsMno5he+T8Xw==,
+            }
+        engines: { node: '>= 4' }
+
+    import-fresh@3.3.0:
+        resolution:
+            {
+                integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==,
+            }
+        engines: { node: '>=6' }
+
+    imurmurhash@0.1.4:
+        resolution:
+            {
+                integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==,
+            }
+        engines: { node: '>=0.8.19' }
+
+    inflight@1.0.6:
+        resolution:
+            {
+                integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==,
+            }
+        deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.
+
+    inherits@2.0.4:
+        resolution:
+            {
+                integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==,
+            }
+
+    internal-slot@1.0.7:
+        resolution:
+            {
+                integrity: sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==,
+            }
+        engines: { node: '>= 0.4' }
+
+    invariant@2.2.4:
+        resolution:
+            {
+                integrity: sha512-phJfQVBuaJM5raOpJjSfkiD6BpbCE4Ns//LaXl6wGYtUBY83nWS6Rf9tXm2e8VaK60JEjYldbPif/A2B1C2gNA==,
+            }
+
+    is-arguments@1.1.1:
+        resolution:
+            {
+                integrity: sha512-8Q7EARjzEnKpt/PCD7e1cgUS0a6X8u5tdSiMqXhojOdoV9TsMsiO+9VLC5vAmO8N7/GmXn7yjR8qnA6bVAEzfA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-array-buffer@3.0.4:
+        resolution:
+            {
+                integrity: sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-async-function@2.0.0:
+        resolution:
+            {
+                integrity: sha512-Y1JXKrfykRJGdlDwdKlLpLyMIiWqWvuSd17TvZk68PLAOGOoF4Xyav1z0Xhoi+gCYjZVeC5SI+hYFOfvXmGRCA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-bigint@1.0.4:
+        resolution:
+            {
+                integrity: sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==,
+            }
+
+    is-binary-path@2.1.0:
+        resolution:
+            {
+                integrity: sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==,
+            }
+        engines: { node: '>=8' }
+
+    is-boolean-object@1.1.2:
+        resolution:
+            {
+                integrity: sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-callable@1.2.7:
+        resolution:
+            {
+                integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-core-module@2.15.0:
+        resolution:
+            {
+                integrity: sha512-Dd+Lb2/zvk9SKy1TGCt1wFJFo/MWBPMX5x7KcvLajWTGuomczdQX61PvY5yK6SVACwpoexWo81IfFyoKY2QnTA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-data-view@1.0.1:
+        resolution:
+            {
+                integrity: sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-date-object@1.0.5:
+        resolution:
+            {
+                integrity: sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-extglob@2.1.1:
+        resolution:
+            {
+                integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==,
+            }
+        engines: { node: '>=0.10.0' }
+
+    is-finalizationregistry@1.0.2:
+        resolution:
+            {
+                integrity: sha512-0by5vtUJs8iFQb5TYUHHPudOR+qXYIMKtiUzvLIZITZUjknFmziyBJuLhVRc+Ds0dREFlskDNJKYIdIzu/9pfw==,
+            }
+
+    is-fullwidth-code-point@3.0.0:
+        resolution:
+            {
+                integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==,
+            }
+        engines: { node: '>=8' }
+
+    is-generator-function@1.0.10:
+        resolution:
+            {
+                integrity: sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-glob@4.0.3:
+        resolution:
+            {
+                integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==,
+            }
+        engines: { node: '>=0.10.0' }
+
+    is-map@2.0.3:
+        resolution:
+            {
+                integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-negative-zero@2.0.3:
+        resolution:
+            {
+                integrity: sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-number-object@1.0.7:
+        resolution:
+            {
+                integrity: sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-number@7.0.0:
+        resolution:
+            {
+                integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==,
+            }
+        engines: { node: '>=0.12.0' }
+
+    is-path-inside@3.0.3:
+        resolution:
+            {
+                integrity: sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==,
+            }
+        engines: { node: '>=8' }
+
+    is-regex@1.1.4:
+        resolution:
+            {
+                integrity: sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-set@2.0.3:
+        resolution:
+            {
+                integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-shared-array-buffer@1.0.3:
+        resolution:
+            {
+                integrity: sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-string@1.0.7:
+        resolution:
+            {
+                integrity: sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-symbol@1.0.4:
+        resolution:
+            {
+                integrity: sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-typed-array@1.1.13:
+        resolution:
+            {
+                integrity: sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-weakmap@2.0.2:
+        resolution:
+            {
+                integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==,
+            }
+        engines: { node: '>= 0.4' }
+
+    is-weakref@1.0.2:
+        resolution:
+            {
+                integrity: sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==,
+            }
+
+    is-weakset@2.0.3:
+        resolution:
+            {
+                integrity: sha512-LvIm3/KWzS9oRFHugab7d+M/GcBXuXX5xZkzPmN+NxihdQlZUQ4dWuSV1xR/sq6upL1TJEDrfBgRepHFdBtSNQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    isarray@2.0.5:
+        resolution:
+            {
+                integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==,
+            }
+
+    isexe@2.0.0:
+        resolution:
+            {
+                integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==,
+            }
+
+    iterator.prototype@1.1.2:
+        resolution:
+            {
+                integrity: sha512-DR33HMMr8EzwuRL8Y9D3u2BMj8+RqSE850jfGu59kS7tbmPLzGkZmVSfyCFSDxuZiEY6Rzt3T2NA/qU+NwVj1w==,
+            }
+
+    jackspeak@2.3.6:
+        resolution:
+            {
+                integrity: sha512-N3yCS/NegsOBokc8GAdM8UcmfsKiSS8cipheD/nivzr700H+nsMOxJjQnvwOcRYVuFkdH0wGUvW2WbXGmrZGbQ==,
+            }
+        engines: { node: '>=14' }
+
+    jackspeak@3.4.3:
+        resolution:
+            {
+                integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==,
+            }
+
+    jiti@1.21.6:
+        resolution:
+            {
+                integrity: sha512-2yTgeWTWzMWkHu6Jp9NKgePDaYHbntiwvYuuJLbbN9vl7DC9DvXKOB2BC3ZZ92D3cvV/aflH0osDfwpHepQ53w==,
+            }
+        hasBin: true
+
+    js-tokens@4.0.0:
+        resolution:
+            {
+                integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==,
+            }
+
+    js-yaml@4.1.0:
+        resolution:
+            {
+                integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==,
+            }
+        hasBin: true
+
+    jsesc@2.5.2:
+        resolution:
+            {
+                integrity: sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==,
+            }
+        engines: { node: '>=4' }
+        hasBin: true
+
+    json-buffer@3.0.1:
+        resolution:
+            {
+                integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==,
+            }
+
+    json-schema-traverse@0.4.1:
+        resolution:
+            {
+                integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==,
+            }
+
+    json-stable-stringify-without-jsonify@1.0.1:
+        resolution:
+            {
+                integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==,
+            }
+
+    json5@1.0.2:
+        resolution:
+            {
+                integrity: sha512-g1MWMLBiz8FKi1e4w0UyVL3w+iJceWAFBAaBnnGKOpNa5f8TLktkbre1+s6oICydWAm+HRUGTmI+//xv2hvXYA==,
+            }
+        hasBin: true
+
+    json5@2.2.3:
+        resolution:
+            {
+                integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==,
+            }
+        engines: { node: '>=6' }
+        hasBin: true
+
+    jsx-ast-utils@3.3.5:
+        resolution:
+            {
+                integrity: sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==,
+            }
+        engines: { node: '>=4.0' }
+
+    keyv@4.5.4:
+        resolution:
+            {
+                integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==,
+            }
+
+    language-subtag-registry@0.3.23:
+        resolution:
+            {
+                integrity: sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==,
+            }
+
+    language-tags@1.0.9:
+        resolution:
+            {
+                integrity: sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==,
+            }
+        engines: { node: '>=0.10' }
+
+    levn@0.4.1:
+        resolution:
+            {
+                integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==,
+            }
+        engines: { node: '>= 0.8.0' }
+
+    lilconfig@2.1.0:
+        resolution:
+            {
+                integrity: sha512-utWOt/GHzuUxnLKxB6dk81RoOeoNeHgbrXiuGk4yyF5qlRz+iIVWu56E2fqGHFrXz0QNUhLB/8nKqvRH66JKGQ==,
+            }
+        engines: { node: '>=10' }
+
+    lilconfig@3.1.2:
+        resolution:
+            {
+                integrity: sha512-eop+wDAvpItUys0FWkHIKeC9ybYrTGbU41U5K7+bttZZeohvnY7M9dZ5kB21GNWiFT2q1OoPTvncPCgSOVO5ow==,
+            }
+        engines: { node: '>=14' }
+
+    lines-and-columns@1.2.4:
+        resolution:
+            {
+                integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==,
+            }
+
+    locate-path@6.0.0:
+        resolution:
+            {
+                integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==,
+            }
+        engines: { node: '>=10' }
+
+    lodash.merge@4.6.2:
+        resolution:
+            {
+                integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==,
+            }
+
+    loose-envify@1.4.0:
+        resolution:
+            {
+                integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==,
+            }
+        hasBin: true
+
+    lru-cache@10.4.3:
+        resolution:
+            {
+                integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==,
+            }
+
+    lru-cache@5.1.1:
+        resolution:
+            {
+                integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==,
+            }
+
+    lucide-react@0.416.0:
+        resolution:
+            {
+                integrity: sha512-wPWxTzdss1CTz2aqcNWNlbh4YSnH9neJWP3RaeXepxpLCTW+pmu7WcT/wxJe+Q7Y7DqGOxAqakJv0pIK3431Ag==,
+            }
+        peerDependencies:
+            react: ^16.5.1 || ^17.0.0 || ^18.0.0 || ^19.0.0
+
+    merge2@1.4.1:
+        resolution:
+            {
+                integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==,
+            }
+        engines: { node: '>= 8' }
+
+    micromatch@4.0.7:
+        resolution:
+            {
+                integrity: sha512-LPP/3KorzCwBxfeUuZmaR6bG2kdeHSbe0P2tY3FLRU4vYrjYz5hI4QZwV0njUx3jeuKe67YukQ1LSPZBKDqO/Q==,
+            }
+        engines: { node: '>=8.6' }
+
+    minimatch@3.1.2:
+        resolution:
+            {
+                integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==,
+            }
+
+    minimatch@9.0.3:
+        resolution:
+            {
+                integrity: sha512-RHiac9mvaRw0x3AYRgDC1CxAP7HTcNrrECeA8YYJeWnpo+2Q5CegtZjaotWTWxDG3UeGA1coE05iH1mPjT/2mg==,
+            }
+        engines: { node: '>=16 || 14 >=14.17' }
+
+    minimatch@9.0.5:
+        resolution:
+            {
+                integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==,
+            }
+        engines: { node: '>=16 || 14 >=14.17' }
+
+    minimist@1.2.8:
+        resolution:
+            {
+                integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==,
+            }
+
+    minipass@7.1.2:
+        resolution:
+            {
+                integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==,
+            }
+        engines: { node: '>=16 || 14 >=14.17' }
+
+    ms@2.1.2:
+        resolution:
+            {
+                integrity: sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==,
+            }
+
+    ms@2.1.3:
+        resolution:
+            {
+                integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==,
+            }
+
+    mz@2.7.0:
+        resolution:
+            {
+                integrity: sha512-z81GNO7nnYMEhrGh9LeymoE4+Yr0Wn5McHIZMK5cfQCl+NDX08sCZgUc9/6MHni9IWuFLm1Z3HTCXu2z9fN62Q==,
+            }
+
+    nanoid@3.3.7:
+        resolution:
+            {
+                integrity: sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==,
+            }
+        engines: { node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1 }
+        hasBin: true
+
+    natural-compare@1.4.0:
+        resolution:
+            {
+                integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==,
+            }
+
+    next@14.2.5:
+        resolution:
+            {
+                integrity: sha512-0f8aRfBVL+mpzfBjYfQuLWh2WyAwtJXCRfkPF4UJ5qd2YwrHczsrSzXU4tRMV0OAxR8ZJZWPFn6uhSC56UTsLA==,
+            }
+        engines: { node: '>=18.17.0' }
+        hasBin: true
+        peerDependencies:
+            '@opentelemetry/api': ^1.1.0
+            '@playwright/test': ^1.41.2
+            react: ^18.2.0
+            react-dom: ^18.2.0
+            sass: ^1.3.0
+        peerDependenciesMeta:
+            '@opentelemetry/api':
+                optional: true
+            '@playwright/test':
+                optional: true
+            sass:
+                optional: true
+
+    node-releases@2.0.18:
+        resolution:
+            {
+                integrity: sha512-d9VeXT4SJ7ZeOqGX6R5EM022wpL+eWPooLI+5UpWn2jCT1aosUQEhQP214x33Wkwx3JQMvIm+tIoVOdodFS40g==,
+            }
+
+    normalize-path@3.0.0:
+        resolution:
+            {
+                integrity: sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==,
+            }
+        engines: { node: '>=0.10.0' }
+
+    object-assign@4.1.1:
+        resolution:
+            {
+                integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==,
+            }
+        engines: { node: '>=0.10.0' }
+
+    object-hash@3.0.0:
+        resolution:
+            {
+                integrity: sha512-RSn9F68PjH9HqtltsSnqYC1XXoWe9Bju5+213R98cNGttag9q9yAOTzdbsqvIa7aNm5WffBZFpWYr2aWrklWAw==,
+            }
+        engines: { node: '>= 6' }
+
+    object-inspect@1.13.2:
+        resolution:
+            {
+                integrity: sha512-IRZSRuzJiynemAXPYtPe5BoI/RESNYR7TYm50MC5Mqbd3Jmw5y790sErYw3V6SryFJD64b74qQQs9wn5Bg/k3g==,
+            }
+        engines: { node: '>= 0.4' }
+
+    object-is@1.1.6:
+        resolution:
+            {
+                integrity: sha512-F8cZ+KfGlSGi09lJT7/Nd6KJZ9ygtvYC0/UYYLI9nmQKLMnydpB9yvbv9K1uSkEu7FU9vYPmVwLg328tX+ot3Q==,
+            }
+        engines: { node: '>= 0.4' }
+
+    object-keys@1.1.1:
+        resolution:
+            {
+                integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    object.assign@4.1.5:
+        resolution:
+            {
+                integrity: sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    object.entries@1.1.8:
+        resolution:
+            {
+                integrity: sha512-cmopxi8VwRIAw/fkijJohSfpef5PdN0pMQJN6VC/ZKvn0LIknWD8KtgY6KlQdEc4tIjcQ3HxSMmnvtzIscdaYQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    object.fromentries@2.0.8:
+        resolution:
+            {
+                integrity: sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    object.groupby@1.0.3:
+        resolution:
+            {
+                integrity: sha512-+Lhy3TQTuzXI5hevh8sBGqbmurHbbIjAi0Z4S63nthVLmLxfbj4T54a4CfZrXIrt9iP4mVAPYMo/v99taj3wjQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    object.values@1.2.0:
+        resolution:
+            {
+                integrity: sha512-yBYjY9QX2hnRmZHAjG/f13MzmBzxzYgQhFrke06TTyKY5zSTEqkOeukBzIdVA3j3ulu8Qa3MbVFShV7T2RmGtQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    once@1.4.0:
+        resolution:
+            {
+                integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==,
+            }
+
+    optionator@0.9.4:
+        resolution:
+            {
+                integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==,
+            }
+        engines: { node: '>= 0.8.0' }
+
+    p-limit@3.1.0:
+        resolution:
+            {
+                integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==,
+            }
+        engines: { node: '>=10' }
+
+    p-locate@5.0.0:
+        resolution:
+            {
+                integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==,
+            }
+        engines: { node: '>=10' }
+
+    package-json-from-dist@1.0.0:
+        resolution:
+            {
+                integrity: sha512-dATvCeZN/8wQsGywez1mzHtTlP22H8OEfPrVMLNr4/eGa+ijtLn/6M5f0dY8UKNrC2O9UCU6SSoG3qRKnt7STw==,
+            }
+
+    parent-module@1.0.1:
+        resolution:
+            {
+                integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==,
+            }
+        engines: { node: '>=6' }
+
+    path-exists@4.0.0:
+        resolution:
+            {
+                integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==,
+            }
+        engines: { node: '>=8' }
+
+    path-is-absolute@1.0.1:
+        resolution:
+            {
+                integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==,
+            }
+        engines: { node: '>=0.10.0' }
+
+    path-key@3.1.1:
+        resolution:
+            {
+                integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==,
+            }
+        engines: { node: '>=8' }
+
+    path-parse@1.0.7:
+        resolution:
+            {
+                integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==,
+            }
+
+    path-scurry@1.11.1:
+        resolution:
+            {
+                integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==,
+            }
+        engines: { node: '>=16 || 14 >=14.18' }
+
+    path-type@4.0.0:
+        resolution:
+            {
+                integrity: sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==,
+            }
+        engines: { node: '>=8' }
+
+    picocolors@1.0.1:
+        resolution:
+            {
+                integrity: sha512-anP1Z8qwhkbmu7MFP5iTt+wQKXgwzf7zTyGlcdzabySa9vd0Xt392U0rVmz9poOaBj0uHJKyyo9/upk0HrEQew==,
+            }
+
+    picomatch@2.3.1:
+        resolution:
+            {
+                integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==,
+            }
+        engines: { node: '>=8.6' }
+
+    pify@2.3.0:
+        resolution:
+            {
+                integrity: sha512-udgsAY+fTnvv7kI7aaxbqwWNb0AHiB0qBO89PZKPkoTmGOgdbrHDKD+0B2X4uTfJ/FT1R09r9gTsjUjNJotuog==,
+            }
+        engines: { node: '>=0.10.0' }
+
+    pirates@4.0.6:
+        resolution:
+            {
+                integrity: sha512-saLsH7WeYYPiD25LDuLRRY/i+6HaPYr6G1OUlN39otzkSTxKnubR9RTxS3/Kk50s1g2JTgFwWQDQyplC5/SHZg==,
+            }
+        engines: { node: '>= 6' }
+
+    possible-typed-array-names@1.0.0:
+        resolution:
+            {
+                integrity: sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==,
+            }
+        engines: { node: '>= 0.4' }
+
+    postcss-import@15.1.0:
+        resolution:
+            {
+                integrity: sha512-hpr+J05B2FVYUAXHeK1YyI267J/dDDhMU6B6civm8hSY1jYJnBXxzKDKDswzJmtLHryrjhnDjqqp/49t8FALew==,
+            }
+        engines: { node: '>=14.0.0' }
+        peerDependencies:
+            postcss: ^8.0.0
+
+    postcss-js@4.0.1:
+        resolution:
+            {
+                integrity: sha512-dDLF8pEO191hJMtlHFPRa8xsizHaM82MLfNkUHdUtVEV3tgTp5oj+8qbEqYM57SLfc74KSbw//4SeJma2LRVIw==,
+            }
+        engines: { node: ^12 || ^14 || >= 16 }
+        peerDependencies:
+            postcss: ^8.4.21
+
+    postcss-load-config@4.0.2:
+        resolution:
+            {
+                integrity: sha512-bSVhyJGL00wMVoPUzAVAnbEoWyqRxkjv64tUl427SKnPrENtq6hJwUojroMz2VB+Q1edmi4IfrAPpami5VVgMQ==,
+            }
+        engines: { node: '>= 14' }
+        peerDependencies:
+            postcss: '>=8.0.9'
+            ts-node: '>=9.0.0'
+        peerDependenciesMeta:
+            postcss:
+                optional: true
+            ts-node:
+                optional: true
+
+    postcss-nested@6.2.0:
+        resolution:
+            {
+                integrity: sha512-HQbt28KulC5AJzG+cZtj9kvKB93CFCdLvog1WFLf1D+xmMvPGlBstkpTEZfK5+AN9hfJocyBFCNiqyS48bpgzQ==,
+            }
+        engines: { node: '>=12.0' }
+        peerDependencies:
+            postcss: ^8.2.14
+
+    postcss-selector-parser@6.1.1:
+        resolution:
+            {
+                integrity: sha512-b4dlw/9V8A71rLIDsSwVmak9z2DuBUB7CA1/wSdelNEzqsjoSPeADTWNO09lpH49Diy3/JIZ2bSPB1dI3LJCHg==,
+            }
+        engines: { node: '>=4' }
+
+    postcss-value-parser@4.2.0:
+        resolution:
+            {
+                integrity: sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==,
+            }
+
+    postcss@8.4.31:
+        resolution:
+            {
+                integrity: sha512-PS08Iboia9mts/2ygV3eLpY5ghnUcfLV/EXTOW1E2qYxJKGGBUtNjN76FYHnMs36RmARn41bC0AZmn+rR0OVpQ==,
+            }
+        engines: { node: ^10 || ^12 || >=14 }
+
+    postcss@8.4.40:
+        resolution:
+            {
+                integrity: sha512-YF2kKIUzAofPMpfH6hOi2cGnv/HrUlfucspc7pDyvv7kGdqXrfj8SCl/t8owkEgKEuu8ZcRjSOxFxVLqwChZ2Q==,
+            }
+        engines: { node: ^10 || ^12 || >=14 }
+
+    prelude-ls@1.2.1:
+        resolution:
+            {
+                integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==,
+            }
+        engines: { node: '>= 0.8.0' }
+
+    prettier-linter-helpers@1.0.0:
+        resolution:
+            {
+                integrity: sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==,
+            }
+        engines: { node: '>=6.0.0' }
+
+    prettier-plugin-pkg@0.18.1:
+        resolution:
+            {
+                integrity: sha512-FuUxvsYZR/8rsLH8s/jbPQmgYvv0yxW8LoIHCy6+Q7p4FBjjdP3DNKx8fMTOsc0SlEB1skB4o1LcahRceIh87A==,
+            }
+        engines: { node: ^14.18.0 || >=16.0.0 }
+        peerDependencies:
+            prettier: ^3.0.3
+
+    prettier-plugin-tailwindcss@0.6.5:
+        resolution:
+            {
+                integrity: sha512-axfeOArc/RiGHjOIy9HytehlC0ZLeMaqY09mm8YCkMzznKiDkwFzOpBvtuhuv3xG5qB73+Mj7OCe2j/L1ryfuQ==,
+            }
+        engines: { node: '>=14.21.3' }
+        peerDependencies:
+            '@ianvs/prettier-plugin-sort-imports': '*'
+            '@prettier/plugin-pug': '*'
+            '@shopify/prettier-plugin-liquid': '*'
+            '@trivago/prettier-plugin-sort-imports': '*'
+            '@zackad/prettier-plugin-twig-melody': '*'
+            prettier: ^3.0
+            prettier-plugin-astro: '*'
+            prettier-plugin-css-order: '*'
+            prettier-plugin-import-sort: '*'
+            prettier-plugin-jsdoc: '*'
+            prettier-plugin-marko: '*'
+            prettier-plugin-organize-attributes: '*'
+            prettier-plugin-organize-imports: '*'
+            prettier-plugin-sort-imports: '*'
+            prettier-plugin-style-order: '*'
+            prettier-plugin-svelte: '*'
+        peerDependenciesMeta:
+            '@ianvs/prettier-plugin-sort-imports':
+                optional: true
+            '@prettier/plugin-pug':
+                optional: true
+            '@shopify/prettier-plugin-liquid':
+                optional: true
+            '@trivago/prettier-plugin-sort-imports':
+                optional: true
+            '@zackad/prettier-plugin-twig-melody':
+                optional: true
+            prettier-plugin-astro:
+                optional: true
+            prettier-plugin-css-order:
+                optional: true
+            prettier-plugin-import-sort:
+                optional: true
+            prettier-plugin-jsdoc:
+                optional: true
+            prettier-plugin-marko:
+                optional: true
+            prettier-plugin-organize-attributes:
+                optional: true
+            prettier-plugin-organize-imports:
+                optional: true
+            prettier-plugin-sort-imports:
+                optional: true
+            prettier-plugin-style-order:
+                optional: true
+            prettier-plugin-svelte:
+                optional: true
+
+    prettier@3.3.3:
+        resolution:
+            {
+                integrity: sha512-i2tDNA0O5IrMO757lfrdQZCc2jPNDVntV0m/+4whiDfWaTKfMNgR7Qz0NAeGz/nRqF4m5/6CLzbP4/liHt12Ew==,
+            }
+        engines: { node: '>=14' }
+        hasBin: true
+
+    prisma@5.17.0:
+        resolution:
+            {
+                integrity: sha512-m4UWkN5lBE6yevqeOxEvmepnL5cNPEjzMw2IqDB59AcEV6w7D8vGljDLd1gPFH+W6gUxw9x7/RmN5dCS/WTPxA==,
+            }
+        engines: { node: '>=16.13' }
+        hasBin: true
+
+    prop-types@15.8.1:
+        resolution:
+            {
+                integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==,
+            }
+
+    punycode@2.3.1:
+        resolution:
+            {
+                integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==,
+            }
+        engines: { node: '>=6' }
+
+    queue-microtask@1.2.3:
+        resolution:
+            {
+                integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==,
+            }
+
+    react-dom@18.3.1:
+        resolution:
+            {
+                integrity: sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==,
+            }
+        peerDependencies:
+            react: ^18.3.1
+
+    react-hook-form@7.52.1:
+        resolution:
+            {
+                integrity: sha512-uNKIhaoICJ5KQALYZ4TOaOLElyM+xipord+Ha3crEFhTntdLvWZqVY49Wqd/0GiVCA/f9NjemLeiNPjG7Hpurg==,
+            }
+        engines: { node: '>=12.22.0' }
+        peerDependencies:
+            react: ^16.8.0 || ^17 || ^18 || ^19
+
+    react-is@16.13.1:
+        resolution:
+            {
+                integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==,
+            }
+
+    react-remove-scroll-bar@2.3.6:
+        resolution:
+            {
+                integrity: sha512-DtSYaao4mBmX+HDo5YWYdBWQwYIQQshUV/dVxFxK+KM26Wjwp1gZ6rv6OC3oujI6Bfu6Xyg3TwK533AQutsn/g==,
+            }
+        engines: { node: '>=10' }
+        peerDependencies:
+            '@types/react': ^16.8.0 || ^17.0.0 || ^18.0.0
+            react: ^16.8.0 || ^17.0.0 || ^18.0.0
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    react-remove-scroll@2.5.7:
+        resolution:
+            {
+                integrity: sha512-FnrTWO4L7/Bhhf3CYBNArEG/yROV0tKmTv7/3h9QCFvH6sndeFf1wPqOcbFVu5VAulS5dV1wGT3GZZ/1GawqiA==,
+            }
+        engines: { node: '>=10' }
+        peerDependencies:
+            '@types/react': ^16.8.0 || ^17.0.0 || ^18.0.0
+            react: ^16.8.0 || ^17.0.0 || ^18.0.0
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    react-style-singleton@2.2.1:
+        resolution:
+            {
+                integrity: sha512-ZWj0fHEMyWkHzKYUr2Bs/4zU6XLmq9HsgBURm7g5pAVfyn49DgUiNgY2d4lXRlYSiCif9YBGpQleewkcqddc7g==,
+            }
+        engines: { node: '>=10' }
+        peerDependencies:
+            '@types/react': ^16.8.0 || ^17.0.0 || ^18.0.0
+            react: ^16.8.0 || ^17.0.0 || ^18.0.0
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    react@18.3.1:
+        resolution:
+            {
+                integrity: sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==,
+            }
+        engines: { node: '>=0.10.0' }
+
+    read-cache@1.0.0:
+        resolution:
+            {
+                integrity: sha512-Owdv/Ft7IjOgm/i0xvNDZ1LrRANRfew4b2prF3OWMQLxLfu3bS8FVhCsrSCMK4lR56Y9ya+AThoTpDCTxCmpRA==,
+            }
+
+    readdirp@3.6.0:
+        resolution:
+            {
+                integrity: sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==,
+            }
+        engines: { node: '>=8.10.0' }
+
+    reflect.getprototypeof@1.0.6:
+        resolution:
+            {
+                integrity: sha512-fmfw4XgoDke3kdI6h4xcUz1dG8uaiv5q9gcEwLS4Pnth2kxT+GZ7YehS1JTMGBQmtV7Y4GFGbs2re2NqhdozUg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    regexp.prototype.flags@1.5.2:
+        resolution:
+            {
+                integrity: sha512-NcDiDkTLuPR+++OCKB0nWafEmhg/Da8aUPLPMQbK+bxKKCm1/S5he+AqYa4PlMCVBalb4/yxIRub6qkEx5yJbw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    resolve-from@4.0.0:
+        resolution:
+            {
+                integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==,
+            }
+        engines: { node: '>=4' }
+
+    resolve-pkg-maps@1.0.0:
+        resolution:
+            {
+                integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==,
+            }
+
+    resolve@1.22.8:
+        resolution:
+            {
+                integrity: sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==,
+            }
+        hasBin: true
+
+    resolve@2.0.0-next.5:
+        resolution:
+            {
+                integrity: sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==,
+            }
+        hasBin: true
+
+    reusify@1.0.4:
+        resolution:
+            {
+                integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==,
+            }
+        engines: { iojs: '>=1.0.0', node: '>=0.10.0' }
+
+    rimraf@3.0.2:
+        resolution:
+            {
+                integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==,
+            }
+        deprecated: Rimraf versions prior to v4 are no longer supported
+        hasBin: true
+
+    run-parallel@1.2.0:
+        resolution:
+            {
+                integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==,
+            }
+
+    safe-array-concat@1.1.2:
+        resolution:
+            {
+                integrity: sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==,
+            }
+        engines: { node: '>=0.4' }
+
+    safe-regex-test@1.0.3:
+        resolution:
+            {
+                integrity: sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    scheduler@0.23.2:
+        resolution:
+            {
+                integrity: sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==,
+            }
+
+    semver@6.3.1:
+        resolution:
+            {
+                integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==,
+            }
+        hasBin: true
+
+    semver@7.6.3:
+        resolution:
+            {
+                integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==,
+            }
+        engines: { node: '>=10' }
+        hasBin: true
+
+    set-function-length@1.2.2:
+        resolution:
+            {
+                integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    set-function-name@2.0.2:
+        resolution:
+            {
+                integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    shebang-command@2.0.0:
+        resolution:
+            {
+                integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==,
+            }
+        engines: { node: '>=8' }
+
+    shebang-regex@3.0.0:
+        resolution:
+            {
+                integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==,
+            }
+        engines: { node: '>=8' }
+
+    side-channel@1.0.6:
+        resolution:
+            {
+                integrity: sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    signal-exit@4.1.0:
+        resolution:
+            {
+                integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==,
+            }
+        engines: { node: '>=14' }
+
+    slash@3.0.0:
+        resolution:
+            {
+                integrity: sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==,
+            }
+        engines: { node: '>=8' }
+
+    source-map-js@1.2.0:
+        resolution:
+            {
+                integrity: sha512-itJW8lvSA0TXEphiRoawsCksnlf8SyvmFzIhltqAHluXd88pkCd+cXJVHTDwdCr0IzwptSm035IHQktUu1QUMg==,
+            }
+        engines: { node: '>=0.10.0' }
+
+    stop-iteration-iterator@1.0.0:
+        resolution:
+            {
+                integrity: sha512-iCGQj+0l0HOdZ2AEeBADlsRC+vsnDsZsbdSiH1yNSjcfKM7fdpCMfqAL/dwF5BLiw/XhRft/Wax6zQbhq2BcjQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    streamsearch@1.1.0:
+        resolution:
+            {
+                integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==,
+            }
+        engines: { node: '>=10.0.0' }
+
+    string-width@4.2.3:
+        resolution:
+            {
+                integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==,
+            }
+        engines: { node: '>=8' }
+
+    string-width@5.1.2:
+        resolution:
+            {
+                integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==,
+            }
+        engines: { node: '>=12' }
+
+    string.prototype.includes@2.0.0:
+        resolution:
+            {
+                integrity: sha512-E34CkBgyeqNDcrbU76cDjL5JLcVrtSdYq0MEh/B10r17pRP4ciHLwTgnuLV8Ay6cgEMLkcBkFCKyFZ43YldYzg==,
+            }
+
+    string.prototype.matchall@4.0.11:
+        resolution:
+            {
+                integrity: sha512-NUdh0aDavY2og7IbBPenWqR9exH+E26Sv8e0/eTe1tltDGZL+GtBkDAnnyBtmekfK6/Dq3MkcGtzXFEd1LQrtg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    string.prototype.repeat@1.0.0:
+        resolution:
+            {
+                integrity: sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==,
+            }
+
+    string.prototype.trim@1.2.9:
+        resolution:
+            {
+                integrity: sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    string.prototype.trimend@1.0.8:
+        resolution:
+            {
+                integrity: sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==,
+            }
+
+    string.prototype.trimstart@1.0.8:
+        resolution:
+            {
+                integrity: sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==,
+            }
+        engines: { node: '>= 0.4' }
+
+    strip-ansi@6.0.1:
+        resolution:
+            {
+                integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==,
+            }
+        engines: { node: '>=8' }
+
+    strip-ansi@7.1.0:
+        resolution:
+            {
+                integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==,
+            }
+        engines: { node: '>=12' }
+
+    strip-bom@3.0.0:
+        resolution:
+            {
+                integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==,
+            }
+        engines: { node: '>=4' }
+
+    strip-json-comments@3.1.1:
+        resolution:
+            {
+                integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==,
+            }
+        engines: { node: '>=8' }
+
+    styled-jsx@5.1.1:
+        resolution:
+            {
+                integrity: sha512-pW7uC1l4mBZ8ugbiZrcIsiIvVx1UmTfw7UkC3Um2tmfUq9Bhk8IiyEIPl6F8agHgjzku6j0xQEZbfA5uSgSaCw==,
+            }
+        engines: { node: '>= 12.0.0' }
+        peerDependencies:
+            '@babel/core': '*'
+            babel-plugin-macros: '*'
+            react: '>= 16.8.0 || 17.x.x || ^18.0.0-0'
+        peerDependenciesMeta:
+            '@babel/core':
+                optional: true
+            babel-plugin-macros:
+                optional: true
+
+    sucrase@3.35.0:
+        resolution:
+            {
+                integrity: sha512-8EbVDiu9iN/nESwxeSxDKe0dunta1GOlHufmSSXxMD2z2/tMZpDMpvXQGsc+ajGo8y2uYUmixaSRUc/QPoQ0GA==,
+            }
+        engines: { node: '>=16 || 14 >=14.17' }
+        hasBin: true
+
+    supports-color@5.5.0:
+        resolution:
+            {
+                integrity: sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==,
+            }
+        engines: { node: '>=4' }
+
+    supports-color@7.2.0:
+        resolution:
+            {
+                integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==,
+            }
+        engines: { node: '>=8' }
+
+    supports-preserve-symlinks-flag@1.0.0:
+        resolution:
+            {
+                integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==,
+            }
+        engines: { node: '>= 0.4' }
+
+    synckit@0.9.1:
+        resolution:
+            {
+                integrity: sha512-7gr8p9TQP6RAHusBOSLs46F4564ZrjV8xFmw5zCmgmhGUcw2hxsShhJ6CEiHQMgPDwAQ1fWHPM0ypc4RMAig4A==,
+            }
+        engines: { node: ^14.18.0 || >=16.0.0 }
+
+    tailwind-merge@2.4.0:
+        resolution:
+            {
+                integrity: sha512-49AwoOQNKdqKPd9CViyH5wJoSKsCDjUlzL8DxuGp3P1FsGY36NJDAa18jLZcaHAUUuTj+JB8IAo8zWgBNvBF7A==,
+            }
+
+    tailwindcss-animate@1.0.7:
+        resolution:
+            {
+                integrity: sha512-bl6mpH3T7I3UFxuvDEXLxy/VuFxBk5bbzplh7tXI68mwMokNYd1t9qPBHlnyTwfa4JGC4zP516I1hYYtQ/vspA==,
+            }
+        peerDependencies:
+            tailwindcss: '>=3.0.0 || insiders'
+
+    tailwindcss@3.4.7:
+        resolution:
+            {
+                integrity: sha512-rxWZbe87YJb4OcSopb7up2Ba4U82BoiSGUdoDr3Ydrg9ckxFS/YWsvhN323GMcddgU65QRy7JndC7ahhInhvlQ==,
+            }
+        engines: { node: '>=14.0.0' }
+        hasBin: true
+
+    tapable@2.2.1:
+        resolution:
+            {
+                integrity: sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==,
+            }
+        engines: { node: '>=6' }
+
+    text-table@0.2.0:
+        resolution:
+            {
+                integrity: sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==,
+            }
+
+    thenify-all@1.6.0:
+        resolution:
+            {
+                integrity: sha512-RNxQH/qI8/t3thXJDwcstUO4zeqo64+Uy/+sNVRBx4Xn2OX+OZ9oP+iJnNFqplFra2ZUVeKCSa2oVWi3T4uVmA==,
+            }
+        engines: { node: '>=0.8' }
+
+    thenify@3.3.1:
+        resolution:
+            {
+                integrity: sha512-RVZSIV5IG10Hk3enotrhvz0T9em6cyHBLkH/YAZuKqd8hRkKhSfCGIcP2KUY0EPxndzANBmNllzWPwak+bheSw==,
+            }
+
+    to-fast-properties@2.0.0:
+        resolution:
+            {
+                integrity: sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==,
+            }
+        engines: { node: '>=4' }
+
+    to-regex-range@5.0.1:
+        resolution:
+            {
+                integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==,
+            }
+        engines: { node: '>=8.0' }
+
+    ts-api-utils@1.3.0:
+        resolution:
+            {
+                integrity: sha512-UQMIo7pb8WRomKR1/+MFVLTroIvDVtMX3K6OUir8ynLyzB8Jeriont2bTAtmNPa1ekAgN7YPDyf6V+ygrdU+eQ==,
+            }
+        engines: { node: '>=16' }
+        peerDependencies:
+            typescript: '>=4.2.0'
+
+    ts-interface-checker@0.1.13:
+        resolution:
+            {
+                integrity: sha512-Y/arvbn+rrz3JCKl9C4kVNfTfSm2/mEp5FSz5EsZSANGPSlQrpRI5M4PKF+mJnE52jOO90PnPSc3Ur3bTQw0gA==,
+            }
+
+    tsconfig-paths@3.15.0:
+        resolution:
+            {
+                integrity: sha512-2Ac2RgzDe/cn48GvOe3M+o82pEFewD3UPbyoUHHdKasHwJKjds4fLXWf/Ux5kATBKN20oaFGu+jbElp1pos0mg==,
+            }
+
+    tslib@2.6.3:
+        resolution:
+            {
+                integrity: sha512-xNvxJEOUiWPGhUuUdQgAJPKOOJfGnIyKySOc09XkKsgdUV/3E2zvwZYdejjmRgPCgcym1juLH3226yA7sEFJKQ==,
+            }
+
+    type-check@0.4.0:
+        resolution:
+            {
+                integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==,
+            }
+        engines: { node: '>= 0.8.0' }
+
+    type-fest@0.20.2:
+        resolution:
+            {
+                integrity: sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==,
+            }
+        engines: { node: '>=10' }
+
+    typed-array-buffer@1.0.2:
+        resolution:
+            {
+                integrity: sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==,
+            }
+        engines: { node: '>= 0.4' }
+
+    typed-array-byte-length@1.0.1:
+        resolution:
+            {
+                integrity: sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    typed-array-byte-offset@1.0.2:
+        resolution:
+            {
+                integrity: sha512-Ous0vodHa56FviZucS2E63zkgtgrACj7omjwd/8lTEMEPFFyjfixMZ1ZXenpgCFBBt4EC1J2XsyVS2gkG0eTFA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    typed-array-length@1.0.6:
+        resolution:
+            {
+                integrity: sha512-/OxDN6OtAk5KBpGb28T+HZc2M+ADtvRxXrKKbUwtsLgdoxgX13hyy7ek6bFRl5+aBs2yZzB0c4CnQfAtVypW/g==,
+            }
+        engines: { node: '>= 0.4' }
+
+    typescript@5.4.5:
+        resolution:
+            {
+                integrity: sha512-vcI4UpRgg81oIRUFwR0WSIHKt11nJ7SAVlYNIu+QpqeyXP+gpQJy/Z4+F0aGxSE4MqwjyXvW/TzgkLAx2AGHwQ==,
+            }
+        engines: { node: '>=14.17' }
+        hasBin: true
+
+    unbox-primitive@1.0.2:
+        resolution:
+            {
+                integrity: sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==,
+            }
+
+    undici-types@5.26.5:
+        resolution:
+            {
+                integrity: sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==,
+            }
+
+    update-browserslist-db@1.1.0:
+        resolution:
+            {
+                integrity: sha512-EdRAaAyk2cUE1wOf2DkEhzxqOQvFOoRJFNS6NeyJ01Gp2beMRpBAINjM2iDXE3KCuKhwnvHIQCJm6ThL2Z+HzQ==,
+            }
+        hasBin: true
+        peerDependencies:
+            browserslist: '>= 4.21.0'
+
+    uri-js@4.4.1:
+        resolution:
+            {
+                integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==,
+            }
+
+    use-callback-ref@1.3.2:
+        resolution:
+            {
+                integrity: sha512-elOQwe6Q8gqZgDA8mrh44qRTQqpIHDcZ3hXTLjBe1i4ph8XpNJnO+aQf3NaG+lriLopI4HMx9VjQLfPQ6vhnoA==,
+            }
+        engines: { node: '>=10' }
+        peerDependencies:
+            '@types/react': ^16.8.0 || ^17.0.0 || ^18.0.0
+            react: ^16.8.0 || ^17.0.0 || ^18.0.0
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    use-sidecar@1.1.2:
+        resolution:
+            {
+                integrity: sha512-epTbsLuzZ7lPClpz2TyryBfztm7m+28DlEv2ZCQ3MDr5ssiwyOwGH/e5F9CkfWjJ1t4clvI58yF822/GUkjjhw==,
+            }
+        engines: { node: '>=10' }
+        peerDependencies:
+            '@types/react': ^16.9.0 || ^17.0.0 || ^18.0.0
+            react: ^16.8.0 || ^17.0.0 || ^18.0.0
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+
+    use-sync-external-store@1.2.0:
+        resolution:
+            {
+                integrity: sha512-eEgnFxGQ1Ife9bzYs6VLi8/4X6CObHMw9Qr9tPY43iKwsPw8xE8+EFsf/2cFZ5S3esXgpWgtSCtLNS41F+sKPA==,
+            }
+        peerDependencies:
+            react: ^16.8.0 || ^17.0.0 || ^18.0.0
+
+    util-deprecate@1.0.2:
+        resolution:
+            {
+                integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==,
+            }
+
+    which-boxed-primitive@1.0.2:
+        resolution:
+            {
+                integrity: sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==,
+            }
+
+    which-builtin-type@1.1.3:
+        resolution:
+            {
+                integrity: sha512-YmjsSMDBYsM1CaFiayOVT06+KJeXf0o5M/CAd4o1lTadFAtacTUM49zoYxr/oroopFDfhvN6iEcBxUyc3gvKmw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    which-collection@1.0.2:
+        resolution:
+            {
+                integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==,
+            }
+        engines: { node: '>= 0.4' }
+
+    which-typed-array@1.1.15:
+        resolution:
+            {
+                integrity: sha512-oV0jmFtUky6CXfkqehVvBP/LSWJ2sy4vWMioiENyJLePrBO/yKyV9OyJySfAKosh+RYkIl5zJCNZ8/4JncrpdA==,
+            }
+        engines: { node: '>= 0.4' }
+
+    which@2.0.2:
+        resolution:
+            {
+                integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==,
+            }
+        engines: { node: '>= 8' }
+        hasBin: true
+
+    word-wrap@1.2.5:
+        resolution:
+            {
+                integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==,
+            }
+        engines: { node: '>=0.10.0' }
+
+    wrap-ansi@7.0.0:
+        resolution:
+            {
+                integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==,
+            }
+        engines: { node: '>=10' }
+
+    wrap-ansi@8.1.0:
+        resolution:
+            {
+                integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==,
+            }
+        engines: { node: '>=12' }
+
+    wrappy@1.0.2:
+        resolution:
+            {
+                integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==,
+            }
+
+    yallist@3.1.1:
+        resolution:
+            {
+                integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==,
+            }
+
+    yaml@2.5.0:
+        resolution:
+            {
+                integrity: sha512-2wWLbGbYDiSqqIKoPjar3MPgB94ErzCtrNE1FdqGuaO0pi2JGjmE8aW8TDZwzU7vuxcGRdL/4gPQwQ7hD5AMSw==,
+            }
+        engines: { node: '>= 14' }
+        hasBin: true
+
+    yocto-queue@0.1.0:
+        resolution:
+            {
+                integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==,
+            }
+        engines: { node: '>=10' }
+
+    zod@3.23.8:
+        resolution:
+            {
+                integrity: sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==,
+            }
+
+    zustand@4.5.4:
+        resolution:
+            {
+                integrity: sha512-/BPMyLKJPtFEvVL0E9E9BTUM63MNyhPGlvxk1XjrfWTUlV+BR8jufjsovHzrtR6YNcBEcL7cMHovL1n9xHawEg==,
+            }
+        engines: { node: '>=12.7.0' }
+        peerDependencies:
+            '@types/react': '>=16.8'
+            immer: '>=9.0.6'
+            react: '>=16.8'
+        peerDependenciesMeta:
+            '@types/react':
+                optional: true
+            immer:
+                optional: true
+            react:
+                optional: true
+
+snapshots:
+    '@alloc/quick-lru@5.2.0': {}
+
+    '@ampproject/remapping@2.3.0':
+        dependencies:
+            '@jridgewell/gen-mapping': 0.3.5
+            '@jridgewell/trace-mapping': 0.3.25
+
+    '@babel/code-frame@7.24.7':
+        dependencies:
+            '@babel/highlight': 7.24.7
+            picocolors: 1.0.1
+
+    '@babel/compat-data@7.24.9': {}
+
+    '@babel/core@7.24.9':
+        dependencies:
+            '@ampproject/remapping': 2.3.0
+            '@babel/code-frame': 7.24.7
+            '@babel/generator': 7.24.10
+            '@babel/helper-compilation-targets': 7.24.8
+            '@babel/helper-module-transforms': 7.24.9(@babel/core@7.24.9)
+            '@babel/helpers': 7.24.8
+            '@babel/parser': 7.24.8
+            '@babel/template': 7.24.7
+            '@babel/traverse': 7.24.8
+            '@babel/types': 7.24.9
+            convert-source-map: 2.0.0
+            debug: 4.3.5
+            gensync: 1.0.0-beta.2
+            json5: 2.2.3
+            semver: 6.3.1
+        transitivePeerDependencies:
+            - supports-color
+
+    '@babel/generator@7.24.10':
+        dependencies:
+            '@babel/types': 7.24.9
+            '@jridgewell/gen-mapping': 0.3.5
+            '@jridgewell/trace-mapping': 0.3.25
+            jsesc: 2.5.2
+
+    '@babel/helper-compilation-targets@7.24.8':
+        dependencies:
+            '@babel/compat-data': 7.24.9
+            '@babel/helper-validator-option': 7.24.8
+            browserslist: 4.23.2
+            lru-cache: 5.1.1
+            semver: 6.3.1
+
+    '@babel/helper-environment-visitor@7.24.7':
+        dependencies:
+            '@babel/types': 7.24.9
+
+    '@babel/helper-function-name@7.24.7':
+        dependencies:
+            '@babel/template': 7.24.7
+            '@babel/types': 7.24.9
+
+    '@babel/helper-hoist-variables@7.24.7':
+        dependencies:
+            '@babel/types': 7.24.9
+
+    '@babel/helper-module-imports@7.24.7':
+        dependencies:
+            '@babel/traverse': 7.24.8
+            '@babel/types': 7.24.9
+        transitivePeerDependencies:
+            - supports-color
+
+    '@babel/helper-module-transforms@7.24.9(@babel/core@7.24.9)':
+        dependencies:
+            '@babel/core': 7.24.9
+            '@babel/helper-environment-visitor': 7.24.7
+            '@babel/helper-module-imports': 7.24.7
+            '@babel/helper-simple-access': 7.24.7
+            '@babel/helper-split-export-declaration': 7.24.7
+            '@babel/helper-validator-identifier': 7.24.7
+        transitivePeerDependencies:
+            - supports-color
+
+    '@babel/helper-simple-access@7.24.7':
+        dependencies:
+            '@babel/traverse': 7.24.8
+            '@babel/types': 7.24.9
+        transitivePeerDependencies:
+            - supports-color
+
+    '@babel/helper-split-export-declaration@7.24.7':
+        dependencies:
+            '@babel/types': 7.24.9
+
+    '@babel/helper-string-parser@7.24.8': {}
+
+    '@babel/helper-validator-identifier@7.24.7': {}
+
+    '@babel/helper-validator-option@7.24.8': {}
+
+    '@babel/helpers@7.24.8':
+        dependencies:
+            '@babel/template': 7.24.7
+            '@babel/types': 7.24.9
+
+    '@babel/highlight@7.24.7':
+        dependencies:
+            '@babel/helper-validator-identifier': 7.24.7
+            chalk: 2.4.2
+            js-tokens: 4.0.0
+            picocolors: 1.0.1
+
+    '@babel/parser@7.24.8':
+        dependencies:
+            '@babel/types': 7.24.9
+
+    '@babel/template@7.24.7':
+        dependencies:
+            '@babel/code-frame': 7.24.7
+            '@babel/parser': 7.24.8
+            '@babel/types': 7.24.9
+
+    '@babel/traverse@7.24.8':
+        dependencies:
+            '@babel/code-frame': 7.24.7
+            '@babel/generator': 7.24.10
+            '@babel/helper-environment-visitor': 7.24.7
+            '@babel/helper-function-name': 7.24.7
+            '@babel/helper-hoist-variables': 7.24.7
+            '@babel/helper-split-export-declaration': 7.24.7
+            '@babel/parser': 7.24.8
+            '@babel/types': 7.24.9
+            debug: 4.3.5
+            globals: 11.12.0
+        transitivePeerDependencies:
+            - supports-color
+
+    '@babel/types@7.24.9':
+        dependencies:
+            '@babel/helper-string-parser': 7.24.8
+            '@babel/helper-validator-identifier': 7.24.7
+            to-fast-properties: 2.0.0
+
+    '@eslint-community/eslint-utils@4.4.0(eslint@8.57.0)':
+        dependencies:
+            eslint: 8.57.0
+            eslint-visitor-keys: 3.4.3
+
+    '@eslint-community/regexpp@4.11.0': {}
+
+    '@eslint/eslintrc@2.1.4':
+        dependencies:
+            ajv: 6.12.6
+            debug: 4.3.5
+            espree: 9.6.1
+            globals: 13.24.0
+            ignore: 5.3.1
+            import-fresh: 3.3.0
+            js-yaml: 4.1.0
+            minimatch: 3.1.2
+            strip-json-comments: 3.1.1
+        transitivePeerDependencies:
+            - supports-color
+
+    '@eslint/js@8.57.0': {}
+
+    '@floating-ui/core@1.6.5':
+        dependencies:
+            '@floating-ui/utils': 0.2.5
+
+    '@floating-ui/dom@1.6.8':
+        dependencies:
+            '@floating-ui/core': 1.6.5
+            '@floating-ui/utils': 0.2.5
+
+    '@floating-ui/react-dom@2.1.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@floating-ui/dom': 1.6.8
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+
+    '@floating-ui/utils@0.2.5': {}
+
+    '@hookform/resolvers@3.9.0(react-hook-form@7.52.1(react@18.3.1))':
+        dependencies:
+            react-hook-form: 7.52.1(react@18.3.1)
+
+    '@humanwhocodes/config-array@0.11.14':
+        dependencies:
+            '@humanwhocodes/object-schema': 2.0.3
+            debug: 4.3.5
+            minimatch: 3.1.2
+        transitivePeerDependencies:
+            - supports-color
+
+    '@humanwhocodes/module-importer@1.0.1': {}
+
+    '@humanwhocodes/object-schema@2.0.3': {}
+
+    '@ianvs/prettier-plugin-sort-imports@4.3.1(prettier@3.3.3)':
+        dependencies:
+            '@babel/core': 7.24.9
+            '@babel/generator': 7.24.10
+            '@babel/parser': 7.24.8
+            '@babel/traverse': 7.24.8
+            '@babel/types': 7.24.9
+            prettier: 3.3.3
+            semver: 7.6.3
+        transitivePeerDependencies:
+            - supports-color
+
+    '@isaacs/cliui@8.0.2':
+        dependencies:
+            string-width: 5.1.2
+            string-width-cjs: string-width@4.2.3
+            strip-ansi: 7.1.0
+            strip-ansi-cjs: strip-ansi@6.0.1
+            wrap-ansi: 8.1.0
+            wrap-ansi-cjs: wrap-ansi@7.0.0
+
+    '@jridgewell/gen-mapping@0.3.5':
+        dependencies:
+            '@jridgewell/set-array': 1.2.1
+            '@jridgewell/sourcemap-codec': 1.5.0
+            '@jridgewell/trace-mapping': 0.3.25
+
+    '@jridgewell/resolve-uri@3.1.2': {}
+
+    '@jridgewell/set-array@1.2.1': {}
+
+    '@jridgewell/sourcemap-codec@1.5.0': {}
+
+    '@jridgewell/trace-mapping@0.3.25':
+        dependencies:
+            '@jridgewell/resolve-uri': 3.1.2
+            '@jridgewell/sourcemap-codec': 1.5.0
+
+    '@next/env@14.2.5': {}
+
+    '@next/eslint-plugin-next@14.2.5':
+        dependencies:
+            glob: 10.3.10
+
+    '@next/swc-darwin-arm64@14.2.5':
+        optional: true
+
+    '@next/swc-darwin-x64@14.2.5':
+        optional: true
+
+    '@next/swc-linux-arm64-gnu@14.2.5':
+        optional: true
+
+    '@next/swc-linux-arm64-musl@14.2.5':
+        optional: true
+
+    '@next/swc-linux-x64-gnu@14.2.5':
+        optional: true
+
+    '@next/swc-linux-x64-musl@14.2.5':
+        optional: true
+
+    '@next/swc-win32-arm64-msvc@14.2.5':
+        optional: true
+
+    '@next/swc-win32-ia32-msvc@14.2.5':
+        optional: true
+
+    '@next/swc-win32-x64-msvc@14.2.5':
+        optional: true
+
+    '@nodelib/fs.scandir@2.1.5':
+        dependencies:
+            '@nodelib/fs.stat': 2.0.5
+            run-parallel: 1.2.0
+
+    '@nodelib/fs.stat@2.0.5': {}
+
+    '@nodelib/fs.walk@1.2.8':
+        dependencies:
+            '@nodelib/fs.scandir': 2.1.5
+            fastq: 1.17.1
+
+    '@pkgjs/parseargs@0.11.0':
+        optional: true
+
+    '@pkgr/core@0.1.1': {}
+
+    '@prisma/client@5.17.0(prisma@5.17.0)':
+        optionalDependencies:
+            prisma: 5.17.0
+
+    '@prisma/debug@5.17.0': {}
+
+    '@prisma/engines-version@5.17.0-31.393aa359c9ad4a4bb28630fb5613f9c281cde053': {}
+
+    '@prisma/engines@5.17.0':
+        dependencies:
+            '@prisma/debug': 5.17.0
+            '@prisma/engines-version': 5.17.0-31.393aa359c9ad4a4bb28630fb5613f9c281cde053
+            '@prisma/fetch-engine': 5.17.0
+            '@prisma/get-platform': 5.17.0
+
+    '@prisma/fetch-engine@5.17.0':
+        dependencies:
+            '@prisma/debug': 5.17.0
+            '@prisma/engines-version': 5.17.0-31.393aa359c9ad4a4bb28630fb5613f9c281cde053
+            '@prisma/get-platform': 5.17.0
+
+    '@prisma/get-platform@5.17.0':
+        dependencies:
+            '@prisma/debug': 5.17.0
+
+    '@radix-ui/number@1.1.0': {}
+
+    '@radix-ui/primitive@1.1.0': {}
+
+    '@radix-ui/react-arrow@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-checkbox@1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/primitive': 1.1.0
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-context': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-presence': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-previous': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-size': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-collection@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-context': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-slot': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-compose-refs@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-context@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-dialog@1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/primitive': 1.1.0
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-context': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-dismissable-layer': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-focus-guards': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-focus-scope': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-id': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-portal': 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-presence': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-slot': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            aria-hidden: 1.2.4
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+            react-remove-scroll: 2.5.7(@types/react@18.3.3)(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-direction@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-dismissable-layer@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/primitive': 1.1.0
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-escape-keydown': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-dropdown-menu@2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/primitive': 1.1.0
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-context': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-id': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-menu': 2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-focus-guards@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-focus-scope@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-id@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-label@2.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-menu@2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/primitive': 1.1.0
+            '@radix-ui/react-collection': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-context': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-direction': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-dismissable-layer': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-focus-guards': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-focus-scope': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-id': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-popper': 1.2.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-portal': 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-presence': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-roving-focus': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-slot': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            aria-hidden: 1.2.4
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+            react-remove-scroll: 2.5.7(@types/react@18.3.3)(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-popper@1.2.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@floating-ui/react-dom': 2.1.1(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-arrow': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-context': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-rect': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-size': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/rect': 1.1.0
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-portal@1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-presence@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-primitive@2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-slot': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-roving-focus@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/primitive': 1.1.0
+            '@radix-ui/react-collection': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-context': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-direction': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-id': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-select@2.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/number': 1.1.0
+            '@radix-ui/primitive': 1.1.0
+            '@radix-ui/react-collection': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-context': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-direction': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-dismissable-layer': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-focus-guards': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-focus-scope': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-id': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-popper': 1.2.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-portal': 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-slot': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-previous': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-visually-hidden': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            aria-hidden: 1.2.4
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+            react-remove-scroll: 2.5.7(@types/react@18.3.3)(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-slot@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-toast@1.2.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/primitive': 1.1.0
+            '@radix-ui/react-collection': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-compose-refs': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-context': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-dismissable-layer': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-portal': 1.1.1(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-presence': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            '@radix-ui/react-visually-hidden': 1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/react-use-callback-ref@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-use-controllable-state@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-use-escape-keydown@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-use-layout-effect@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-use-previous@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-use-rect@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            '@radix-ui/rect': 1.1.0
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-use-size@1.1.0(@types/react@18.3.3)(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@18.3.3)(react@18.3.1)
+            react: 18.3.1
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    '@radix-ui/react-visually-hidden@1.1.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
+        dependencies:
+            '@radix-ui/react-primitive': 2.0.0(@types/react-dom@18.3.0)(@types/react@18.3.3)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            '@types/react-dom': 18.3.0
+
+    '@radix-ui/rect@1.1.0': {}
+
+    '@rushstack/eslint-patch@1.10.3': {}
+
+    '@swc/counter@0.1.3': {}
+
+    '@swc/helpers@0.5.5':
+        dependencies:
+            '@swc/counter': 0.1.3
+            tslib: 2.6.3
+
+    '@types/json5@0.0.29': {}
+
+    '@types/node@20.14.12':
+        dependencies:
+            undici-types: 5.26.5
+
+    '@types/prop-types@15.7.12': {}
+
+    '@types/react-dom@18.3.0':
+        dependencies:
+            '@types/react': 18.3.3
+
+    '@types/react@18.3.3':
+        dependencies:
+            '@types/prop-types': 15.7.12
+            csstype: 3.1.3
+
+    '@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5)':
+        dependencies:
+            '@typescript-eslint/scope-manager': 7.2.0
+            '@typescript-eslint/types': 7.2.0
+            '@typescript-eslint/typescript-estree': 7.2.0(typescript@5.4.5)
+            '@typescript-eslint/visitor-keys': 7.2.0
+            debug: 4.3.5
+            eslint: 8.57.0
+        optionalDependencies:
+            typescript: 5.4.5
+        transitivePeerDependencies:
+            - supports-color
+
+    '@typescript-eslint/scope-manager@7.2.0':
+        dependencies:
+            '@typescript-eslint/types': 7.2.0
+            '@typescript-eslint/visitor-keys': 7.2.0
+
+    '@typescript-eslint/types@7.2.0': {}
+
+    '@typescript-eslint/typescript-estree@7.2.0(typescript@5.4.5)':
+        dependencies:
+            '@typescript-eslint/types': 7.2.0
+            '@typescript-eslint/visitor-keys': 7.2.0
+            debug: 4.3.5
+            globby: 11.1.0
+            is-glob: 4.0.3
+            minimatch: 9.0.3
+            semver: 7.6.3
+            ts-api-utils: 1.3.0(typescript@5.4.5)
+        optionalDependencies:
+            typescript: 5.4.5
+        transitivePeerDependencies:
+            - supports-color
+
+    '@typescript-eslint/visitor-keys@7.2.0':
+        dependencies:
+            '@typescript-eslint/types': 7.2.0
+            eslint-visitor-keys: 3.4.3
+
+    '@ungap/structured-clone@1.2.0': {}
+
+    acorn-jsx@5.3.2(acorn@8.12.1):
+        dependencies:
+            acorn: 8.12.1
+
+    acorn@8.12.1: {}
+
+    ajv@6.12.6:
+        dependencies:
+            fast-deep-equal: 3.1.3
+            fast-json-stable-stringify: 2.1.0
+            json-schema-traverse: 0.4.1
+            uri-js: 4.4.1
+
+    ansi-regex@5.0.1: {}
+
+    ansi-regex@6.0.1: {}
+
+    ansi-styles@3.2.1:
+        dependencies:
+            color-convert: 1.9.3
+
+    ansi-styles@4.3.0:
+        dependencies:
+            color-convert: 2.0.1
+
+    ansi-styles@6.2.1: {}
+
+    any-promise@1.3.0: {}
+
+    anymatch@3.1.3:
+        dependencies:
+            normalize-path: 3.0.0
+            picomatch: 2.3.1
+
+    arg@5.0.2: {}
+
+    argparse@2.0.1: {}
+
+    aria-hidden@1.2.4:
+        dependencies:
+            tslib: 2.6.3
+
+    aria-query@5.1.3:
+        dependencies:
+            deep-equal: 2.2.3
+
+    array-buffer-byte-length@1.0.1:
+        dependencies:
+            call-bind: 1.0.7
+            is-array-buffer: 3.0.4
+
+    array-includes@3.1.8:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-object-atoms: 1.0.0
+            get-intrinsic: 1.2.4
+            is-string: 1.0.7
+
+    array-union@2.1.0: {}
+
+    array.prototype.findlast@1.2.5:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-errors: 1.3.0
+            es-object-atoms: 1.0.0
+            es-shim-unscopables: 1.0.2
+
+    array.prototype.findlastindex@1.2.5:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-errors: 1.3.0
+            es-object-atoms: 1.0.0
+            es-shim-unscopables: 1.0.2
+
+    array.prototype.flat@1.3.2:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-shim-unscopables: 1.0.2
+
+    array.prototype.flatmap@1.3.2:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-shim-unscopables: 1.0.2
+
+    array.prototype.tosorted@1.1.4:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-errors: 1.3.0
+            es-shim-unscopables: 1.0.2
+
+    arraybuffer.prototype.slice@1.0.3:
+        dependencies:
+            array-buffer-byte-length: 1.0.1
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-errors: 1.3.0
+            get-intrinsic: 1.2.4
+            is-array-buffer: 3.0.4
+            is-shared-array-buffer: 1.0.3
+
+    ast-types-flow@0.0.8: {}
+
+    available-typed-arrays@1.0.7:
+        dependencies:
+            possible-typed-array-names: 1.0.0
+
+    axe-core@4.9.1: {}
+
+    axobject-query@3.1.1:
+        dependencies:
+            deep-equal: 2.2.3
+
+    balanced-match@1.0.2: {}
+
+    binary-extensions@2.3.0: {}
+
+    brace-expansion@1.1.11:
+        dependencies:
+            balanced-match: 1.0.2
+            concat-map: 0.0.1
+
+    brace-expansion@2.0.1:
+        dependencies:
+            balanced-match: 1.0.2
+
+    braces@3.0.3:
+        dependencies:
+            fill-range: 7.1.1
+
+    browserslist@4.23.2:
+        dependencies:
+            caniuse-lite: 1.0.30001643
+            electron-to-chromium: 1.5.2
+            node-releases: 2.0.18
+            update-browserslist-db: 1.1.0(browserslist@4.23.2)
+
+    busboy@1.6.0:
+        dependencies:
+            streamsearch: 1.1.0
+
+    call-bind@1.0.7:
+        dependencies:
+            es-define-property: 1.0.0
+            es-errors: 1.3.0
+            function-bind: 1.1.2
+            get-intrinsic: 1.2.4
+            set-function-length: 1.2.2
+
+    callsites@3.1.0: {}
+
+    camelcase-css@2.0.1: {}
+
+    caniuse-lite@1.0.30001643: {}
+
+    chalk@2.4.2:
+        dependencies:
+            ansi-styles: 3.2.1
+            escape-string-regexp: 1.0.5
+            supports-color: 5.5.0
+
+    chalk@4.1.2:
+        dependencies:
+            ansi-styles: 4.3.0
+            supports-color: 7.2.0
+
+    chokidar@3.6.0:
+        dependencies:
+            anymatch: 3.1.3
+            braces: 3.0.3
+            glob-parent: 5.1.2
+            is-binary-path: 2.1.0
+            is-glob: 4.0.3
+            normalize-path: 3.0.0
+            readdirp: 3.6.0
+        optionalDependencies:
+            fsevents: 2.3.3
+
+    class-variance-authority@0.7.0:
+        dependencies:
+            clsx: 2.0.0
+
+    client-only@0.0.1: {}
+
+    clsx@2.0.0: {}
+
+    clsx@2.1.1: {}
+
+    color-convert@1.9.3:
+        dependencies:
+            color-name: 1.1.3
+
+    color-convert@2.0.1:
+        dependencies:
+            color-name: 1.1.4
+
+    color-name@1.1.3: {}
+
+    color-name@1.1.4: {}
+
+    commander@4.1.1: {}
+
+    concat-map@0.0.1: {}
+
+    convert-source-map@2.0.0: {}
+
+    cross-spawn@7.0.3:
+        dependencies:
+            path-key: 3.1.1
+            shebang-command: 2.0.0
+            which: 2.0.2
+
+    cssesc@3.0.0: {}
+
+    csstype@3.1.3: {}
+
+    damerau-levenshtein@1.0.8: {}
+
+    data-view-buffer@1.0.1:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            is-data-view: 1.0.1
+
+    data-view-byte-length@1.0.1:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            is-data-view: 1.0.1
+
+    data-view-byte-offset@1.0.0:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            is-data-view: 1.0.1
+
+    debug@3.2.7:
+        dependencies:
+            ms: 2.1.3
+
+    debug@4.3.5:
+        dependencies:
+            ms: 2.1.2
+
+    deep-equal@2.2.3:
+        dependencies:
+            array-buffer-byte-length: 1.0.1
+            call-bind: 1.0.7
+            es-get-iterator: 1.1.3
+            get-intrinsic: 1.2.4
+            is-arguments: 1.1.1
+            is-array-buffer: 3.0.4
+            is-date-object: 1.0.5
+            is-regex: 1.1.4
+            is-shared-array-buffer: 1.0.3
+            isarray: 2.0.5
+            object-is: 1.1.6
+            object-keys: 1.1.1
+            object.assign: 4.1.5
+            regexp.prototype.flags: 1.5.2
+            side-channel: 1.0.6
+            which-boxed-primitive: 1.0.2
+            which-collection: 1.0.2
+            which-typed-array: 1.1.15
+
+    deep-is@0.1.4: {}
+
+    define-data-property@1.1.4:
+        dependencies:
+            es-define-property: 1.0.0
+            es-errors: 1.3.0
+            gopd: 1.0.1
+
+    define-properties@1.2.1:
+        dependencies:
+            define-data-property: 1.1.4
+            has-property-descriptors: 1.0.2
+            object-keys: 1.1.1
+
+    detect-node-es@1.1.0: {}
+
+    didyoumean@1.2.2: {}
+
+    dir-glob@3.0.1:
+        dependencies:
+            path-type: 4.0.0
+
+    dlv@1.1.3: {}
+
+    doctrine@2.1.0:
+        dependencies:
+            esutils: 2.0.3
+
+    doctrine@3.0.0:
+        dependencies:
+            esutils: 2.0.3
+
+    eastasianwidth@0.2.0: {}
+
+    electron-to-chromium@1.5.2: {}
+
+    emoji-regex@8.0.0: {}
+
+    emoji-regex@9.2.2: {}
+
+    enhanced-resolve@5.17.1:
+        dependencies:
+            graceful-fs: 4.2.11
+            tapable: 2.2.1
+
+    es-abstract@1.23.3:
+        dependencies:
+            array-buffer-byte-length: 1.0.1
+            arraybuffer.prototype.slice: 1.0.3
+            available-typed-arrays: 1.0.7
+            call-bind: 1.0.7
+            data-view-buffer: 1.0.1
+            data-view-byte-length: 1.0.1
+            data-view-byte-offset: 1.0.0
+            es-define-property: 1.0.0
+            es-errors: 1.3.0
+            es-object-atoms: 1.0.0
+            es-set-tostringtag: 2.0.3
+            es-to-primitive: 1.2.1
+            function.prototype.name: 1.1.6
+            get-intrinsic: 1.2.4
+            get-symbol-description: 1.0.2
+            globalthis: 1.0.4
+            gopd: 1.0.1
+            has-property-descriptors: 1.0.2
+            has-proto: 1.0.3
+            has-symbols: 1.0.3
+            hasown: 2.0.2
+            internal-slot: 1.0.7
+            is-array-buffer: 3.0.4
+            is-callable: 1.2.7
+            is-data-view: 1.0.1
+            is-negative-zero: 2.0.3
+            is-regex: 1.1.4
+            is-shared-array-buffer: 1.0.3
+            is-string: 1.0.7
+            is-typed-array: 1.1.13
+            is-weakref: 1.0.2
+            object-inspect: 1.13.2
+            object-keys: 1.1.1
+            object.assign: 4.1.5
+            regexp.prototype.flags: 1.5.2
+            safe-array-concat: 1.1.2
+            safe-regex-test: 1.0.3
+            string.prototype.trim: 1.2.9
+            string.prototype.trimend: 1.0.8
+            string.prototype.trimstart: 1.0.8
+            typed-array-buffer: 1.0.2
+            typed-array-byte-length: 1.0.1
+            typed-array-byte-offset: 1.0.2
+            typed-array-length: 1.0.6
+            unbox-primitive: 1.0.2
+            which-typed-array: 1.1.15
+
+    es-define-property@1.0.0:
+        dependencies:
+            get-intrinsic: 1.2.4
+
+    es-errors@1.3.0: {}
+
+    es-get-iterator@1.1.3:
+        dependencies:
+            call-bind: 1.0.7
+            get-intrinsic: 1.2.4
+            has-symbols: 1.0.3
+            is-arguments: 1.1.1
+            is-map: 2.0.3
+            is-set: 2.0.3
+            is-string: 1.0.7
+            isarray: 2.0.5
+            stop-iteration-iterator: 1.0.0
+
+    es-iterator-helpers@1.0.19:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-errors: 1.3.0
+            es-set-tostringtag: 2.0.3
+            function-bind: 1.1.2
+            get-intrinsic: 1.2.4
+            globalthis: 1.0.4
+            has-property-descriptors: 1.0.2
+            has-proto: 1.0.3
+            has-symbols: 1.0.3
+            internal-slot: 1.0.7
+            iterator.prototype: 1.1.2
+            safe-array-concat: 1.1.2
+
+    es-object-atoms@1.0.0:
+        dependencies:
+            es-errors: 1.3.0
+
+    es-set-tostringtag@2.0.3:
+        dependencies:
+            get-intrinsic: 1.2.4
+            has-tostringtag: 1.0.2
+            hasown: 2.0.2
+
+    es-shim-unscopables@1.0.2:
+        dependencies:
+            hasown: 2.0.2
+
+    es-to-primitive@1.2.1:
+        dependencies:
+            is-callable: 1.2.7
+            is-date-object: 1.0.5
+            is-symbol: 1.0.4
+
+    escalade@3.1.2: {}
+
+    escape-string-regexp@1.0.5: {}
+
+    escape-string-regexp@4.0.0: {}
+
+    eslint-config-next@14.2.5(eslint@8.57.0)(typescript@5.4.5):
+        dependencies:
+            '@next/eslint-plugin-next': 14.2.5
+            '@rushstack/eslint-patch': 1.10.3
+            '@typescript-eslint/parser': 7.2.0(eslint@8.57.0)(typescript@5.4.5)
+            eslint: 8.57.0
+            eslint-import-resolver-node: 0.3.9
+            eslint-import-resolver-typescript: 3.6.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.1(eslint@8.57.0))(eslint@8.57.0)
+            eslint-plugin-import: 2.29.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-typescript@3.6.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.1(eslint@8.57.0))(eslint@8.57.0))(eslint@8.57.0)
+            eslint-plugin-jsx-a11y: 6.9.0(eslint@8.57.0)
+            eslint-plugin-react: 7.35.0(eslint@8.57.0)
+            eslint-plugin-react-hooks: 4.6.2(eslint@8.57.0)
+        optionalDependencies:
+            typescript: 5.4.5
+        transitivePeerDependencies:
+            - eslint-import-resolver-webpack
+            - supports-color
+
+    eslint-config-prettier@9.1.0(eslint@8.57.0):
+        dependencies:
+            eslint: 8.57.0
+
+    eslint-import-resolver-node@0.3.9:
+        dependencies:
+            debug: 3.2.7
+            is-core-module: 2.15.0
+            resolve: 1.22.8
+        transitivePeerDependencies:
+            - supports-color
+
+    eslint-import-resolver-typescript@3.6.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.1(eslint@8.57.0))(eslint@8.57.0):
+        dependencies:
+            debug: 4.3.5
+            enhanced-resolve: 5.17.1
+            eslint: 8.57.0
+            eslint-module-utils: 2.8.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.6.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.1(eslint@8.57.0))(eslint@8.57.0))(eslint@8.57.0)
+            eslint-plugin-import: 2.29.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-typescript@3.6.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.1(eslint@8.57.0))(eslint@8.57.0))(eslint@8.57.0)
+            fast-glob: 3.3.2
+            get-tsconfig: 4.7.6
+            is-core-module: 2.15.0
+            is-glob: 4.0.3
+        transitivePeerDependencies:
+            - '@typescript-eslint/parser'
+            - eslint-import-resolver-node
+            - eslint-import-resolver-webpack
+            - supports-color
+
+    eslint-module-utils@2.8.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.6.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.1(eslint@8.57.0))(eslint@8.57.0))(eslint@8.57.0):
+        dependencies:
+            debug: 3.2.7
+        optionalDependencies:
+            '@typescript-eslint/parser': 7.2.0(eslint@8.57.0)(typescript@5.4.5)
+            eslint: 8.57.0
+            eslint-import-resolver-node: 0.3.9
+            eslint-import-resolver-typescript: 3.6.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.1(eslint@8.57.0))(eslint@8.57.0)
+        transitivePeerDependencies:
+            - supports-color
+
+    eslint-plugin-import@2.29.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-typescript@3.6.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.1(eslint@8.57.0))(eslint@8.57.0))(eslint@8.57.0):
+        dependencies:
+            array-includes: 3.1.8
+            array.prototype.findlastindex: 1.2.5
+            array.prototype.flat: 1.3.2
+            array.prototype.flatmap: 1.3.2
+            debug: 3.2.7
+            doctrine: 2.1.0
+            eslint: 8.57.0
+            eslint-import-resolver-node: 0.3.9
+            eslint-module-utils: 2.8.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-import-resolver-typescript@3.6.1(@typescript-eslint/parser@7.2.0(eslint@8.57.0)(typescript@5.4.5))(eslint-import-resolver-node@0.3.9)(eslint-plugin-import@2.29.1(eslint@8.57.0))(eslint@8.57.0))(eslint@8.57.0)
+            hasown: 2.0.2
+            is-core-module: 2.15.0
+            is-glob: 4.0.3
+            minimatch: 3.1.2
+            object.fromentries: 2.0.8
+            object.groupby: 1.0.3
+            object.values: 1.2.0
+            semver: 6.3.1
+            tsconfig-paths: 3.15.0
+        optionalDependencies:
+            '@typescript-eslint/parser': 7.2.0(eslint@8.57.0)(typescript@5.4.5)
+        transitivePeerDependencies:
+            - eslint-import-resolver-typescript
+            - eslint-import-resolver-webpack
+            - supports-color
+
+    eslint-plugin-jsx-a11y@6.9.0(eslint@8.57.0):
+        dependencies:
+            aria-query: 5.1.3
+            array-includes: 3.1.8
+            array.prototype.flatmap: 1.3.2
+            ast-types-flow: 0.0.8
+            axe-core: 4.9.1
+            axobject-query: 3.1.1
+            damerau-levenshtein: 1.0.8
+            emoji-regex: 9.2.2
+            es-iterator-helpers: 1.0.19
+            eslint: 8.57.0
+            hasown: 2.0.2
+            jsx-ast-utils: 3.3.5
+            language-tags: 1.0.9
+            minimatch: 3.1.2
+            object.fromentries: 2.0.8
+            safe-regex-test: 1.0.3
+            string.prototype.includes: 2.0.0
+
+    eslint-plugin-prettier@5.2.1(eslint-config-prettier@9.1.0(eslint@8.57.0))(eslint@8.57.0)(prettier@3.3.3):
+        dependencies:
+            eslint: 8.57.0
+            prettier: 3.3.3
+            prettier-linter-helpers: 1.0.0
+            synckit: 0.9.1
+        optionalDependencies:
+            eslint-config-prettier: 9.1.0(eslint@8.57.0)
+
+    eslint-plugin-react-hooks@4.6.2(eslint@8.57.0):
+        dependencies:
+            eslint: 8.57.0
+
+    eslint-plugin-react@7.35.0(eslint@8.57.0):
+        dependencies:
+            array-includes: 3.1.8
+            array.prototype.findlast: 1.2.5
+            array.prototype.flatmap: 1.3.2
+            array.prototype.tosorted: 1.1.4
+            doctrine: 2.1.0
+            es-iterator-helpers: 1.0.19
+            eslint: 8.57.0
+            estraverse: 5.3.0
+            hasown: 2.0.2
+            jsx-ast-utils: 3.3.5
+            minimatch: 3.1.2
+            object.entries: 1.1.8
+            object.fromentries: 2.0.8
+            object.values: 1.2.0
+            prop-types: 15.8.1
+            resolve: 2.0.0-next.5
+            semver: 6.3.1
+            string.prototype.matchall: 4.0.11
+            string.prototype.repeat: 1.0.0
+
+    eslint-scope@7.2.2:
+        dependencies:
+            esrecurse: 4.3.0
+            estraverse: 5.3.0
+
+    eslint-visitor-keys@3.4.3: {}
+
+    eslint@8.57.0:
+        dependencies:
+            '@eslint-community/eslint-utils': 4.4.0(eslint@8.57.0)
+            '@eslint-community/regexpp': 4.11.0
+            '@eslint/eslintrc': 2.1.4
+            '@eslint/js': 8.57.0
+            '@humanwhocodes/config-array': 0.11.14
+            '@humanwhocodes/module-importer': 1.0.1
+            '@nodelib/fs.walk': 1.2.8
+            '@ungap/structured-clone': 1.2.0
+            ajv: 6.12.6
+            chalk: 4.1.2
+            cross-spawn: 7.0.3
+            debug: 4.3.5
+            doctrine: 3.0.0
+            escape-string-regexp: 4.0.0
+            eslint-scope: 7.2.2
+            eslint-visitor-keys: 3.4.3
+            espree: 9.6.1
+            esquery: 1.6.0
+            esutils: 2.0.3
+            fast-deep-equal: 3.1.3
+            file-entry-cache: 6.0.1
+            find-up: 5.0.0
+            glob-parent: 6.0.2
+            globals: 13.24.0
+            graphemer: 1.4.0
+            ignore: 5.3.1
+            imurmurhash: 0.1.4
+            is-glob: 4.0.3
+            is-path-inside: 3.0.3
+            js-yaml: 4.1.0
+            json-stable-stringify-without-jsonify: 1.0.1
+            levn: 0.4.1
+            lodash.merge: 4.6.2
+            minimatch: 3.1.2
+            natural-compare: 1.4.0
+            optionator: 0.9.4
+            strip-ansi: 6.0.1
+            text-table: 0.2.0
+        transitivePeerDependencies:
+            - supports-color
+
+    espree@9.6.1:
+        dependencies:
+            acorn: 8.12.1
+            acorn-jsx: 5.3.2(acorn@8.12.1)
+            eslint-visitor-keys: 3.4.3
+
+    esquery@1.6.0:
+        dependencies:
+            estraverse: 5.3.0
+
+    esrecurse@4.3.0:
+        dependencies:
+            estraverse: 5.3.0
+
+    estraverse@5.3.0: {}
+
+    esutils@2.0.3: {}
+
+    fast-deep-equal@3.1.3: {}
+
+    fast-diff@1.3.0: {}
+
+    fast-glob@3.3.2:
+        dependencies:
+            '@nodelib/fs.stat': 2.0.5
+            '@nodelib/fs.walk': 1.2.8
+            glob-parent: 5.1.2
+            merge2: 1.4.1
+            micromatch: 4.0.7
+
+    fast-json-stable-stringify@2.1.0: {}
+
+    fast-levenshtein@2.0.6: {}
+
+    fastq@1.17.1:
+        dependencies:
+            reusify: 1.0.4
+
+    file-entry-cache@6.0.1:
+        dependencies:
+            flat-cache: 3.2.0
+
+    fill-range@7.1.1:
+        dependencies:
+            to-regex-range: 5.0.1
+
+    find-up@5.0.0:
+        dependencies:
+            locate-path: 6.0.0
+            path-exists: 4.0.0
+
+    flat-cache@3.2.0:
+        dependencies:
+            flatted: 3.3.1
+            keyv: 4.5.4
+            rimraf: 3.0.2
+
+    flatted@3.3.1: {}
+
+    for-each@0.3.3:
+        dependencies:
+            is-callable: 1.2.7
+
+    foreground-child@3.2.1:
+        dependencies:
+            cross-spawn: 7.0.3
+            signal-exit: 4.1.0
+
+    fs.realpath@1.0.0: {}
+
+    fsevents@2.3.3:
+        optional: true
+
+    function-bind@1.1.2: {}
+
+    function.prototype.name@1.1.6:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            functions-have-names: 1.2.3
+
+    functions-have-names@1.2.3: {}
+
+    gensync@1.0.0-beta.2: {}
+
+    get-intrinsic@1.2.4:
+        dependencies:
+            es-errors: 1.3.0
+            function-bind: 1.1.2
+            has-proto: 1.0.3
+            has-symbols: 1.0.3
+            hasown: 2.0.2
+
+    get-nonce@1.0.1: {}
+
+    get-symbol-description@1.0.2:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            get-intrinsic: 1.2.4
+
+    get-tsconfig@4.7.6:
+        dependencies:
+            resolve-pkg-maps: 1.0.0
+
+    glob-parent@5.1.2:
+        dependencies:
+            is-glob: 4.0.3
+
+    glob-parent@6.0.2:
+        dependencies:
+            is-glob: 4.0.3
+
+    glob@10.3.10:
+        dependencies:
+            foreground-child: 3.2.1
+            jackspeak: 2.3.6
+            minimatch: 9.0.5
+            minipass: 7.1.2
+            path-scurry: 1.11.1
+
+    glob@10.4.5:
+        dependencies:
+            foreground-child: 3.2.1
+            jackspeak: 3.4.3
+            minimatch: 9.0.5
+            minipass: 7.1.2
+            package-json-from-dist: 1.0.0
+            path-scurry: 1.11.1
+
+    glob@7.2.3:
+        dependencies:
+            fs.realpath: 1.0.0
+            inflight: 1.0.6
+            inherits: 2.0.4
+            minimatch: 3.1.2
+            once: 1.4.0
+            path-is-absolute: 1.0.1
+
+    globals@11.12.0: {}
+
+    globals@13.24.0:
+        dependencies:
+            type-fest: 0.20.2
+
+    globalthis@1.0.4:
+        dependencies:
+            define-properties: 1.2.1
+            gopd: 1.0.1
+
+    globby@11.1.0:
+        dependencies:
+            array-union: 2.1.0
+            dir-glob: 3.0.1
+            fast-glob: 3.3.2
+            ignore: 5.3.1
+            merge2: 1.4.1
+            slash: 3.0.0
+
+    gopd@1.0.1:
+        dependencies:
+            get-intrinsic: 1.2.4
+
+    graceful-fs@4.2.11: {}
+
+    graphemer@1.4.0: {}
+
+    has-bigints@1.0.2: {}
+
+    has-flag@3.0.0: {}
+
+    has-flag@4.0.0: {}
+
+    has-property-descriptors@1.0.2:
+        dependencies:
+            es-define-property: 1.0.0
+
+    has-proto@1.0.3: {}
+
+    has-symbols@1.0.3: {}
+
+    has-tostringtag@1.0.2:
+        dependencies:
+            has-symbols: 1.0.3
+
+    hasown@2.0.2:
+        dependencies:
+            function-bind: 1.1.2
+
+    ignore@5.3.1: {}
+
+    import-fresh@3.3.0:
+        dependencies:
+            parent-module: 1.0.1
+            resolve-from: 4.0.0
+
+    imurmurhash@0.1.4: {}
+
+    inflight@1.0.6:
+        dependencies:
+            once: 1.4.0
+            wrappy: 1.0.2
+
+    inherits@2.0.4: {}
+
+    internal-slot@1.0.7:
+        dependencies:
+            es-errors: 1.3.0
+            hasown: 2.0.2
+            side-channel: 1.0.6
+
+    invariant@2.2.4:
+        dependencies:
+            loose-envify: 1.4.0
+
+    is-arguments@1.1.1:
+        dependencies:
+            call-bind: 1.0.7
+            has-tostringtag: 1.0.2
+
+    is-array-buffer@3.0.4:
+        dependencies:
+            call-bind: 1.0.7
+            get-intrinsic: 1.2.4
+
+    is-async-function@2.0.0:
+        dependencies:
+            has-tostringtag: 1.0.2
+
+    is-bigint@1.0.4:
+        dependencies:
+            has-bigints: 1.0.2
+
+    is-binary-path@2.1.0:
+        dependencies:
+            binary-extensions: 2.3.0
+
+    is-boolean-object@1.1.2:
+        dependencies:
+            call-bind: 1.0.7
+            has-tostringtag: 1.0.2
+
+    is-callable@1.2.7: {}
+
+    is-core-module@2.15.0:
+        dependencies:
+            hasown: 2.0.2
+
+    is-data-view@1.0.1:
+        dependencies:
+            is-typed-array: 1.1.13
+
+    is-date-object@1.0.5:
+        dependencies:
+            has-tostringtag: 1.0.2
+
+    is-extglob@2.1.1: {}
+
+    is-finalizationregistry@1.0.2:
+        dependencies:
+            call-bind: 1.0.7
+
+    is-fullwidth-code-point@3.0.0: {}
+
+    is-generator-function@1.0.10:
+        dependencies:
+            has-tostringtag: 1.0.2
+
+    is-glob@4.0.3:
+        dependencies:
+            is-extglob: 2.1.1
+
+    is-map@2.0.3: {}
+
+    is-negative-zero@2.0.3: {}
+
+    is-number-object@1.0.7:
+        dependencies:
+            has-tostringtag: 1.0.2
+
+    is-number@7.0.0: {}
+
+    is-path-inside@3.0.3: {}
+
+    is-regex@1.1.4:
+        dependencies:
+            call-bind: 1.0.7
+            has-tostringtag: 1.0.2
+
+    is-set@2.0.3: {}
+
+    is-shared-array-buffer@1.0.3:
+        dependencies:
+            call-bind: 1.0.7
+
+    is-string@1.0.7:
+        dependencies:
+            has-tostringtag: 1.0.2
+
+    is-symbol@1.0.4:
+        dependencies:
+            has-symbols: 1.0.3
+
+    is-typed-array@1.1.13:
+        dependencies:
+            which-typed-array: 1.1.15
+
+    is-weakmap@2.0.2: {}
+
+    is-weakref@1.0.2:
+        dependencies:
+            call-bind: 1.0.7
+
+    is-weakset@2.0.3:
+        dependencies:
+            call-bind: 1.0.7
+            get-intrinsic: 1.2.4
+
+    isarray@2.0.5: {}
+
+    isexe@2.0.0: {}
+
+    iterator.prototype@1.1.2:
+        dependencies:
+            define-properties: 1.2.1
+            get-intrinsic: 1.2.4
+            has-symbols: 1.0.3
+            reflect.getprototypeof: 1.0.6
+            set-function-name: 2.0.2
+
+    jackspeak@2.3.6:
+        dependencies:
+            '@isaacs/cliui': 8.0.2
+        optionalDependencies:
+            '@pkgjs/parseargs': 0.11.0
+
+    jackspeak@3.4.3:
+        dependencies:
+            '@isaacs/cliui': 8.0.2
+        optionalDependencies:
+            '@pkgjs/parseargs': 0.11.0
+
+    jiti@1.21.6: {}
+
+    js-tokens@4.0.0: {}
+
+    js-yaml@4.1.0:
+        dependencies:
+            argparse: 2.0.1
+
+    jsesc@2.5.2: {}
+
+    json-buffer@3.0.1: {}
+
+    json-schema-traverse@0.4.1: {}
+
+    json-stable-stringify-without-jsonify@1.0.1: {}
+
+    json5@1.0.2:
+        dependencies:
+            minimist: 1.2.8
+
+    json5@2.2.3: {}
+
+    jsx-ast-utils@3.3.5:
+        dependencies:
+            array-includes: 3.1.8
+            array.prototype.flat: 1.3.2
+            object.assign: 4.1.5
+            object.values: 1.2.0
+
+    keyv@4.5.4:
+        dependencies:
+            json-buffer: 3.0.1
+
+    language-subtag-registry@0.3.23: {}
+
+    language-tags@1.0.9:
+        dependencies:
+            language-subtag-registry: 0.3.23
+
+    levn@0.4.1:
+        dependencies:
+            prelude-ls: 1.2.1
+            type-check: 0.4.0
+
+    lilconfig@2.1.0: {}
+
+    lilconfig@3.1.2: {}
+
+    lines-and-columns@1.2.4: {}
+
+    locate-path@6.0.0:
+        dependencies:
+            p-locate: 5.0.0
+
+    lodash.merge@4.6.2: {}
+
+    loose-envify@1.4.0:
+        dependencies:
+            js-tokens: 4.0.0
+
+    lru-cache@10.4.3: {}
+
+    lru-cache@5.1.1:
+        dependencies:
+            yallist: 3.1.1
+
+    lucide-react@0.416.0(react@18.3.1):
+        dependencies:
+            react: 18.3.1
+
+    merge2@1.4.1: {}
+
+    micromatch@4.0.7:
+        dependencies:
+            braces: 3.0.3
+            picomatch: 2.3.1
+
+    minimatch@3.1.2:
+        dependencies:
+            brace-expansion: 1.1.11
+
+    minimatch@9.0.3:
+        dependencies:
+            brace-expansion: 2.0.1
+
+    minimatch@9.0.5:
+        dependencies:
+            brace-expansion: 2.0.1
+
+    minimist@1.2.8: {}
+
+    minipass@7.1.2: {}
+
+    ms@2.1.2: {}
+
+    ms@2.1.3: {}
+
+    mz@2.7.0:
+        dependencies:
+            any-promise: 1.3.0
+            object-assign: 4.1.1
+            thenify-all: 1.6.0
+
+    nanoid@3.3.7: {}
+
+    natural-compare@1.4.0: {}
+
+    next@14.2.5(@babel/core@7.24.9)(react-dom@18.3.1(react@18.3.1))(react@18.3.1):
+        dependencies:
+            '@next/env': 14.2.5
+            '@swc/helpers': 0.5.5
+            busboy: 1.6.0
+            caniuse-lite: 1.0.30001643
+            graceful-fs: 4.2.11
+            postcss: 8.4.31
+            react: 18.3.1
+            react-dom: 18.3.1(react@18.3.1)
+            styled-jsx: 5.1.1(@babel/core@7.24.9)(react@18.3.1)
+        optionalDependencies:
+            '@next/swc-darwin-arm64': 14.2.5
+            '@next/swc-darwin-x64': 14.2.5
+            '@next/swc-linux-arm64-gnu': 14.2.5
+            '@next/swc-linux-arm64-musl': 14.2.5
+            '@next/swc-linux-x64-gnu': 14.2.5
+            '@next/swc-linux-x64-musl': 14.2.5
+            '@next/swc-win32-arm64-msvc': 14.2.5
+            '@next/swc-win32-ia32-msvc': 14.2.5
+            '@next/swc-win32-x64-msvc': 14.2.5
+        transitivePeerDependencies:
+            - '@babel/core'
+            - babel-plugin-macros
+
+    node-releases@2.0.18: {}
+
+    normalize-path@3.0.0: {}
+
+    object-assign@4.1.1: {}
+
+    object-hash@3.0.0: {}
+
+    object-inspect@1.13.2: {}
+
+    object-is@1.1.6:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+
+    object-keys@1.1.1: {}
+
+    object.assign@4.1.5:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            has-symbols: 1.0.3
+            object-keys: 1.1.1
+
+    object.entries@1.1.8:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-object-atoms: 1.0.0
+
+    object.fromentries@2.0.8:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-object-atoms: 1.0.0
+
+    object.groupby@1.0.3:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+
+    object.values@1.2.0:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-object-atoms: 1.0.0
+
+    once@1.4.0:
+        dependencies:
+            wrappy: 1.0.2
+
+    optionator@0.9.4:
+        dependencies:
+            deep-is: 0.1.4
+            fast-levenshtein: 2.0.6
+            levn: 0.4.1
+            prelude-ls: 1.2.1
+            type-check: 0.4.0
+            word-wrap: 1.2.5
+
+    p-limit@3.1.0:
+        dependencies:
+            yocto-queue: 0.1.0
+
+    p-locate@5.0.0:
+        dependencies:
+            p-limit: 3.1.0
+
+    package-json-from-dist@1.0.0: {}
+
+    parent-module@1.0.1:
+        dependencies:
+            callsites: 3.1.0
+
+    path-exists@4.0.0: {}
+
+    path-is-absolute@1.0.1: {}
+
+    path-key@3.1.1: {}
+
+    path-parse@1.0.7: {}
+
+    path-scurry@1.11.1:
+        dependencies:
+            lru-cache: 10.4.3
+            minipass: 7.1.2
+
+    path-type@4.0.0: {}
+
+    picocolors@1.0.1: {}
+
+    picomatch@2.3.1: {}
+
+    pify@2.3.0: {}
+
+    pirates@4.0.6: {}
+
+    possible-typed-array-names@1.0.0: {}
+
+    postcss-import@15.1.0(postcss@8.4.40):
+        dependencies:
+            postcss: 8.4.40
+            postcss-value-parser: 4.2.0
+            read-cache: 1.0.0
+            resolve: 1.22.8
+
+    postcss-js@4.0.1(postcss@8.4.40):
+        dependencies:
+            camelcase-css: 2.0.1
+            postcss: 8.4.40
+
+    postcss-load-config@4.0.2(postcss@8.4.40):
+        dependencies:
+            lilconfig: 3.1.2
+            yaml: 2.5.0
+        optionalDependencies:
+            postcss: 8.4.40
+
+    postcss-nested@6.2.0(postcss@8.4.40):
+        dependencies:
+            postcss: 8.4.40
+            postcss-selector-parser: 6.1.1
+
+    postcss-selector-parser@6.1.1:
+        dependencies:
+            cssesc: 3.0.0
+            util-deprecate: 1.0.2
+
+    postcss-value-parser@4.2.0: {}
+
+    postcss@8.4.31:
+        dependencies:
+            nanoid: 3.3.7
+            picocolors: 1.0.1
+            source-map-js: 1.2.0
+
+    postcss@8.4.40:
+        dependencies:
+            nanoid: 3.3.7
+            picocolors: 1.0.1
+            source-map-js: 1.2.0
+
+    prelude-ls@1.2.1: {}
+
+    prettier-linter-helpers@1.0.0:
+        dependencies:
+            fast-diff: 1.3.0
+
+    prettier-plugin-pkg@0.18.1(prettier@3.3.3):
+        dependencies:
+            prettier: 3.3.3
+
+    prettier-plugin-tailwindcss@0.6.5(@ianvs/prettier-plugin-sort-imports@4.3.1(prettier@3.3.3))(prettier@3.3.3):
+        dependencies:
+            prettier: 3.3.3
+        optionalDependencies:
+            '@ianvs/prettier-plugin-sort-imports': 4.3.1(prettier@3.3.3)
+
+    prettier@3.3.3: {}
+
+    prisma@5.17.0:
+        dependencies:
+            '@prisma/engines': 5.17.0
+
+    prop-types@15.8.1:
+        dependencies:
+            loose-envify: 1.4.0
+            object-assign: 4.1.1
+            react-is: 16.13.1
+
+    punycode@2.3.1: {}
+
+    queue-microtask@1.2.3: {}
+
+    react-dom@18.3.1(react@18.3.1):
+        dependencies:
+            loose-envify: 1.4.0
+            react: 18.3.1
+            scheduler: 0.23.2
+
+    react-hook-form@7.52.1(react@18.3.1):
+        dependencies:
+            react: 18.3.1
+
+    react-is@16.13.1: {}
+
+    react-remove-scroll-bar@2.3.6(@types/react@18.3.3)(react@18.3.1):
+        dependencies:
+            react: 18.3.1
+            react-style-singleton: 2.2.1(@types/react@18.3.3)(react@18.3.1)
+            tslib: 2.6.3
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    react-remove-scroll@2.5.7(@types/react@18.3.3)(react@18.3.1):
+        dependencies:
+            react: 18.3.1
+            react-remove-scroll-bar: 2.3.6(@types/react@18.3.3)(react@18.3.1)
+            react-style-singleton: 2.2.1(@types/react@18.3.3)(react@18.3.1)
+            tslib: 2.6.3
+            use-callback-ref: 1.3.2(@types/react@18.3.3)(react@18.3.1)
+            use-sidecar: 1.1.2(@types/react@18.3.3)(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    react-style-singleton@2.2.1(@types/react@18.3.3)(react@18.3.1):
+        dependencies:
+            get-nonce: 1.0.1
+            invariant: 2.2.4
+            react: 18.3.1
+            tslib: 2.6.3
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    react@18.3.1:
+        dependencies:
+            loose-envify: 1.4.0
+
+    read-cache@1.0.0:
+        dependencies:
+            pify: 2.3.0
+
+    readdirp@3.6.0:
+        dependencies:
+            picomatch: 2.3.1
+
+    reflect.getprototypeof@1.0.6:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-errors: 1.3.0
+            get-intrinsic: 1.2.4
+            globalthis: 1.0.4
+            which-builtin-type: 1.1.3
+
+    regexp.prototype.flags@1.5.2:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-errors: 1.3.0
+            set-function-name: 2.0.2
+
+    resolve-from@4.0.0: {}
+
+    resolve-pkg-maps@1.0.0: {}
+
+    resolve@1.22.8:
+        dependencies:
+            is-core-module: 2.15.0
+            path-parse: 1.0.7
+            supports-preserve-symlinks-flag: 1.0.0
+
+    resolve@2.0.0-next.5:
+        dependencies:
+            is-core-module: 2.15.0
+            path-parse: 1.0.7
+            supports-preserve-symlinks-flag: 1.0.0
+
+    reusify@1.0.4: {}
+
+    rimraf@3.0.2:
+        dependencies:
+            glob: 7.2.3
+
+    run-parallel@1.2.0:
+        dependencies:
+            queue-microtask: 1.2.3
+
+    safe-array-concat@1.1.2:
+        dependencies:
+            call-bind: 1.0.7
+            get-intrinsic: 1.2.4
+            has-symbols: 1.0.3
+            isarray: 2.0.5
+
+    safe-regex-test@1.0.3:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            is-regex: 1.1.4
+
+    scheduler@0.23.2:
+        dependencies:
+            loose-envify: 1.4.0
+
+    semver@6.3.1: {}
+
+    semver@7.6.3: {}
+
+    set-function-length@1.2.2:
+        dependencies:
+            define-data-property: 1.1.4
+            es-errors: 1.3.0
+            function-bind: 1.1.2
+            get-intrinsic: 1.2.4
+            gopd: 1.0.1
+            has-property-descriptors: 1.0.2
+
+    set-function-name@2.0.2:
+        dependencies:
+            define-data-property: 1.1.4
+            es-errors: 1.3.0
+            functions-have-names: 1.2.3
+            has-property-descriptors: 1.0.2
+
+    shebang-command@2.0.0:
+        dependencies:
+            shebang-regex: 3.0.0
+
+    shebang-regex@3.0.0: {}
+
+    side-channel@1.0.6:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            get-intrinsic: 1.2.4
+            object-inspect: 1.13.2
+
+    signal-exit@4.1.0: {}
+
+    slash@3.0.0: {}
+
+    source-map-js@1.2.0: {}
+
+    stop-iteration-iterator@1.0.0:
+        dependencies:
+            internal-slot: 1.0.7
+
+    streamsearch@1.1.0: {}
+
+    string-width@4.2.3:
+        dependencies:
+            emoji-regex: 8.0.0
+            is-fullwidth-code-point: 3.0.0
+            strip-ansi: 6.0.1
+
+    string-width@5.1.2:
+        dependencies:
+            eastasianwidth: 0.2.0
+            emoji-regex: 9.2.2
+            strip-ansi: 7.1.0
+
+    string.prototype.includes@2.0.0:
+        dependencies:
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+
+    string.prototype.matchall@4.0.11:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-errors: 1.3.0
+            es-object-atoms: 1.0.0
+            get-intrinsic: 1.2.4
+            gopd: 1.0.1
+            has-symbols: 1.0.3
+            internal-slot: 1.0.7
+            regexp.prototype.flags: 1.5.2
+            set-function-name: 2.0.2
+            side-channel: 1.0.6
+
+    string.prototype.repeat@1.0.0:
+        dependencies:
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+
+    string.prototype.trim@1.2.9:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-abstract: 1.23.3
+            es-object-atoms: 1.0.0
+
+    string.prototype.trimend@1.0.8:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-object-atoms: 1.0.0
+
+    string.prototype.trimstart@1.0.8:
+        dependencies:
+            call-bind: 1.0.7
+            define-properties: 1.2.1
+            es-object-atoms: 1.0.0
+
+    strip-ansi@6.0.1:
+        dependencies:
+            ansi-regex: 5.0.1
+
+    strip-ansi@7.1.0:
+        dependencies:
+            ansi-regex: 6.0.1
+
+    strip-bom@3.0.0: {}
+
+    strip-json-comments@3.1.1: {}
+
+    styled-jsx@5.1.1(@babel/core@7.24.9)(react@18.3.1):
+        dependencies:
+            client-only: 0.0.1
+            react: 18.3.1
+        optionalDependencies:
+            '@babel/core': 7.24.9
+
+    sucrase@3.35.0:
+        dependencies:
+            '@jridgewell/gen-mapping': 0.3.5
+            commander: 4.1.1
+            glob: 10.4.5
+            lines-and-columns: 1.2.4
+            mz: 2.7.0
+            pirates: 4.0.6
+            ts-interface-checker: 0.1.13
+
+    supports-color@5.5.0:
+        dependencies:
+            has-flag: 3.0.0
+
+    supports-color@7.2.0:
+        dependencies:
+            has-flag: 4.0.0
+
+    supports-preserve-symlinks-flag@1.0.0: {}
+
+    synckit@0.9.1:
+        dependencies:
+            '@pkgr/core': 0.1.1
+            tslib: 2.6.3
+
+    tailwind-merge@2.4.0: {}
+
+    tailwindcss-animate@1.0.7(tailwindcss@3.4.7):
+        dependencies:
+            tailwindcss: 3.4.7
+
+    tailwindcss@3.4.7:
+        dependencies:
+            '@alloc/quick-lru': 5.2.0
+            arg: 5.0.2
+            chokidar: 3.6.0
+            didyoumean: 1.2.2
+            dlv: 1.1.3
+            fast-glob: 3.3.2
+            glob-parent: 6.0.2
+            is-glob: 4.0.3
+            jiti: 1.21.6
+            lilconfig: 2.1.0
+            micromatch: 4.0.7
+            normalize-path: 3.0.0
+            object-hash: 3.0.0
+            picocolors: 1.0.1
+            postcss: 8.4.40
+            postcss-import: 15.1.0(postcss@8.4.40)
+            postcss-js: 4.0.1(postcss@8.4.40)
+            postcss-load-config: 4.0.2(postcss@8.4.40)
+            postcss-nested: 6.2.0(postcss@8.4.40)
+            postcss-selector-parser: 6.1.1
+            resolve: 1.22.8
+            sucrase: 3.35.0
+        transitivePeerDependencies:
+            - ts-node
+
+    tapable@2.2.1: {}
+
+    text-table@0.2.0: {}
+
+    thenify-all@1.6.0:
+        dependencies:
+            thenify: 3.3.1
+
+    thenify@3.3.1:
+        dependencies:
+            any-promise: 1.3.0
+
+    to-fast-properties@2.0.0: {}
+
+    to-regex-range@5.0.1:
+        dependencies:
+            is-number: 7.0.0
+
+    ts-api-utils@1.3.0(typescript@5.4.5):
+        dependencies:
+            typescript: 5.4.5
+
+    ts-interface-checker@0.1.13: {}
+
+    tsconfig-paths@3.15.0:
+        dependencies:
+            '@types/json5': 0.0.29
+            json5: 1.0.2
+            minimist: 1.2.8
+            strip-bom: 3.0.0
+
+    tslib@2.6.3: {}
+
+    type-check@0.4.0:
+        dependencies:
+            prelude-ls: 1.2.1
+
+    type-fest@0.20.2: {}
+
+    typed-array-buffer@1.0.2:
+        dependencies:
+            call-bind: 1.0.7
+            es-errors: 1.3.0
+            is-typed-array: 1.1.13
+
+    typed-array-byte-length@1.0.1:
+        dependencies:
+            call-bind: 1.0.7
+            for-each: 0.3.3
+            gopd: 1.0.1
+            has-proto: 1.0.3
+            is-typed-array: 1.1.13
+
+    typed-array-byte-offset@1.0.2:
+        dependencies:
+            available-typed-arrays: 1.0.7
+            call-bind: 1.0.7
+            for-each: 0.3.3
+            gopd: 1.0.1
+            has-proto: 1.0.3
+            is-typed-array: 1.1.13
+
+    typed-array-length@1.0.6:
+        dependencies:
+            call-bind: 1.0.7
+            for-each: 0.3.3
+            gopd: 1.0.1
+            has-proto: 1.0.3
+            is-typed-array: 1.1.13
+            possible-typed-array-names: 1.0.0
+
+    typescript@5.4.5: {}
+
+    unbox-primitive@1.0.2:
+        dependencies:
+            call-bind: 1.0.7
+            has-bigints: 1.0.2
+            has-symbols: 1.0.3
+            which-boxed-primitive: 1.0.2
+
+    undici-types@5.26.5: {}
+
+    update-browserslist-db@1.1.0(browserslist@4.23.2):
+        dependencies:
+            browserslist: 4.23.2
+            escalade: 3.1.2
+            picocolors: 1.0.1
+
+    uri-js@4.4.1:
+        dependencies:
+            punycode: 2.3.1
+
+    use-callback-ref@1.3.2(@types/react@18.3.3)(react@18.3.1):
+        dependencies:
+            react: 18.3.1
+            tslib: 2.6.3
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    use-sidecar@1.1.2(@types/react@18.3.3)(react@18.3.1):
+        dependencies:
+            detect-node-es: 1.1.0
+            react: 18.3.1
+            tslib: 2.6.3
+        optionalDependencies:
+            '@types/react': 18.3.3
+
+    use-sync-external-store@1.2.0(react@18.3.1):
+        dependencies:
+            react: 18.3.1
+
+    util-deprecate@1.0.2: {}
+
+    which-boxed-primitive@1.0.2:
+        dependencies:
+            is-bigint: 1.0.4
+            is-boolean-object: 1.1.2
+            is-number-object: 1.0.7
+            is-string: 1.0.7
+            is-symbol: 1.0.4
+
+    which-builtin-type@1.1.3:
+        dependencies:
+            function.prototype.name: 1.1.6
+            has-tostringtag: 1.0.2
+            is-async-function: 2.0.0
+            is-date-object: 1.0.5
+            is-finalizationregistry: 1.0.2
+            is-generator-function: 1.0.10
+            is-regex: 1.1.4
+            is-weakref: 1.0.2
+            isarray: 2.0.5
+            which-boxed-primitive: 1.0.2
+            which-collection: 1.0.2
+            which-typed-array: 1.1.15
+
+    which-collection@1.0.2:
+        dependencies:
+            is-map: 2.0.3
+            is-set: 2.0.3
+            is-weakmap: 2.0.2
+            is-weakset: 2.0.3
+
+    which-typed-array@1.1.15:
+        dependencies:
+            available-typed-arrays: 1.0.7
+            call-bind: 1.0.7
+            for-each: 0.3.3
+            gopd: 1.0.1
+            has-tostringtag: 1.0.2
+
+    which@2.0.2:
+        dependencies:
+            isexe: 2.0.0
+
+    word-wrap@1.2.5: {}
+
+    wrap-ansi@7.0.0:
+        dependencies:
+            ansi-styles: 4.3.0
+            string-width: 4.2.3
+            strip-ansi: 6.0.1
+
+    wrap-ansi@8.1.0:
+        dependencies:
+            ansi-styles: 6.2.1
+            string-width: 5.1.2
+            strip-ansi: 7.1.0
+
+    wrappy@1.0.2: {}
+
+    yallist@3.1.1: {}
+
+    yaml@2.5.0: {}
+
+    yocto-queue@0.1.0: {}
+
+    zod@3.23.8: {}
+
+    zustand@4.5.4(@types/react@18.3.3)(react@18.3.1):
+        dependencies:
+            use-sync-external-store: 1.2.0(react@18.3.1)
+        optionalDependencies:
+            '@types/react': 18.3.3
+            react: 18.3.1
diff --git a/postcss.config.mjs b/postcss.config.mjs
new file mode 100644
index 0000000..6f94347
--- /dev/null
+++ b/postcss.config.mjs
@@ -0,0 +1,8 @@
+/** @type {import('postcss-load-config').Config} */
+const config = {
+    plugins: {
+        tailwindcss: {},
+    },
+};
+
+export default config;
diff --git a/prisma/migrations/20240726142102_init/migration.sql b/prisma/migrations/20240726142102_init/migration.sql
new file mode 100644
index 0000000..021b491
--- /dev/null
+++ b/prisma/migrations/20240726142102_init/migration.sql
@@ -0,0 +1,9 @@
+-- CreateTable
+CREATE TABLE "Task" (
+    "id" INT4 NOT NULL GENERATED BY DEFAULT AS IDENTITY,
+    "title" STRING NOT NULL,
+    "description" STRING,
+    "completed" BOOL NOT NULL DEFAULT false,
+
+    CONSTRAINT "Task_pkey" PRIMARY KEY ("id")
+);
diff --git a/prisma/migrations/migration_lock.toml b/prisma/migrations/migration_lock.toml
new file mode 100644
index 0000000..7106c8a
--- /dev/null
+++ b/prisma/migrations/migration_lock.toml
@@ -0,0 +1,3 @@
+# Please do not edit this file manually
+# It should be added in your version-control system (i.e. Git)
+provider = "cockroachdb"
\ No newline at end of file
diff --git a/prisma/schema.prisma b/prisma/schema.prisma
new file mode 100644
index 0000000..73fec6d
--- /dev/null
+++ b/prisma/schema.prisma
@@ -0,0 +1,21 @@
+// This is your Prisma schema file,
+// learn more about it in the docs: https://pris.ly/d/prisma-schema
+
+// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
+// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
+
+generator client {
+  provider = "prisma-client-js"
+}
+
+datasource db {
+  provider = "cockroachdb"
+  url      = env("DATABASE_URL")
+}
+
+model Task {
+  id          Int     @id @default(sequence())
+  title       String
+  description String?
+  completed   Boolean @default(false)
+}
diff --git a/public/next.svg b/public/next.svg
new file mode 100644
index 0000000..5174b28
--- /dev/null
+++ b/public/next.svg
@@ -0,0 +1 @@
+<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 394 80"><path fill="#000" d="M262 0h68.5v12.7h-27.2v66.6h-13.6V12.7H262V0ZM149 0v12.7H94v20.4h44.3v12.6H94v21h55v12.6H80.5V0h68.7zm34.3 0h-17.8l63.8 79.4h17.9l-32-39.7 32-39.6h-17.9l-23 28.6-23-28.6zm18.3 56.7-9-11-27.1 33.7h17.8l18.3-22.7z"/><path fill="#000" d="M81 79.3 17 0H0v79.3h13.6V17l50.2 62.3H81Zm252.6-.4c-1 0-1.8-.4-2.5-1s-1.1-1.6-1.1-2.6.3-1.8 1-2.5 1.6-1 2.6-1 1.8.3 2.5 1a3.4 3.4 0 0 1 .6 4.3 3.7 3.7 0 0 1-3 1.8zm23.2-33.5h6v23.3c0 2.1-.4 4-1.3 5.5a9.1 9.1 0 0 1-3.8 3.5c-1.6.8-3.5 1.3-5.7 1.3-2 0-3.7-.4-5.3-1s-2.8-1.8-3.7-3.2c-.9-1.3-1.4-3-1.4-5h6c.1.8.3 1.6.7 2.2s1 1.2 1.6 1.5c.7.4 1.5.5 2.4.5 1 0 1.8-.2 2.4-.6a4 4 0 0 0 1.6-1.8c.3-.8.5-1.8.5-3V45.5zm30.9 9.1a4.4 4.4 0 0 0-2-3.3 7.5 7.5 0 0 0-4.3-1.1c-1.3 0-2.4.2-3.3.5-.9.4-1.6 1-2 1.6a3.5 3.5 0 0 0-.3 4c.3.5.7.9 1.3 1.2l1.8 1 2 .5 3.2.8c1.3.3 2.5.7 3.7 1.2a13 13 0 0 1 3.2 1.8 8.1 8.1 0 0 1 3 6.5c0 2-.5 3.7-1.5 5.1a10 10 0 0 1-4.4 3.5c-1.8.8-4.1 1.2-6.8 1.2-2.6 0-4.9-.4-6.8-1.2-2-.8-3.4-2-4.5-3.5a10 10 0 0 1-1.7-5.6h6a5 5 0 0 0 3.5 4.6c1 .4 2.2.6 3.4.6 1.3 0 2.5-.2 3.5-.6 1-.4 1.8-1 2.4-1.7a4 4 0 0 0 .8-2.4c0-.9-.2-1.6-.7-2.2a11 11 0 0 0-2.1-1.4l-3.2-1-3.8-1c-2.8-.7-5-1.7-6.6-3.2a7.2 7.2 0 0 1-2.4-5.7 8 8 0 0 1 1.7-5 10 10 0 0 1 4.3-3.5c2-.8 4-1.2 6.4-1.2 2.3 0 4.4.4 6.2 1.2 1.8.8 3.2 2 4.3 3.4 1 1.4 1.5 3 1.5 5h-5.8z"/></svg>
\ No newline at end of file
diff --git a/public/vercel.svg b/public/vercel.svg
new file mode 100644
index 0000000..d2f8422
--- /dev/null
+++ b/public/vercel.svg
@@ -0,0 +1 @@
+<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 283 64"><path fill="black" d="M141 16c-11 0-19 7-19 18s9 18 20 18c7 0 13-3 16-7l-7-5c-2 3-6 4-9 4-5 0-9-3-10-7h28v-3c0-11-8-18-19-18zm-9 15c1-4 4-7 9-7s8 3 9 7h-18zm117-15c-11 0-19 7-19 18s9 18 20 18c6 0 12-3 16-7l-8-5c-2 3-5 4-8 4-5 0-9-3-11-7h28l1-3c0-11-8-18-19-18zm-10 15c2-4 5-7 10-7s8 3 9 7h-19zm-39 3c0 6 4 10 10 10 4 0 7-2 9-5l8 5c-3 5-9 8-17 8-11 0-19-7-19-18s8-18 19-18c8 0 14 3 17 8l-8 5c-2-3-5-5-9-5-6 0-10 4-10 10zm83-29v46h-9V5h9zM37 0l37 64H0L37 0zm92 5-27 48L74 5h10l18 30 17-30h10zm59 12v10l-3-1c-6 0-10 4-10 10v15h-9V17h9v9c0-5 6-9 13-9z"/></svg>
\ No newline at end of file
diff --git a/src/action/tasks.ts b/src/action/tasks.ts
new file mode 100644
index 0000000..d6eca91
--- /dev/null
+++ b/src/action/tasks.ts
@@ -0,0 +1,24 @@
+'use server';
+
+import { prisma } from '@/db';
+import { Task } from '@prisma/client';
+
+export async function getTasks() {
+    const tasks = await prisma.task.findMany();
+    return tasks;
+}
+
+export async function createTask(task: Omit<Task, 'id'>) {
+    const newTask = await prisma.task.create({ data: task });
+    return newTask;
+}
+
+export async function updateTask(task: Task) {
+    const updatedTask = await prisma.task.update({ where: { id: task.id }, data: task });
+    return updatedTask;
+}
+
+export async function deleteTask(id: Task['id']) {
+    const deletedTask = await prisma.task.delete({ where: { id: id } });
+    return deletedTask;
+}
diff --git a/src/app/favicon.ico b/src/app/favicon.ico
new file mode 100644
index 0000000..718d6fe
Binary files /dev/null and b/src/app/favicon.ico differ
diff --git a/src/app/layout.tsx b/src/app/layout.tsx
new file mode 100644
index 0000000..3287f18
--- /dev/null
+++ b/src/app/layout.tsx
@@ -0,0 +1,32 @@
+import { Toaster } from '@/components/ui/toaster';
+import { cn } from '@/lib/utils';
+import type { Metadata } from 'next';
+import { Inter as FontSans } from 'next/font/google';
+import { ReactNode } from 'react';
+import '@/styles/globals.css';
+
+const fontSans = FontSans({
+    subsets: ['latin'],
+    variable: '--font-sans',
+});
+
+export const metadata: Metadata = {
+    title: 'Next.js and Prisma ORM Task Manager',
+    description:
+        'Discover our simple task manager application built with Next.js and Prisma ORM. Manage your tasks efficiently with features to add, update, and delete tasks. Explore the tech stack, installation guide, and more.',
+};
+
+export default function RootLayout({
+    children,
+}: Readonly<{
+    children: ReactNode;
+}>) {
+    return (
+        <html lang="en" className="dark" suppressHydrationWarning>
+            <body className={cn('min-h-screen bg-background font-sans antialiased', fontSans.variable)}>
+                {children}
+                <Toaster />
+            </body>
+        </html>
+    );
+}
diff --git a/src/app/page.tsx b/src/app/page.tsx
new file mode 100644
index 0000000..45d3d4b
--- /dev/null
+++ b/src/app/page.tsx
@@ -0,0 +1,17 @@
+import { getTasks } from '@/action/tasks';
+import { TaskCreate } from '@/components/task-create';
+import { TaskList } from '@/components/task-list';
+
+export default async function Home() {
+    const tasks = await getTasks();
+
+    return (
+        <main className="container flex flex-col space-y-8 py-20">
+            <div className="flex justify-between items-center">
+                <h1 className="text-4xl font-bold">Tasks</h1>
+                <TaskCreate />
+            </div>
+            <TaskList tasks={tasks} />
+        </main>
+    );
+}
diff --git a/src/components/task-action/delete.tsx b/src/components/task-action/delete.tsx
new file mode 100644
index 0000000..0c27186
--- /dev/null
+++ b/src/components/task-action/delete.tsx
@@ -0,0 +1,69 @@
+import { deleteTask } from '@/action/tasks';
+import {
+    Dialog,
+    DialogClose,
+    DialogContent,
+    DialogDescription,
+    DialogFooter,
+    DialogHeader,
+    DialogTitle,
+    DialogTrigger,
+} from '@/components/ui/dialog';
+import { Task } from '@prisma/client';
+import { Trash2 } from 'lucide-react';
+import { useRouter } from 'next/navigation';
+import { Button } from '../ui/button';
+import { useToast } from '../ui/use-toast';
+
+export function Delete({ id }: { id: Task['id'] }) {
+    const { toast } = useToast();
+    const router = useRouter();
+
+    async function handleDelete() {
+        try {
+            await deleteTask(id);
+            router.refresh();
+            toast({
+                title: 'Success',
+                description: 'Your task was deleted.',
+            });
+        } catch (error) {
+            console.error(error);
+            toast({
+                title: 'Error',
+                description: 'Something went wrong while deleting the task.',
+                variant: 'destructive',
+            });
+        }
+    }
+
+    return (
+        <Dialog>
+            <DialogTrigger asChild>
+                <Button variant="destructive" size="sm">
+                    <Trash2 className="mr-1 h-4 w-4" />
+                    <span>Delete Task</span>
+                </Button>
+            </DialogTrigger>
+            <DialogContent>
+                <DialogHeader>
+                    <DialogTitle>Are you absolutely sure?</DialogTitle>
+                    <DialogDescription>
+                        This action cannot be undone. This will permanently delete your task and remove your data from
+                        our servers.
+                    </DialogDescription>
+                </DialogHeader>
+                <DialogFooter>
+                    <Button variant="destructive" size="sm" onClick={handleDelete}>
+                        Delete
+                    </Button>
+                    <DialogClose asChild>
+                        <Button variant="outline" size="sm">
+                            Cancel
+                        </Button>
+                    </DialogClose>
+                </DialogFooter>
+            </DialogContent>
+        </Dialog>
+    );
+}
diff --git a/src/components/task-action/edit.tsx b/src/components/task-action/edit.tsx
new file mode 100644
index 0000000..c23ede2
--- /dev/null
+++ b/src/components/task-action/edit.tsx
@@ -0,0 +1,142 @@
+'use client';
+
+import { updateTask } from '@/action/tasks';
+import { Button } from '@/components/ui/button';
+import { Checkbox } from '@/components/ui/checkbox';
+import {
+    Dialog,
+    DialogClose,
+    DialogContent,
+    DialogDescription,
+    DialogHeader,
+    DialogTitle,
+    DialogTrigger,
+} from '@/components/ui/dialog';
+import { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';
+import { Input } from '@/components/ui/input';
+import { Label } from '@/components/ui/label';
+import { useToast } from '@/components/ui/use-toast';
+import { zodResolver } from '@hookform/resolvers/zod';
+import { Task } from '@prisma/client';
+import { PenLine } from 'lucide-react';
+import { useState } from 'react';
+import { useForm } from 'react-hook-form';
+import { z } from 'zod';
+
+export const formSchema = z.object({
+    id: z.number(),
+    title: z.string().min(1, 'Title is required').max(50, 'Title is too long (50 characters max)'),
+    description: z.string().max(200, 'Description is too long (200 characters max)'),
+    completed: z.boolean().default(false),
+});
+
+export function Edit({ task }: { task: Task }) {
+    const [dialogOpen, setDialogOpen] = useState(false);
+    const { toast } = useToast();
+
+    const form = useForm<z.infer<typeof formSchema>>({
+        resolver: zodResolver(formSchema),
+        defaultValues: {
+            id: task.id,
+            title: task.title,
+            description: task.description || '',
+            completed: task.completed,
+        },
+    });
+
+    async function onSubmit(values: z.infer<typeof formSchema>) {
+        try {
+            await updateTask(values);
+            form.reset();
+            // router.refresh(); <-- If you refresh the page using the router, the dialog data will not update when reopened.
+            window.location.reload();
+            toast({
+                title: 'Success',
+                description: `Your task "${values.title}" was updated.`,
+            });
+            setDialogOpen(false);
+        } catch (error) {
+            console.error(error);
+            toast({
+                title: 'Error',
+                description: 'Something went wrong while updating the task.',
+                variant: 'destructive',
+            });
+        }
+    }
+
+    return (
+        <Dialog open={dialogOpen} onOpenChange={setDialogOpen}>
+            <DialogTrigger asChild>
+                <Button variant="outline" size="sm">
+                    <PenLine className="mr-1 h-4 w-4" />
+                    <span>Edit Task</span>
+                </Button>
+            </DialogTrigger>
+            <DialogContent>
+                <DialogHeader>
+                    <DialogTitle>Edit your task</DialogTitle>
+                    <DialogDescription>Fill in the details below to edit your task.</DialogDescription>
+                    <Form {...form}>
+                        <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-8">
+                            <FormField
+                                control={form.control}
+                                name="title"
+                                render={({ field }) => (
+                                    <FormItem>
+                                        <FormLabel className="required">Title</FormLabel>
+                                        <FormControl>
+                                            <Input placeholder="e.g. Sleep after work..." {...field} />
+                                        </FormControl>
+                                        <FormDescription>This is your task&apos;s title.</FormDescription>
+                                        <FormMessage />
+                                    </FormItem>
+                                )}
+                            />
+                            <FormField
+                                control={form.control}
+                                name="description"
+                                render={({ field }) => (
+                                    <FormItem>
+                                        <FormLabel className="optional">Description</FormLabel>
+                                        <FormControl>
+                                            <Input placeholder="e.g. Become more productive..." {...field} />
+                                        </FormControl>
+                                        <FormDescription>This is your task&apos;s description.</FormDescription>
+                                        <FormMessage />
+                                    </FormItem>
+                                )}
+                            />
+                            <FormField
+                                control={form.control}
+                                name="completed"
+                                render={({ field }) => (
+                                    <FormItem>
+                                        <FormControl>
+                                            <div className="flex items-center space-x-2">
+                                                <Checkbox checked={field.value} onCheckedChange={field.onChange} />
+                                                <Label className="optional">Mark as completed</Label>
+                                            </div>
+                                        </FormControl>
+                                        <FormDescription>Mark a task as completed by default.</FormDescription>
+                                        <FormMessage />
+                                    </FormItem>
+                                )}
+                            />
+                            <div className="flex justify-end space-x-2">
+                                <DialogClose asChild>
+                                    <Button type="reset" variant="outline" disabled={form.formState.isSubmitting}>
+                                        Cancel
+                                    </Button>
+                                </DialogClose>
+                                <Button type="submit" disabled={form.formState.isSubmitting}>
+                                    Save Changes
+                                </Button>
+                            </div>
+                        </form>
+                    </Form>
+                </DialogHeader>
+            </DialogContent>
+        </Dialog>
+    );
+}
diff --git a/src/components/task-action/index.tsx b/src/components/task-action/index.tsx
new file mode 100644
index 0000000..24dd352
--- /dev/null
+++ b/src/components/task-action/index.tsx
@@ -0,0 +1,16 @@
+'use client';
+
+import { Task } from '@prisma/client';
+import { Delete } from './delete';
+import { Edit } from './edit';
+
+export function TaskAction({ task }: { task: Task }) {
+    const { id } = task;
+
+    return (
+        <div className="flex items-center space-x-2">
+            <Edit task={task} />
+            <Delete id={id} />
+        </div>
+    );
+}
diff --git a/src/components/task-create.tsx b/src/components/task-create.tsx
new file mode 100644
index 0000000..98cfe2e
--- /dev/null
+++ b/src/components/task-create.tsx
@@ -0,0 +1,142 @@
+'use client';
+
+import { createTask } from '@/action/tasks';
+import { Checkbox } from '@/components/ui/checkbox';
+import {
+    Dialog,
+    DialogClose,
+    DialogContent,
+    DialogDescription,
+    DialogHeader,
+    DialogTitle,
+    DialogTrigger,
+} from '@/components/ui/dialog';
+import { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';
+import { Input } from '@/components/ui/input';
+import { Label } from '@/components/ui/label';
+import { zodResolver } from '@hookform/resolvers/zod';
+import { useRouter } from 'next/navigation';
+import { useState } from 'react';
+import { useForm } from 'react-hook-form';
+import { z } from 'zod';
+import { Button } from './ui/button';
+import { useToast } from './ui/use-toast';
+
+export const formSchema = z.object({
+    title: z.string().min(1, 'Title is required').max(50, 'Title is too long (50 characters max)'),
+    description: z.string().max(200, 'Description is too long (200 characters max)'),
+    completed: z.boolean().default(false),
+});
+
+type Props = {
+    variant?: 'link' | 'default' | 'destructive' | 'outline' | 'secondary' | 'ghost';
+};
+
+export function TaskCreate({ variant = 'default' }: Props) {
+    const [dialogOpen, setDialogOpen] = useState(false);
+    const { toast } = useToast();
+    const router = useRouter();
+
+    const form = useForm<z.infer<typeof formSchema>>({
+        resolver: zodResolver(formSchema),
+        defaultValues: {
+            title: '',
+            description: '',
+            completed: false,
+        },
+    });
+
+    async function onSubmit(values: z.infer<typeof formSchema>) {
+        try {
+            await createTask(values);
+            form.reset();
+            router.refresh();
+            toast({
+                title: 'Success',
+                description: `Your task "${values.title}" was created.`,
+            });
+            setDialogOpen(false);
+        } catch (error) {
+            console.error(error);
+            toast({
+                title: 'Error',
+                description: 'Something went wrong while creating the task.',
+                variant: 'destructive',
+            });
+        }
+    }
+
+    return (
+        <Dialog open={dialogOpen} onOpenChange={setDialogOpen}>
+            <DialogTrigger asChild>
+                <Button variant={variant} onClick={() => setDialogOpen(true)}>
+                    New Task
+                </Button>
+            </DialogTrigger>
+            <DialogContent>
+                <DialogHeader>
+                    <DialogTitle>Create a new task</DialogTitle>
+                    <DialogDescription>Fill in the details below to create your new task.</DialogDescription>
+                    <Form {...form}>
+                        <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-8">
+                            <FormField
+                                control={form.control}
+                                name="title"
+                                render={({ field }) => (
+                                    <FormItem>
+                                        <FormLabel className="required">Title</FormLabel>
+                                        <FormControl>
+                                            <Input placeholder="e.g. Sleep after work..." {...field} />
+                                        </FormControl>
+                                        <FormDescription>This is your task&apos;s title.</FormDescription>
+                                        <FormMessage />
+                                    </FormItem>
+                                )}
+                            />
+                            <FormField
+                                control={form.control}
+                                name="description"
+                                render={({ field }) => (
+                                    <FormItem>
+                                        <FormLabel className="optional">Description</FormLabel>
+                                        <FormControl>
+                                            <Input placeholder="e.g. Become more productive..." {...field} />
+                                        </FormControl>
+                                        <FormDescription>This is your task&apos;s description.</FormDescription>
+                                        <FormMessage />
+                                    </FormItem>
+                                )}
+                            />
+                            <FormField
+                                control={form.control}
+                                name="completed"
+                                render={({ field }) => (
+                                    <FormItem>
+                                        <FormControl>
+                                            <div className="flex items-center space-x-2">
+                                                <Checkbox checked={field.value} onCheckedChange={field.onChange} />
+                                                <Label className="optional">Mark as completed</Label>
+                                            </div>
+                                        </FormControl>
+                                        <FormDescription>Mark a task as completed by default.</FormDescription>
+                                        <FormMessage />
+                                    </FormItem>
+                                )}
+                            />
+                            <div className="flex justify-end space-x-2">
+                                <DialogClose asChild>
+                                    <Button type="reset" variant="outline" disabled={form.formState.isSubmitting}>
+                                        Cancel
+                                    </Button>
+                                </DialogClose>
+                                <Button type="submit" disabled={form.formState.isSubmitting}>
+                                    Create task
+                                </Button>
+                            </div>
+                        </form>
+                    </Form>
+                </DialogHeader>
+            </DialogContent>
+        </Dialog>
+    );
+}
diff --git a/src/components/task-item.tsx b/src/components/task-item.tsx
new file mode 100644
index 0000000..bf18e37
--- /dev/null
+++ b/src/components/task-item.tsx
@@ -0,0 +1,43 @@
+import { updateTask } from '@/action/tasks';
+import { Checkbox } from '@/components/ui/checkbox';
+import { Label } from '@/components/ui/label';
+import { Task } from '@prisma/client';
+import { useRouter } from 'next/navigation';
+import { TaskAction } from './task-action';
+import { useToast } from './ui/use-toast';
+
+export function TaskItem({ task }: { task: Task }) {
+    const { toast } = useToast();
+    const router = useRouter();
+
+    async function toggleTask() {
+        try {
+            await updateTask({ ...task, completed: !task.completed });
+            router.refresh();
+        } catch (error) {
+            console.error(error);
+            toast({
+                title: 'Error',
+                description: 'Failed to toggle task',
+                variant: 'destructive',
+            });
+        }
+    }
+
+    if (!task) return null;
+
+    return (
+        <div className="flex items-center justify-between space-x-4">
+            <div className="flex items-start space-x-2">
+                <Checkbox id={task.title} checked={task.completed} onCheckedChange={toggleTask} />
+                <div className="flex flex-col">
+                    <Label htmlFor={task.title} className="font-medium">
+                        {task.title}
+                    </Label>
+                    <small className="text-muted-foreground">{task.description}</small>
+                </div>
+            </div>
+            <TaskAction task={task} />
+        </div>
+    );
+}
diff --git a/src/components/task-list.tsx b/src/components/task-list.tsx
new file mode 100644
index 0000000..1405050
--- /dev/null
+++ b/src/components/task-list.tsx
@@ -0,0 +1,70 @@
+'use client';
+
+import { Label } from '@/components/ui/label';
+import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
+import { Task } from '@prisma/client';
+import { Search } from 'lucide-react';
+import { useMemo, useState } from 'react';
+import { TaskCreate } from './task-create';
+import { TaskItem } from './task-item';
+import { Input } from './ui/input';
+
+type TaskSelectProps = 'all' | 'incomplete' | 'completed';
+
+export function TaskList({ tasks }: { tasks: Task[] }) {
+    const [filter, setFilter] = useState<TaskSelectProps>('all');
+    const [search, setSearch] = useState<string>('');
+
+    const filteredTasks = useMemo(() => {
+        return tasks.filter((task) => {
+            const matchesFilter =
+                filter === 'all' ||
+                (filter === 'incomplete' && !task.completed) ||
+                (filter === 'completed' && task.completed);
+            const matchesSearch =
+                task.title.toLowerCase().includes(search.toLowerCase()) ||
+                task.description!.toLowerCase().includes(search.toLowerCase());
+            return matchesFilter && matchesSearch;
+        });
+    }, [tasks, filter, search]);
+
+    return (
+        <div className="flex flex-col rounded-lg border bg-background p-4 space-y-4">
+            <div className="flex items-center justify-between">
+                <div className="flex items-center space-x-2">
+                    <Label className="text-muted-foreground">Filter</Label>
+                    <Select onValueChange={(value: TaskSelectProps) => setFilter(value)} defaultValue="all">
+                        <SelectTrigger className="w-[180px]">
+                            <SelectValue placeholder="Select filter option" />
+                        </SelectTrigger>
+                        <SelectContent>
+                            <SelectItem value="all">All</SelectItem>
+                            <SelectItem value="incomplete">Incomplete</SelectItem>
+                            <SelectItem value="completed">Completed</SelectItem>
+                        </SelectContent>
+                    </Select>
+                </div>
+                <div className="flex items-center space-x-2">
+                    <Label className="text-muted-foreground">Search</Label>
+                    <Input
+                        type="text"
+                        value={search}
+                        rightIcon={Search}
+                        onChange={(e) => setSearch(e.target.value)}
+                        placeholder="Search tasks..."
+                    />
+                </div>
+            </div>
+            {filteredTasks.map((task) => (
+                <TaskItem key={task.id} task={task} />
+            ))}
+            {!filteredTasks.length && (
+                <div className="flex flex-col items-center justify-center min-h-[200px] text-muted-foreground">
+                    <p className="mb-2">No tasks found.</p>
+                    <small>Try to clear your filters, and search or create a new task!</small>
+                    <TaskCreate variant="link" />
+                </div>
+            )}
+        </div>
+    );
+}
diff --git a/src/components/ui/badge.tsx b/src/components/ui/badge.tsx
new file mode 100644
index 0000000..19007e6
--- /dev/null
+++ b/src/components/ui/badge.tsx
@@ -0,0 +1,28 @@
+import { cn } from '@/lib/utils';
+import { cva, type VariantProps } from 'class-variance-authority';
+import * as React from 'react';
+
+const badgeVariants = cva(
+    'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',
+    {
+        variants: {
+            variant: {
+                default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',
+                secondary: 'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',
+                destructive: 'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',
+                outline: 'text-foreground',
+            },
+        },
+        defaultVariants: {
+            variant: 'default',
+        },
+    },
+);
+
+export interface BadgeProps extends React.HTMLAttributes<HTMLDivElement>, VariantProps<typeof badgeVariants> {}
+
+function Badge({ className, variant, ...props }: BadgeProps) {
+    return <div className={cn(badgeVariants({ variant }), className)} {...props} />;
+}
+
+export { Badge, badgeVariants };
diff --git a/src/components/ui/button.tsx b/src/components/ui/button.tsx
new file mode 100644
index 0000000..442bda6
--- /dev/null
+++ b/src/components/ui/button.tsx
@@ -0,0 +1,46 @@
+import { cn } from '@/lib/utils';
+import { Slot } from '@radix-ui/react-slot';
+import { cva, type VariantProps } from 'class-variance-authority';
+import * as React from 'react';
+
+const buttonVariants = cva(
+    'inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50',
+    {
+        variants: {
+            variant: {
+                default: 'bg-primary text-primary-foreground hover:bg-primary/90',
+                destructive: 'bg-destructive text-destructive-foreground hover:bg-destructive/90',
+                outline: 'border border-input bg-background hover:bg-accent hover:text-accent-foreground',
+                secondary: 'bg-secondary text-secondary-foreground hover:bg-secondary/80',
+                ghost: 'hover:bg-accent hover:text-accent-foreground',
+                link: 'text-primary underline-offset-4 hover:underline',
+            },
+            size: {
+                default: 'h-10 px-4 py-2',
+                sm: 'h-9 rounded-md px-3',
+                lg: 'h-11 rounded-md px-8',
+                icon: 'h-10 w-10',
+            },
+        },
+        defaultVariants: {
+            variant: 'default',
+            size: 'default',
+        },
+    },
+);
+
+export interface ButtonProps
+    extends React.ButtonHTMLAttributes<HTMLButtonElement>,
+        VariantProps<typeof buttonVariants> {
+    asChild?: boolean;
+}
+
+const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
+    ({ className, variant, size, asChild = false, ...props }, ref) => {
+        const Comp = asChild ? Slot : 'button';
+        return <Comp className={cn(buttonVariants({ variant, size, className }))} ref={ref} {...props} />;
+    },
+);
+Button.displayName = 'Button';
+
+export { Button, buttonVariants };
diff --git a/src/components/ui/checkbox.tsx b/src/components/ui/checkbox.tsx
new file mode 100644
index 0000000..2bc443b
--- /dev/null
+++ b/src/components/ui/checkbox.tsx
@@ -0,0 +1,27 @@
+'use client';
+
+import { cn } from '@/lib/utils';
+import * as CheckboxPrimitive from '@radix-ui/react-checkbox';
+import { Check } from 'lucide-react';
+import * as React from 'react';
+
+const Checkbox = React.forwardRef<
+    React.ElementRef<typeof CheckboxPrimitive.Root>,
+    React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>
+>(({ className, ...props }, ref) => (
+    <CheckboxPrimitive.Root
+        ref={ref}
+        className={cn(
+            'peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground',
+            className,
+        )}
+        {...props}
+    >
+        <CheckboxPrimitive.Indicator className={cn('flex items-center justify-center text-current')}>
+            <Check className="h-4 w-4" />
+        </CheckboxPrimitive.Indicator>
+    </CheckboxPrimitive.Root>
+));
+Checkbox.displayName = CheckboxPrimitive.Root.displayName;
+
+export { Checkbox };
diff --git a/src/components/ui/dialog.tsx b/src/components/ui/dialog.tsx
new file mode 100644
index 0000000..766517b
--- /dev/null
+++ b/src/components/ui/dialog.tsx
@@ -0,0 +1,96 @@
+'use client';
+
+import { cn } from '@/lib/utils';
+import * as DialogPrimitive from '@radix-ui/react-dialog';
+import { X } from 'lucide-react';
+import * as React from 'react';
+
+const Dialog = DialogPrimitive.Root;
+
+const DialogTrigger = DialogPrimitive.Trigger;
+
+const DialogPortal = DialogPrimitive.Portal;
+
+const DialogClose = DialogPrimitive.Close;
+
+const DialogOverlay = React.forwardRef<
+    React.ElementRef<typeof DialogPrimitive.Overlay>,
+    React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>
+>(({ className, ...props }, ref) => (
+    <DialogPrimitive.Overlay
+        ref={ref}
+        className={cn(
+            'fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0',
+            className,
+        )}
+        {...props}
+    />
+));
+DialogOverlay.displayName = DialogPrimitive.Overlay.displayName;
+
+const DialogContent = React.forwardRef<
+    React.ElementRef<typeof DialogPrimitive.Content>,
+    React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>
+>(({ className, children, ...props }, ref) => (
+    <DialogPortal>
+        <DialogOverlay />
+        <DialogPrimitive.Content
+            ref={ref}
+            className={cn(
+                'fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg',
+                className,
+            )}
+            {...props}
+        >
+            {children}
+            <DialogPrimitive.Close className="absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground">
+                <X className="h-4 w-4" />
+                <span className="sr-only">Close</span>
+            </DialogPrimitive.Close>
+        </DialogPrimitive.Content>
+    </DialogPortal>
+));
+DialogContent.displayName = DialogPrimitive.Content.displayName;
+
+const DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
+    <div className={cn('flex flex-col space-y-1.5 text-center sm:text-left', className)} {...props} />
+);
+DialogHeader.displayName = 'DialogHeader';
+
+const DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (
+    <div className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', className)} {...props} />
+);
+DialogFooter.displayName = 'DialogFooter';
+
+const DialogTitle = React.forwardRef<
+    React.ElementRef<typeof DialogPrimitive.Title>,
+    React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>
+>(({ className, ...props }, ref) => (
+    <DialogPrimitive.Title
+        ref={ref}
+        className={cn('text-lg font-semibold leading-none tracking-tight', className)}
+        {...props}
+    />
+));
+DialogTitle.displayName = DialogPrimitive.Title.displayName;
+
+const DialogDescription = React.forwardRef<
+    React.ElementRef<typeof DialogPrimitive.Description>,
+    React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>
+>(({ className, ...props }, ref) => (
+    <DialogPrimitive.Description ref={ref} className={cn('text-sm text-muted-foreground', className)} {...props} />
+));
+DialogDescription.displayName = DialogPrimitive.Description.displayName;
+
+export {
+    Dialog,
+    DialogPortal,
+    DialogOverlay,
+    DialogClose,
+    DialogTrigger,
+    DialogContent,
+    DialogHeader,
+    DialogFooter,
+    DialogTitle,
+    DialogDescription,
+};
diff --git a/src/components/ui/dropdown-menu.tsx b/src/components/ui/dropdown-menu.tsx
new file mode 100644
index 0000000..74fcd58
--- /dev/null
+++ b/src/components/ui/dropdown-menu.tsx
@@ -0,0 +1,180 @@
+'use client';
+
+import { cn } from '@/lib/utils';
+import * as DropdownMenuPrimitive from '@radix-ui/react-dropdown-menu';
+import { Check, ChevronRight, Circle } from 'lucide-react';
+import * as React from 'react';
+
+const DropdownMenu = DropdownMenuPrimitive.Root;
+
+const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger;
+
+const DropdownMenuGroup = DropdownMenuPrimitive.Group;
+
+const DropdownMenuPortal = DropdownMenuPrimitive.Portal;
+
+const DropdownMenuSub = DropdownMenuPrimitive.Sub;
+
+const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup;
+
+const DropdownMenuSubTrigger = React.forwardRef<
+    React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,
+    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {
+        inset?: boolean;
+    }
+>(({ className, inset, children, ...props }, ref) => (
+    <DropdownMenuPrimitive.SubTrigger
+        ref={ref}
+        className={cn(
+            'flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent',
+            inset && 'pl-8',
+            className,
+        )}
+        {...props}
+    >
+        {children}
+        <ChevronRight className="ml-auto h-4 w-4" />
+    </DropdownMenuPrimitive.SubTrigger>
+));
+DropdownMenuSubTrigger.displayName = DropdownMenuPrimitive.SubTrigger.displayName;
+
+const DropdownMenuSubContent = React.forwardRef<
+    React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,
+    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>
+>(({ className, ...props }, ref) => (
+    <DropdownMenuPrimitive.SubContent
+        ref={ref}
+        className={cn(
+            'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',
+            className,
+        )}
+        {...props}
+    />
+));
+DropdownMenuSubContent.displayName = DropdownMenuPrimitive.SubContent.displayName;
+
+const DropdownMenuContent = React.forwardRef<
+    React.ElementRef<typeof DropdownMenuPrimitive.Content>,
+    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>
+>(({ className, sideOffset = 4, ...props }, ref) => (
+    <DropdownMenuPrimitive.Portal>
+        <DropdownMenuPrimitive.Content
+            ref={ref}
+            sideOffset={sideOffset}
+            className={cn(
+                'z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',
+                className,
+            )}
+            {...props}
+        />
+    </DropdownMenuPrimitive.Portal>
+));
+DropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName;
+
+const DropdownMenuItem = React.forwardRef<
+    React.ElementRef<typeof DropdownMenuPrimitive.Item>,
+    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {
+        inset?: boolean;
+    }
+>(({ className, inset, ...props }, ref) => (
+    <DropdownMenuPrimitive.Item
+        ref={ref}
+        className={cn(
+            'relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',
+            inset && 'pl-8',
+            className,
+        )}
+        {...props}
+    />
+));
+DropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName;
+
+const DropdownMenuCheckboxItem = React.forwardRef<
+    React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,
+    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>
+>(({ className, children, checked, ...props }, ref) => (
+    <DropdownMenuPrimitive.CheckboxItem
+        ref={ref}
+        className={cn(
+            'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',
+            className,
+        )}
+        checked={checked}
+        {...props}
+    >
+        <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
+            <DropdownMenuPrimitive.ItemIndicator>
+                <Check className="h-4 w-4" />
+            </DropdownMenuPrimitive.ItemIndicator>
+        </span>
+        {children}
+    </DropdownMenuPrimitive.CheckboxItem>
+));
+DropdownMenuCheckboxItem.displayName = DropdownMenuPrimitive.CheckboxItem.displayName;
+
+const DropdownMenuRadioItem = React.forwardRef<
+    React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,
+    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>
+>(({ className, children, ...props }, ref) => (
+    <DropdownMenuPrimitive.RadioItem
+        ref={ref}
+        className={cn(
+            'relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',
+            className,
+        )}
+        {...props}
+    >
+        <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
+            <DropdownMenuPrimitive.ItemIndicator>
+                <Circle className="h-2 w-2 fill-current" />
+            </DropdownMenuPrimitive.ItemIndicator>
+        </span>
+        {children}
+    </DropdownMenuPrimitive.RadioItem>
+));
+DropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName;
+
+const DropdownMenuLabel = React.forwardRef<
+    React.ElementRef<typeof DropdownMenuPrimitive.Label>,
+    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {
+        inset?: boolean;
+    }
+>(({ className, inset, ...props }, ref) => (
+    <DropdownMenuPrimitive.Label
+        ref={ref}
+        className={cn('px-2 py-1.5 text-sm font-semibold', inset && 'pl-8', className)}
+        {...props}
+    />
+));
+DropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName;
+
+const DropdownMenuSeparator = React.forwardRef<
+    React.ElementRef<typeof DropdownMenuPrimitive.Separator>,
+    React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>
+>(({ className, ...props }, ref) => (
+    <DropdownMenuPrimitive.Separator ref={ref} className={cn('-mx-1 my-1 h-px bg-muted', className)} {...props} />
+));
+DropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName;
+
+const DropdownMenuShortcut = ({ className, ...props }: React.HTMLAttributes<HTMLSpanElement>) => {
+    return <span className={cn('ml-auto text-xs tracking-widest opacity-60', className)} {...props} />;
+};
+DropdownMenuShortcut.displayName = 'DropdownMenuShortcut';
+
+export {
+    DropdownMenu,
+    DropdownMenuTrigger,
+    DropdownMenuContent,
+    DropdownMenuItem,
+    DropdownMenuCheckboxItem,
+    DropdownMenuRadioItem,
+    DropdownMenuLabel,
+    DropdownMenuSeparator,
+    DropdownMenuShortcut,
+    DropdownMenuGroup,
+    DropdownMenuPortal,
+    DropdownMenuSub,
+    DropdownMenuSubContent,
+    DropdownMenuSubTrigger,
+    DropdownMenuRadioGroup,
+};
diff --git a/src/components/ui/form.tsx b/src/components/ui/form.tsx
new file mode 100644
index 0000000..9d7c2ff
--- /dev/null
+++ b/src/components/ui/form.tsx
@@ -0,0 +1,137 @@
+'use client';
+
+import { Label } from '@/components/ui/label';
+import { cn } from '@/lib/utils';
+import * as LabelPrimitive from '@radix-ui/react-label';
+import { Slot } from '@radix-ui/react-slot';
+import * as React from 'react';
+import { Controller, ControllerProps, FieldPath, FieldValues, FormProvider, useFormContext } from 'react-hook-form';
+
+const Form = FormProvider;
+
+type FormFieldContextValue<
+    TFieldValues extends FieldValues = FieldValues,
+    TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
+> = {
+    name: TName;
+};
+
+const FormFieldContext = React.createContext<FormFieldContextValue>({} as FormFieldContextValue);
+
+const FormField = <
+    TFieldValues extends FieldValues = FieldValues,
+    TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,
+>({
+    ...props
+}: ControllerProps<TFieldValues, TName>) => {
+    return (
+        <FormFieldContext.Provider value={{ name: props.name }}>
+            <Controller {...props} />
+        </FormFieldContext.Provider>
+    );
+};
+
+const useFormField = () => {
+    const fieldContext = React.useContext(FormFieldContext);
+    const itemContext = React.useContext(FormItemContext);
+    const { getFieldState, formState } = useFormContext();
+
+    const fieldState = getFieldState(fieldContext.name, formState);
+
+    if (!fieldContext) {
+        throw new Error('useFormField should be used within <FormField>');
+    }
+
+    const { id } = itemContext;
+
+    return {
+        id,
+        name: fieldContext.name,
+        formItemId: `${id}-form-item`,
+        formDescriptionId: `${id}-form-item-description`,
+        formMessageId: `${id}-form-item-message`,
+        ...fieldState,
+    };
+};
+
+type FormItemContextValue = {
+    id: string;
+};
+
+const FormItemContext = React.createContext<FormItemContextValue>({} as FormItemContextValue);
+
+const FormItem = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(
+    ({ className, ...props }, ref) => {
+        const id = React.useId();
+
+        return (
+            <FormItemContext.Provider value={{ id }}>
+                <div ref={ref} className={cn('space-y-2', className)} {...props} />
+            </FormItemContext.Provider>
+        );
+    },
+);
+FormItem.displayName = 'FormItem';
+
+const FormLabel = React.forwardRef<
+    React.ElementRef<typeof LabelPrimitive.Root>,
+    React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>
+>(({ className, ...props }, ref) => {
+    const { error, formItemId } = useFormField();
+
+    return <Label ref={ref} className={cn(error && 'text-destructive', className)} htmlFor={formItemId} {...props} />;
+});
+FormLabel.displayName = 'FormLabel';
+
+const FormControl = React.forwardRef<React.ElementRef<typeof Slot>, React.ComponentPropsWithoutRef<typeof Slot>>(
+    ({ ...props }, ref) => {
+        const { error, formItemId, formDescriptionId, formMessageId } = useFormField();
+
+        return (
+            <Slot
+                ref={ref}
+                id={formItemId}
+                aria-describedby={!error ? `${formDescriptionId}` : `${formDescriptionId} ${formMessageId}`}
+                aria-invalid={!!error}
+                {...props}
+            />
+        );
+    },
+);
+FormControl.displayName = 'FormControl';
+
+const FormDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(
+    ({ className, ...props }, ref) => {
+        const { formDescriptionId } = useFormField();
+
+        return (
+            <p ref={ref} id={formDescriptionId} className={cn('text-sm text-muted-foreground', className)} {...props} />
+        );
+    },
+);
+FormDescription.displayName = 'FormDescription';
+
+const FormMessage = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(
+    ({ className, children, ...props }, ref) => {
+        const { error, formMessageId } = useFormField();
+        const body = error ? String(error?.message) : children;
+
+        if (!body) {
+            return null;
+        }
+
+        return (
+            <p
+                ref={ref}
+                id={formMessageId}
+                className={cn('text-sm font-medium text-destructive', className)}
+                {...props}
+            >
+                {body}
+            </p>
+        );
+    },
+);
+FormMessage.displayName = 'FormMessage';
+
+export { useFormField, Form, FormItem, FormLabel, FormControl, FormDescription, FormMessage, FormField };
diff --git a/src/components/ui/input.tsx b/src/components/ui/input.tsx
new file mode 100644
index 0000000..07697a4
--- /dev/null
+++ b/src/components/ui/input.tsx
@@ -0,0 +1,33 @@
+import { cn } from '@/lib/utils';
+import * as React from 'react';
+import { ElementType } from 'react';
+
+export interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {
+    leftIcon?: ElementType;
+    rightIcon?: ElementType;
+}
+
+const Input = React.forwardRef<HTMLInputElement, InputProps>(
+    ({ className, type, leftIcon: LeftIcon, rightIcon: RightIcon, ...props }, ref) => {
+        return (
+            <div className="relative flex items-center max-w-2xl">
+                {LeftIcon && <LeftIcon className="absolute left-2 top-1/2 h-4 w-4 -translate-y-1/2 transform" />}
+                {RightIcon && <RightIcon className="absolute right-2 top-1/2 h-4 w-4 -translate-y-1/2 transform" />}
+                <input
+                    type={type}
+                    className={cn(
+                        'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',
+                        LeftIcon && 'pl-8',
+                        RightIcon && 'pr-8',
+                        className,
+                    )}
+                    ref={ref}
+                    {...props}
+                />
+            </div>
+        );
+    },
+);
+Input.displayName = 'Input';
+
+export { Input };
diff --git a/src/components/ui/label.tsx b/src/components/ui/label.tsx
new file mode 100644
index 0000000..36ec368
--- /dev/null
+++ b/src/components/ui/label.tsx
@@ -0,0 +1,18 @@
+'use client';
+
+import { cn } from '@/lib/utils';
+import * as LabelPrimitive from '@radix-ui/react-label';
+import { cva, type VariantProps } from 'class-variance-authority';
+import * as React from 'react';
+
+const labelVariants = cva('text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70');
+
+const Label = React.forwardRef<
+    React.ElementRef<typeof LabelPrimitive.Root>,
+    React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> & VariantProps<typeof labelVariants>
+>(({ className, ...props }, ref) => (
+    <LabelPrimitive.Root ref={ref} className={cn(labelVariants(), className)} {...props} />
+));
+Label.displayName = LabelPrimitive.Root.displayName;
+
+export { Label };
diff --git a/src/components/ui/select.tsx b/src/components/ui/select.tsx
new file mode 100644
index 0000000..328b804
--- /dev/null
+++ b/src/components/ui/select.tsx
@@ -0,0 +1,144 @@
+'use client';
+
+import { cn } from '@/lib/utils';
+import * as SelectPrimitive from '@radix-ui/react-select';
+import { Check, ChevronDown, ChevronUp } from 'lucide-react';
+import * as React from 'react';
+
+const Select = SelectPrimitive.Root;
+
+const SelectGroup = SelectPrimitive.Group;
+
+const SelectValue = SelectPrimitive.Value;
+
+const SelectTrigger = React.forwardRef<
+    React.ElementRef<typeof SelectPrimitive.Trigger>,
+    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>
+>(({ className, children, ...props }, ref) => (
+    <SelectPrimitive.Trigger
+        ref={ref}
+        className={cn(
+            'flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1',
+            className,
+        )}
+        {...props}
+    >
+        {children}
+        <SelectPrimitive.Icon asChild>
+            <ChevronDown className="h-4 w-4 opacity-50" />
+        </SelectPrimitive.Icon>
+    </SelectPrimitive.Trigger>
+));
+SelectTrigger.displayName = SelectPrimitive.Trigger.displayName;
+
+const SelectScrollUpButton = React.forwardRef<
+    React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,
+    React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>
+>(({ className, ...props }, ref) => (
+    <SelectPrimitive.ScrollUpButton
+        ref={ref}
+        className={cn('flex cursor-default items-center justify-center py-1', className)}
+        {...props}
+    >
+        <ChevronUp className="h-4 w-4" />
+    </SelectPrimitive.ScrollUpButton>
+));
+SelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;
+
+const SelectScrollDownButton = React.forwardRef<
+    React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,
+    React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>
+>(({ className, ...props }, ref) => (
+    <SelectPrimitive.ScrollDownButton
+        ref={ref}
+        className={cn('flex cursor-default items-center justify-center py-1', className)}
+        {...props}
+    >
+        <ChevronDown className="h-4 w-4" />
+    </SelectPrimitive.ScrollDownButton>
+));
+SelectScrollDownButton.displayName = SelectPrimitive.ScrollDownButton.displayName;
+
+const SelectContent = React.forwardRef<
+    React.ElementRef<typeof SelectPrimitive.Content>,
+    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>
+>(({ className, children, position = 'popper', ...props }, ref) => (
+    <SelectPrimitive.Portal>
+        <SelectPrimitive.Content
+            ref={ref}
+            className={cn(
+                'relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2',
+                position === 'popper' &&
+                    'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',
+                className,
+            )}
+            position={position}
+            {...props}
+        >
+            <SelectScrollUpButton />
+            <SelectPrimitive.Viewport
+                className={cn(
+                    'p-1',
+                    position === 'popper' &&
+                        'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]',
+                )}
+            >
+                {children}
+            </SelectPrimitive.Viewport>
+            <SelectScrollDownButton />
+        </SelectPrimitive.Content>
+    </SelectPrimitive.Portal>
+));
+SelectContent.displayName = SelectPrimitive.Content.displayName;
+
+const SelectLabel = React.forwardRef<
+    React.ElementRef<typeof SelectPrimitive.Label>,
+    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>
+>(({ className, ...props }, ref) => (
+    <SelectPrimitive.Label ref={ref} className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold', className)} {...props} />
+));
+SelectLabel.displayName = SelectPrimitive.Label.displayName;
+
+const SelectItem = React.forwardRef<
+    React.ElementRef<typeof SelectPrimitive.Item>,
+    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>
+>(({ className, children, ...props }, ref) => (
+    <SelectPrimitive.Item
+        ref={ref}
+        className={cn(
+            'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50',
+            className,
+        )}
+        {...props}
+    >
+        <span className="absolute left-2 flex h-3.5 w-3.5 items-center justify-center">
+            <SelectPrimitive.ItemIndicator>
+                <Check className="h-4 w-4" />
+            </SelectPrimitive.ItemIndicator>
+        </span>
+
+        <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>
+    </SelectPrimitive.Item>
+));
+SelectItem.displayName = SelectPrimitive.Item.displayName;
+
+const SelectSeparator = React.forwardRef<
+    React.ElementRef<typeof SelectPrimitive.Separator>,
+    React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>
+>(({ className, ...props }, ref) => (
+    <SelectPrimitive.Separator ref={ref} className={cn('-mx-1 my-1 h-px bg-muted', className)} {...props} />
+));
+SelectSeparator.displayName = SelectPrimitive.Separator.displayName;
+
+export {
+    Select,
+    SelectGroup,
+    SelectValue,
+    SelectTrigger,
+    SelectContent,
+    SelectLabel,
+    SelectItem,
+    SelectSeparator,
+    SelectScrollUpButton,
+    SelectScrollDownButton,
+};
diff --git a/src/components/ui/toast.tsx b/src/components/ui/toast.tsx
new file mode 100644
index 0000000..71f1154
--- /dev/null
+++ b/src/components/ui/toast.tsx
@@ -0,0 +1,112 @@
+'use client';
+
+import { cn } from '@/lib/utils';
+import * as ToastPrimitives from '@radix-ui/react-toast';
+import { cva, type VariantProps } from 'class-variance-authority';
+import { X } from 'lucide-react';
+import * as React from 'react';
+
+const ToastProvider = ToastPrimitives.Provider;
+
+const ToastViewport = React.forwardRef<
+    React.ElementRef<typeof ToastPrimitives.Viewport>,
+    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>
+>(({ className, ...props }, ref) => (
+    <ToastPrimitives.Viewport
+        ref={ref}
+        className={cn(
+            'fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]',
+            className,
+        )}
+        {...props}
+    />
+));
+ToastViewport.displayName = ToastPrimitives.Viewport.displayName;
+
+const toastVariants = cva(
+    'group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full',
+    {
+        variants: {
+            variant: {
+                default: 'border bg-background text-foreground',
+                destructive: 'destructive group border-destructive bg-destructive text-destructive-foreground',
+            },
+        },
+        defaultVariants: {
+            variant: 'default',
+        },
+    },
+);
+
+const Toast = React.forwardRef<
+    React.ElementRef<typeof ToastPrimitives.Root>,
+    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> & VariantProps<typeof toastVariants>
+>(({ className, variant, ...props }, ref) => {
+    return <ToastPrimitives.Root ref={ref} className={cn(toastVariants({ variant }), className)} {...props} />;
+});
+Toast.displayName = ToastPrimitives.Root.displayName;
+
+const ToastAction = React.forwardRef<
+    React.ElementRef<typeof ToastPrimitives.Action>,
+    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>
+>(({ className, ...props }, ref) => (
+    <ToastPrimitives.Action
+        ref={ref}
+        className={cn(
+            'inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive',
+            className,
+        )}
+        {...props}
+    />
+));
+ToastAction.displayName = ToastPrimitives.Action.displayName;
+
+const ToastClose = React.forwardRef<
+    React.ElementRef<typeof ToastPrimitives.Close>,
+    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>
+>(({ className, ...props }, ref) => (
+    <ToastPrimitives.Close
+        ref={ref}
+        className={cn(
+            'absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600',
+            className,
+        )}
+        toast-close=""
+        {...props}
+    >
+        <X className="h-4 w-4" />
+    </ToastPrimitives.Close>
+));
+ToastClose.displayName = ToastPrimitives.Close.displayName;
+
+const ToastTitle = React.forwardRef<
+    React.ElementRef<typeof ToastPrimitives.Title>,
+    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>
+>(({ className, ...props }, ref) => (
+    <ToastPrimitives.Title ref={ref} className={cn('text-sm font-semibold', className)} {...props} />
+));
+ToastTitle.displayName = ToastPrimitives.Title.displayName;
+
+const ToastDescription = React.forwardRef<
+    React.ElementRef<typeof ToastPrimitives.Description>,
+    React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>
+>(({ className, ...props }, ref) => (
+    <ToastPrimitives.Description ref={ref} className={cn('text-sm opacity-90', className)} {...props} />
+));
+ToastDescription.displayName = ToastPrimitives.Description.displayName;
+
+type ToastProps = React.ComponentPropsWithoutRef<typeof Toast>;
+
+type ToastActionElement = React.ReactElement<typeof ToastAction>;
+
+export {
+    type ToastProps,
+    type ToastActionElement,
+    ToastProvider,
+    ToastViewport,
+    Toast,
+    ToastTitle,
+    ToastDescription,
+    ToastClose,
+    ToastAction,
+};
diff --git a/src/components/ui/toaster.tsx b/src/components/ui/toaster.tsx
new file mode 100644
index 0000000..c6a8b78
--- /dev/null
+++ b/src/components/ui/toaster.tsx
@@ -0,0 +1,26 @@
+'use client';
+
+import { Toast, ToastClose, ToastDescription, ToastProvider, ToastTitle, ToastViewport } from '@/components/ui/toast';
+import { useToast } from '@/components/ui/use-toast';
+
+export function Toaster() {
+    const { toasts } = useToast();
+
+    return (
+        <ToastProvider>
+            {toasts.map(function ({ id, title, description, action, ...props }) {
+                return (
+                    <Toast key={id} {...props}>
+                        <div className="grid gap-1">
+                            {title && <ToastTitle>{title}</ToastTitle>}
+                            {description && <ToastDescription>{description}</ToastDescription>}
+                        </div>
+                        {action}
+                        <ToastClose />
+                    </Toast>
+                );
+            })}
+            <ToastViewport />
+        </ToastProvider>
+    );
+}
diff --git a/src/components/ui/use-toast.ts b/src/components/ui/use-toast.ts
new file mode 100644
index 0000000..ac1802a
--- /dev/null
+++ b/src/components/ui/use-toast.ts
@@ -0,0 +1,188 @@
+'use client';
+
+// Inspired by react-hot-toast library
+import type { ToastActionElement, ToastProps } from '@/components/ui/toast';
+import * as React from 'react';
+
+const TOAST_LIMIT = 1;
+const TOAST_REMOVE_DELAY = 1000000;
+
+type ToasterToast = ToastProps & {
+    id: string;
+    title?: React.ReactNode;
+    description?: React.ReactNode;
+    action?: ToastActionElement;
+};
+
+const actionTypes = {
+    ADD_TOAST: 'ADD_TOAST',
+    UPDATE_TOAST: 'UPDATE_TOAST',
+    DISMISS_TOAST: 'DISMISS_TOAST',
+    REMOVE_TOAST: 'REMOVE_TOAST',
+} as const;
+
+let count = 0;
+
+function genId() {
+    count = (count + 1) % Number.MAX_SAFE_INTEGER;
+    return count.toString();
+}
+
+type ActionType = typeof actionTypes;
+
+type Action =
+    | {
+          type: ActionType['ADD_TOAST'];
+          toast: ToasterToast;
+      }
+    | {
+          type: ActionType['UPDATE_TOAST'];
+          toast: Partial<ToasterToast>;
+      }
+    | {
+          type: ActionType['DISMISS_TOAST'];
+          toastId?: ToasterToast['id'];
+      }
+    | {
+          type: ActionType['REMOVE_TOAST'];
+          toastId?: ToasterToast['id'];
+      };
+
+interface State {
+    toasts: ToasterToast[];
+}
+
+const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();
+
+const addToRemoveQueue = (toastId: string) => {
+    if (toastTimeouts.has(toastId)) {
+        return;
+    }
+
+    const timeout = setTimeout(() => {
+        toastTimeouts.delete(toastId);
+        dispatch({
+            type: 'REMOVE_TOAST',
+            toastId: toastId,
+        });
+    }, TOAST_REMOVE_DELAY);
+
+    toastTimeouts.set(toastId, timeout);
+};
+
+export const reducer = (state: State, action: Action): State => {
+    switch (action.type) {
+        case 'ADD_TOAST':
+            return {
+                ...state,
+                toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),
+            };
+
+        case 'UPDATE_TOAST':
+            return {
+                ...state,
+                toasts: state.toasts.map((t) => (t.id === action.toast.id ? { ...t, ...action.toast } : t)),
+            };
+
+        case 'DISMISS_TOAST': {
+            const { toastId } = action;
+
+            // ! Side effects ! - This could be extracted into a dismissToast() action,
+            // but I'll keep it here for simplicity
+            if (toastId) {
+                addToRemoveQueue(toastId);
+            } else {
+                state.toasts.forEach((toast) => {
+                    addToRemoveQueue(toast.id);
+                });
+            }
+
+            return {
+                ...state,
+                toasts: state.toasts.map((t) =>
+                    t.id === toastId || toastId === undefined
+                        ? {
+                              ...t,
+                              open: false,
+                          }
+                        : t,
+                ),
+            };
+        }
+        case 'REMOVE_TOAST':
+            if (action.toastId === undefined) {
+                return {
+                    ...state,
+                    toasts: [],
+                };
+            }
+            return {
+                ...state,
+                toasts: state.toasts.filter((t) => t.id !== action.toastId),
+            };
+    }
+};
+
+const listeners: Array<(state: State) => void> = [];
+
+let memoryState: State = { toasts: [] };
+
+function dispatch(action: Action) {
+    memoryState = reducer(memoryState, action);
+    listeners.forEach((listener) => {
+        listener(memoryState);
+    });
+}
+
+type Toast = Omit<ToasterToast, 'id'>;
+
+function toast({ ...props }: Toast) {
+    const id = genId();
+
+    const update = (props: ToasterToast) =>
+        dispatch({
+            type: 'UPDATE_TOAST',
+            toast: { ...props, id },
+        });
+    const dismiss = () => dispatch({ type: 'DISMISS_TOAST', toastId: id });
+
+    dispatch({
+        type: 'ADD_TOAST',
+        toast: {
+            ...props,
+            id,
+            open: true,
+            onOpenChange: (open) => {
+                if (!open) dismiss();
+            },
+        },
+    });
+
+    return {
+        id: id,
+        dismiss,
+        update,
+    };
+}
+
+function useToast() {
+    const [state, setState] = React.useState<State>(memoryState);
+
+    React.useEffect(() => {
+        listeners.push(setState);
+        return () => {
+            const index = listeners.indexOf(setState);
+            if (index > -1) {
+                listeners.splice(index, 1);
+            }
+        };
+    }, [state]);
+
+    return {
+        ...state,
+        toast,
+        dismiss: (toastId?: string) => dispatch({ type: 'DISMISS_TOAST', toastId }),
+    };
+}
+
+export { useToast, toast };
diff --git a/src/db/index.ts b/src/db/index.ts
new file mode 100644
index 0000000..9b6c4ce
--- /dev/null
+++ b/src/db/index.ts
@@ -0,0 +1,3 @@
+import { PrismaClient } from '@prisma/client';
+
+export const prisma = new PrismaClient();
diff --git a/src/lib/utils.ts b/src/lib/utils.ts
new file mode 100644
index 0000000..3877c89
--- /dev/null
+++ b/src/lib/utils.ts
@@ -0,0 +1,6 @@
+import { clsx, type ClassValue } from 'clsx';
+import { twMerge } from 'tailwind-merge';
+
+export function cn(...inputs: ClassValue[]) {
+    return twMerge(clsx(inputs));
+}
diff --git a/src/styles/globals.css b/src/styles/globals.css
new file mode 100644
index 0000000..fc5e588
--- /dev/null
+++ b/src/styles/globals.css
@@ -0,0 +1,82 @@
+@tailwind base;
+@tailwind components;
+@tailwind utilities;
+
+@layer base {
+    :root {
+        --background: 24 20% 90%;
+        --foreground: 198 20% 10%;
+        --muted: 30 9% 79%;
+        --muted-foreground: 207 10% 18%;
+        --popover: 27 10% 82%;
+        --popover-foreground: 198 20% 10%;
+        --card: 18 13% 84%;
+        --card-foreground: 198 20% 10%;
+        --border: 30 9% 79%;
+        --input: 30 9% 79%;
+        --primary: 110 46% 65%;
+        --primary-foreground: 24 20% 90%;
+        --secondary: 27 10% 82%;
+        --secondary-foreground: 198 13% 16%;
+        --accent: 27 9% 75%;
+        --accent-foreground: 198 13% 16%;
+        --destructive: 0 68% 68%;
+        --destructive-foreground: 24 20% 90%;
+        --ring: 110 46% 65%;
+        --radius: 0.5rem;
+    }
+
+    .dark {
+        --background: 198 20% 10%;
+        --foreground: 0 0% 85%;
+        --muted: 207 8% 21%;
+        --muted-foreground: 170 3% 64%;
+        --popover: 207 10% 18%;
+        --popover-foreground: 0 0% 85%;
+        --card: 198 13% 16%;
+        --card-foreground: 0 0% 85%;
+        --border: 207 8% 21%;
+        --input: 207 8% 21%;
+        --primary: 110 46% 65%;
+        --primary-foreground: 198 20% 10%;
+        --secondary: 207 10% 18%;
+        --secondary-foreground: 170 4% 71%;
+        --accent: 207 9% 25%;
+        --accent-foreground: 170 4% 71%;
+        --destructive: 0 68% 68%;
+        --destructive-foreground: 198 20% 10%;
+        --ring: 110 46% 65%;
+    }
+}
+
+@layer base {
+    * {
+        @apply border-border;
+    }
+
+    body {
+        @apply bg-background text-foreground;
+    }
+
+    ::-webkit-scrollbar {
+        @apply h-2 w-2;
+    }
+
+    ::-webkit-scrollbar-track {
+        @apply bg-background;
+    }
+
+    ::-webkit-scrollbar-thumb {
+        @apply rounded-full bg-primary;
+    }
+}
+
+@layer base {
+    .required {
+        @apply after:ml-0.5 after:text-destructive after:content-['*'];
+    }
+
+    .optional {
+        @apply after:ml-0.5 after:text-muted-foreground after:content-['(optional)'];
+    }
+}
diff --git a/tailwind.config.ts b/tailwind.config.ts
new file mode 100644
index 0000000..5fd77fa
--- /dev/null
+++ b/tailwind.config.ts
@@ -0,0 +1,79 @@
+import type { Config } from 'tailwindcss';
+import { fontFamily } from 'tailwindcss/defaultTheme';
+
+const config = {
+    darkMode: ['class'],
+    content: ['./pages/**/*.{ts,tsx}', './components/**/*.{ts,tsx}', './app/**/*.{ts,tsx}', './src/**/*.{ts,tsx}'],
+    prefix: '',
+    theme: {
+        container: {
+            center: true,
+            padding: '2rem',
+            screens: {
+                '2xl': '896px',
+            },
+        },
+        extend: {
+            fontFamily: {
+                sans: ['var(--font-sans)', ...fontFamily.sans],
+            },
+            colors: {
+                border: 'hsl(var(--border))',
+                input: 'hsl(var(--input))',
+                ring: 'hsl(var(--ring))',
+                background: 'hsl(var(--background))',
+                foreground: 'hsl(var(--foreground))',
+                primary: {
+                    DEFAULT: 'hsl(var(--primary))',
+                    foreground: 'hsl(var(--primary-foreground))',
+                },
+                secondary: {
+                    DEFAULT: 'hsl(var(--secondary))',
+                    foreground: 'hsl(var(--secondary-foreground))',
+                },
+                destructive: {
+                    DEFAULT: 'hsl(var(--destructive))',
+                    foreground: 'hsl(var(--destructive-foreground))',
+                },
+                muted: {
+                    DEFAULT: 'hsl(var(--muted))',
+                    foreground: 'hsl(var(--muted-foreground))',
+                },
+                accent: {
+                    DEFAULT: 'hsl(var(--accent))',
+                    foreground: 'hsl(var(--accent-foreground))',
+                },
+                popover: {
+                    DEFAULT: 'hsl(var(--popover))',
+                    foreground: 'hsl(var(--popover-foreground))',
+                },
+                card: {
+                    DEFAULT: 'hsl(var(--card))',
+                    foreground: 'hsl(var(--card-foreground))',
+                },
+            },
+            borderRadius: {
+                lg: 'var(--radius)',
+                md: 'calc(var(--radius) - 2px)',
+                sm: 'calc(var(--radius) - 4px)',
+            },
+            keyframes: {
+                'accordion-down': {
+                    from: { height: '0' },
+                    to: { height: 'var(--radix-accordion-content-height)' },
+                },
+                'accordion-up': {
+                    from: { height: 'var(--radix-accordion-content-height)' },
+                    to: { height: '0' },
+                },
+            },
+            animation: {
+                'accordion-down': 'accordion-down 0.2s ease-out',
+                'accordion-up': 'accordion-up 0.2s ease-out',
+            },
+        },
+    },
+    plugins: [require('tailwindcss-animate')],
+} satisfies Config;
+
+export default config;
diff --git a/tsconfig.json b/tsconfig.json
new file mode 100644
index 0000000..68bce00
--- /dev/null
+++ b/tsconfig.json
@@ -0,0 +1,26 @@
+{
+    "compilerOptions": {
+        "lib": ["dom", "dom.iterable", "esnext"],
+        "allowJs": true,
+        "skipLibCheck": true,
+        "strict": true,
+        "noEmit": true,
+        "esModuleInterop": true,
+        "module": "esnext",
+        "moduleResolution": "bundler",
+        "resolveJsonModule": true,
+        "isolatedModules": true,
+        "jsx": "preserve",
+        "incremental": true,
+        "plugins": [
+            {
+                "name": "next"
+            }
+        ],
+        "paths": {
+            "@/*": ["./src/*"]
+        }
+    },
+    "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
+    "exclude": ["node_modules"]
+}
